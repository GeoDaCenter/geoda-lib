import{_ as s,c as e,o as i,ag as t}from"./chunks/framework.kafl1dx7.js";const k=JSON.parse('{"title":"Function: getCartogram()","description":"","frontmatter":{},"headers":[],"relativePath":"api/core/src/functions/getCartogram.md","filePath":"api/core/src/functions/getCartogram.md","lastUpdated":1752605343000}'),r={name:"api/core/src/functions/getCartogram.md"};function n(o,a,l,h,p,c){return i(),e("div",null,a[0]||(a[0]=[t(`<p><a href="./../../../modules.html">geodalib</a> / <a href="./../">core/src</a> / getCartogram</p><h1 id="function-getcartogram" tabindex="-1">Function: getCartogram() <a class="header-anchor" href="#function-getcartogram" aria-label="Permalink to &quot;Function: getCartogram()&quot;">​</a></h1><blockquote><p><strong>getCartogram</strong>(<code>geoms</code>, <code>values</code>, <code>iterations</code>, <code>numberOfPointsPerCircle</code>): <code>Promise</code>&lt;<code>Feature</code>&lt;<code>Geometry</code>, <code>GeoJsonProperties</code>&gt;[]&gt;</p></blockquote><p>Defined in: <a href="https://github.com/GeoDaCenter/geoda-lib/blob/04471ecd75dbfe13a0a0fbff4b6e7d785ad0f8e7/js/packages/core/src/geometry/cartogram.ts#L28" target="_blank" rel="noreferrer">core/src/geometry/cartogram.ts:28</a></p><p>Get a cartogram of the given geometries and values. The cartogram is a set of buffers around the given geometries. The radius of the buffers is proportional to the values.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> geoms</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Point&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, coordinates: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Point&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, coordinates: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> values</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cartogram</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getCartogram</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(geoms, values);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cartogram);</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="geoms" tabindex="-1">geoms <a class="header-anchor" href="#geoms" aria-label="Permalink to &quot;geoms&quot;">​</a></h3><p><a href="./../type-aliases/SpatialGeometry.html"><code>SpatialGeometry</code></a></p><p>The geometries to get the cartogram of</p><h3 id="values" tabindex="-1">values <a class="header-anchor" href="#values" aria-label="Permalink to &quot;values&quot;">​</a></h3><p><code>number</code>[]</p><p>The values to use for the cartogram</p><h3 id="iterations" tabindex="-1">iterations <a class="header-anchor" href="#iterations" aria-label="Permalink to &quot;iterations&quot;">​</a></h3><p><code>number</code> = <code>100</code></p><p>The number of iterations to run the cartogram algorithm</p><h3 id="numberofpointspercircle" tabindex="-1">numberOfPointsPerCircle <a class="header-anchor" href="#numberofpointspercircle" aria-label="Permalink to &quot;numberOfPointsPerCircle&quot;">​</a></h3><p><code>number</code> = <code>30</code></p><p>The number of points per circle. This is used to control the granularity of the buffers.</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Promise</code>&lt;<code>Feature</code>&lt;<code>Geometry</code>, <code>GeoJsonProperties</code>&gt;[]&gt;</p><p>The cartogram as a GeoJSON FeatureCollection</p>`,23)]))}const g=s(r,[["render",n]]);export{k as __pageData,g as default};
