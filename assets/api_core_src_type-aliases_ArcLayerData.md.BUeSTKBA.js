import{_ as a,c as t,o,ag as r}from"./chunks/framework.kafl1dx7.js";const b=JSON.parse('{"title":"Type Alias: ArcLayerData","description":"","frontmatter":{},"headers":[],"relativePath":"api/core/src/type-aliases/ArcLayerData.md","filePath":"api/core/src/type-aliases/ArcLayerData.md","lastUpdated":1752605343000}'),c={name:"api/core/src/type-aliases/ArcLayerData.md"};function i(s,e,n,d,l,p){return o(),t("div",null,e[0]||(e[0]=[r('<p><a href="./../../../modules.html">geodalib</a> / <a href="./../">core/src</a> / ArcLayerData</p><h1 id="type-alias-arclayerdata" tabindex="-1">Type Alias: ArcLayerData <a class="header-anchor" href="#type-alias-arclayerdata" aria-label="Permalink to &quot;Type Alias: ArcLayerData&quot;">​</a></h1><blockquote><p><strong>ArcLayerData</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/GeoDaCenter/geoda-lib/blob/04471ecd75dbfe13a0a0fbff4b6e7d785ad0f8e7/js/packages/core/src/geometry/utils.ts#L24" target="_blank" rel="noreferrer">core/src/geometry/utils.ts:24</a></p><p>The type of the arc layer data. See ArcLayerData in kepler.gl</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="index" tabindex="-1">index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;index&quot;">​</a></h3><blockquote><p><strong>index</strong>: <code>number</code></p></blockquote><h3 id="sourceposition" tabindex="-1">sourcePosition <a class="header-anchor" href="#sourceposition" aria-label="Permalink to &quot;sourcePosition&quot;">​</a></h3><blockquote><p><strong>sourcePosition</strong>: [<code>number</code>, <code>number</code>, <code>number</code>]</p></blockquote><h3 id="targetposition" tabindex="-1">targetPosition <a class="header-anchor" href="#targetposition" aria-label="Permalink to &quot;targetPosition&quot;">​</a></h3><blockquote><p><strong>targetPosition</strong>: [<code>number</code>, <code>number</code>, <code>number</code>]</p></blockquote>',12)]))}const h=a(c,[["render",i]]);export{b as __pageData,h as default};
