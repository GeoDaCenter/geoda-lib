import{_ as s,c as i,o as e,ag as t}from"./chunks/framework.kafl1dx7.js";const c=JSON.parse('{"title":"Function: standardDeviationBreaks()","description":"","frontmatter":{},"headers":[],"relativePath":"api/core/src/functions/standardDeviationBreaks.md","filePath":"api/core/src/functions/standardDeviationBreaks.md","lastUpdated":1752605343000}'),n={name:"api/core/src/functions/standardDeviationBreaks.md"};function r(d,a,l,h,p,k){return e(),i("div",null,a[0]||(a[0]=[t(`<p><a href="./../../../modules.html">geodalib</a> / <a href="./../">core/src</a> / standardDeviationBreaks</p><h1 id="function-standarddeviationbreaks" tabindex="-1">Function: standardDeviationBreaks() <a class="header-anchor" href="#function-standarddeviationbreaks" aria-label="Permalink to &quot;Function: standardDeviationBreaks()&quot;">​</a></h1><blockquote><p><strong>standardDeviationBreaks</strong>(<code>data</code>): <code>Promise</code>&lt;<code>number</code>[]&gt;</p></blockquote><p>Defined in: <a href="https://github.com/GeoDaCenter/geoda-lib/blob/04471ecd75dbfe13a0a0fbff4b6e7d785ad0f8e7/js/packages/core/src/mapping/stddev-breaks.ts#L28" target="_blank" rel="noreferrer">core/src/mapping/stddev-breaks.ts:28</a></p><h2 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h2><p>The standard deviation breaks classes based on distance from the mean in standard deviation units. The standard deviation breaks include: &lt; -2 std dev, [-2, -1) std dev, [-1, 0) std dev, [0, 1] std dev, (1, 2] std dev, &gt; 2 std dev</p><h2 id="characteristics" tabindex="-1">Characteristics <a class="header-anchor" href="#characteristics" aria-label="Permalink to &quot;Characteristics&quot;">​</a></h2><ul><li>Centers on the mean value</li><li>Classes represent standard deviation intervals</li><li>Most appropriate for normally distributed data</li><li>Helps identify areas that deviate significantly from the mean</li></ul><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="data" tabindex="-1">data <a class="header-anchor" href="#data" aria-label="Permalink to &quot;data&quot;">​</a></h3><p>The numeric values to be classified.</p><p><code>number</code>[] | <code>Float32Array</code>&lt;<code>ArrayBufferLike</code>&gt;</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Promise</code>&lt;<code>number</code>[]&gt;</p><p>The breaks values.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { standardDeviationBreaks } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@geoda/core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> breaks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> standardDeviationBreaks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// breaks = [-0.47722557505166, 2.26138721247417, 5, 7.73861278752583, 10.47722557505166]</span></span></code></pre></div>`,17)]))}const g=s(n,[["render",r]]);export{c as __pageData,g as default};
