import{_ as a,c as o,o as t,ag as r}from"./chunks/framework.kafl1dx7.js";const b=JSON.parse('{"title":"Type Alias: BinaryGeometryType","description":"","frontmatter":{},"headers":[],"relativePath":"api/core/src/type-aliases/BinaryGeometryType.md","filePath":"api/core/src/type-aliases/BinaryGeometryType.md","lastUpdated":1752605343000}'),n={name:"api/core/src/type-aliases/BinaryGeometryType.md"};function i(l,e,p,s,y,c){return t(),o("div",null,e[0]||(e[0]=[r('<p><a href="./../../../modules.html">geodalib</a> / <a href="./../">core/src</a> / BinaryGeometryType</p><h1 id="type-alias-binarygeometrytype" tabindex="-1">Type Alias: BinaryGeometryType <a class="header-anchor" href="#type-alias-binarygeometrytype" aria-label="Permalink to &quot;Type Alias: BinaryGeometryType&quot;">​</a></h1><blockquote><p><strong>BinaryGeometryType</strong>: <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/GeoDaCenter/geoda-lib/blob/04471ecd75dbfe13a0a0fbff4b6e7d785ad0f8e7/js/packages/core/src/geometry/binary-geometry.ts#L18" target="_blank" rel="noreferrer">core/src/geometry/binary-geometry.ts:18</a></p><p>Defines the geometry types supported in binary format. See DeckGlGeoTypes in kepler.gl/layers</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><h3 id="line" tabindex="-1">line <a class="header-anchor" href="#line" aria-label="Permalink to &quot;line&quot;">​</a></h3><blockquote><p><strong>line</strong>: <code>boolean</code></p></blockquote><h3 id="point" tabindex="-1">point <a class="header-anchor" href="#point" aria-label="Permalink to &quot;point&quot;">​</a></h3><blockquote><p><strong>point</strong>: <code>boolean</code></p></blockquote><h3 id="polygon" tabindex="-1">polygon <a class="header-anchor" href="#polygon" aria-label="Permalink to &quot;polygon&quot;">​</a></h3><blockquote><p><strong>polygon</strong>: <code>boolean</code></p></blockquote>',12)]))}const h=a(n,[["render",i]]);export{b as __pageData,h as default};
