import{_ as o,c as r,o as t,ag as a}from"./chunks/framework.kafl1dx7.js";const y=JSON.parse('{"title":"Function: getGeometryCollectionFromBinaryGeometries()","description":"","frontmatter":{},"headers":[],"relativePath":"api/core/src/functions/getGeometryCollectionFromBinaryGeometries.md","filePath":"api/core/src/functions/getGeometryCollectionFromBinaryGeometries.md","lastUpdated":1752605343000}'),n={name:"api/core/src/functions/getGeometryCollectionFromBinaryGeometries.md"};function i(c,e,l,s,m,d){return t(),r("div",null,e[0]||(e[0]=[a('<p><a href="./../../../modules.html">geodalib</a> / <a href="./../">core/src</a> / getGeometryCollectionFromBinaryGeometries</p><h1 id="function-getgeometrycollectionfrombinarygeometries" tabindex="-1">Function: getGeometryCollectionFromBinaryGeometries() <a class="header-anchor" href="#function-getgeometrycollectionfrombinarygeometries" aria-label="Permalink to &quot;Function: getGeometryCollectionFromBinaryGeometries()&quot;">​</a></h1><blockquote><p><strong>getGeometryCollectionFromBinaryGeometries</strong>(<code>geometryType</code>, <code>binaryFeaturesChunks</code>, <code>wasm</code>, <code>fixPolygon</code>?, <code>convertToUTM</code>?): <code>Promise</code>&lt;<a href="./../classes/GeometryCollection.html"><code>GeometryCollection</code></a>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/GeoDaCenter/geoda-lib/blob/04471ecd75dbfe13a0a0fbff4b6e7d785ad0f8e7/js/packages/core/src/geometry/binary-geometry.ts#L32" target="_blank" rel="noreferrer">core/src/geometry/binary-geometry.ts:32</a></p><p>Creates a GeoDa GeometryCollection from binary geometry features</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="geometrytype" tabindex="-1">geometryType <a class="header-anchor" href="#geometrytype" aria-label="Permalink to &quot;geometryType&quot;">​</a></h3><p><a href="./../type-aliases/BinaryGeometryType.html"><code>BinaryGeometryType</code></a></p><p>The type of geometry to create</p><h3 id="binaryfeatureschunks" tabindex="-1">binaryFeaturesChunks <a class="header-anchor" href="#binaryfeatureschunks" aria-label="Permalink to &quot;binaryFeaturesChunks&quot;">​</a></h3><p><code>BinaryFeatureCollection</code>[]</p><p>Array of binary feature collections. See BinaryFeatureCollection in <code>@loaders.gl/schema</code></p><h3 id="wasm" tabindex="-1">wasm <a class="header-anchor" href="#wasm" aria-label="Permalink to &quot;wasm&quot;">​</a></h3><p><a href="./../interfaces/GeoDaInterface.html"><code>GeoDaInterface</code></a></p><p>The initialized GeoDa WASM module</p><h3 id="fixpolygon" tabindex="-1">fixPolygon? <a class="header-anchor" href="#fixpolygon" aria-label="Permalink to &quot;fixPolygon?&quot;">​</a></h3><p><code>boolean</code></p><h3 id="converttoutm" tabindex="-1">convertToUTM? <a class="header-anchor" href="#converttoutm" aria-label="Permalink to &quot;convertToUTM?&quot;">​</a></h3><p><code>boolean</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Promise</code>&lt;<a href="./../classes/GeometryCollection.html"><code>GeometryCollection</code></a>&gt;</p><p>A GeoDa geometry collection</p><h2 id="throws" tabindex="-1">Throws <a class="header-anchor" href="#throws" aria-label="Permalink to &quot;Throws&quot;">​</a></h2><p>If WASM module is not initialized or geometry type is unknown</p>',24)]))}const p=o(n,[["render",i]]);export{y as __pageData,p as default};
