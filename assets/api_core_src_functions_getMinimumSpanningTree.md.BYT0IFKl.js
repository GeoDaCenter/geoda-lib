import{_ as e,c as s,o as a,ag as t}from"./chunks/framework.kafl1dx7.js";const g=JSON.parse('{"title":"Function: getMinimumSpanningTree()","description":"","frontmatter":{},"headers":[],"relativePath":"api/core/src/functions/getMinimumSpanningTree.md","filePath":"api/core/src/functions/getMinimumSpanningTree.md","lastUpdated":1752605343000}'),n={name:"api/core/src/functions/getMinimumSpanningTree.md"};function r(h,i,p,l,o,k){return a(),s("div",null,i[0]||(i[0]=[t(`<p><a href="./../../../modules.html">geodalib</a> / <a href="./../">core/src</a> / getMinimumSpanningTree</p><h1 id="function-getminimumspanningtree" tabindex="-1">Function: getMinimumSpanningTree() <a class="header-anchor" href="#function-getminimumspanningtree" aria-label="Permalink to &quot;Function: getMinimumSpanningTree()&quot;">​</a></h1><blockquote><p><strong>getMinimumSpanningTree</strong>(<code>geoms</code>): <code>Promise</code>&lt;<code>Feature</code>&lt;<code>Geometry</code>, <code>GeoJsonProperties</code>&gt;[]&gt;</p></blockquote><p>Defined in: <a href="https://github.com/GeoDaCenter/geoda-lib/blob/04471ecd75dbfe13a0a0fbff4b6e7d785ad0f8e7/js/packages/core/src/geometry/mst.ts#L23" target="_blank" rel="noreferrer">core/src/geometry/mst.ts:23</a></p><p>Get the Minimum Spanning Tree for the given geometries. The Minimum Spanning Tree is a tree that connects all the geometries with the minimum total weight. For more information, see <a href="https://en.wikipedia.org/wiki/Minimum_spanning_tree" target="_blank" rel="noreferrer">Minimum Spanning Tree</a>.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> geoms</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Feature&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, geometry: { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Point&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, coordinates: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] } },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Feature&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, geometry: { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Point&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, coordinates: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] } },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Feature&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, geometry: { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Point&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, coordinates: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] } },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mst</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getMST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ geoms });</span></span></code></pre></div><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="geoms" tabindex="-1">geoms <a class="header-anchor" href="#geoms" aria-label="Permalink to &quot;geoms&quot;">​</a></h3><p>The geometries to get the Minimum Spanning Tree for</p><h4 id="geoms-1" tabindex="-1">geoms <a class="header-anchor" href="#geoms-1" aria-label="Permalink to &quot;geoms&quot;">​</a></h4><p><a href="./../type-aliases/SpatialGeometry.html"><code>SpatialGeometry</code></a></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Promise</code>&lt;<code>Feature</code>&lt;<code>Geometry</code>, <code>GeoJsonProperties</code>&gt;[]&gt;</p><p>The Minimum Spanning Tree</p>`,15)]))}const m=e(n,[["render",r]]);export{g as __pageData,m as default};
