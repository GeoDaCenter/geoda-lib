import{_ as i,c as a,o as e,ag as l}from"./chunks/framework.kafl1dx7.js";const g=JSON.parse('{"title":"GeoDa WASM","description":"","frontmatter":{},"headers":[],"relativePath":"api/index.md","filePath":"api/index.md","lastUpdated":1752605343000}'),t={name:"api/index.md"};function n(h,s,p,k,r,d){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="geoda-wasm" tabindex="-1">GeoDa WASM <a class="header-anchor" href="#geoda-wasm" aria-label="Permalink to &quot;GeoDa WASM&quot;">​</a></h1><p>GeoDa WASM is a WebAssembly module that provides spatial data analysis capabilities from the GeoDa C++ library for use in web browsers and Node.js applications.</p><h2 id="✨-features" tabindex="-1">✨ Features <a class="header-anchor" href="#✨-features" aria-label="Permalink to &quot;✨ Features&quot;">​</a></h2><p>@geoda/core</p><ul><li>🗺️ Mapping</li><li>📊 Data Exploration</li><li>⚖️ Spatial Weights</li><li>⚡ Spatial Operations</li></ul><p>@geoda/lisa</p><ul><li>📐 Spatial Autocorrelation Analysis</li></ul><p>@geoda/regression</p><ul><li>📈 Spatial Regression</li></ul><p>@geoda/clustering (WIP)</p><ul><li>📍 Spatial Clustering</li></ul><p>Dive deeper in our <a href="https://geodacenter.github.io/geoda-lib/api-overview" target="_blank" rel="noreferrer">API Overview</a>!</p><h2 id="🚀-installation" tabindex="-1">🚀 Installation <a class="header-anchor" href="#🚀-installation" aria-label="Permalink to &quot;🚀 Installation&quot;">​</a></h2><p>Get started in a flash with your favorite package manager:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @geoda/core</span></span></code></pre></div><p>Each package works independently, so you can install only the packages you need.</p><h2 id="🛠️-example" tabindex="-1">🛠️ Example <a class="header-anchor" href="#🛠️-example" aria-label="Permalink to &quot;🛠️ Example&quot;">​</a></h2><p>Here is a quick example of using GeoDaLib to apply Local Moran statistics on some example data:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {localMoran} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@geoda/lisa&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// exmaple data</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> neighbors</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> permutation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 99</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// call local moran</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> localMoran</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({data, neighbors, permutation});</span></span></code></pre></div><h2 id="🏗️-development" tabindex="-1">🏗️ Development <a class="header-anchor" href="#🏗️-development" aria-label="Permalink to &quot;🏗️ Development&quot;">​</a></h2><h3 id="📋-prerequisites" tabindex="-1">📋 Prerequisites <a class="header-anchor" href="#📋-prerequisites" aria-label="Permalink to &quot;📋 Prerequisites&quot;">​</a></h3><ul><li>CMake (3.5 or higher)</li><li>Emscripten</li><li>Node.js (22.11.0 recommended)</li><li>Yarn (4.0.0 recommended)</li></ul><h3 id="🛠️-build-steps" tabindex="-1">🛠️ Build Steps <a class="header-anchor" href="#🛠️-build-steps" aria-label="Permalink to &quot;🛠️ Build Steps&quot;">​</a></h3><ol><li>Clone the repository</li><li>Build the WASM module:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wasm</span></span></code></pre></div><ol start="3"><li>Build the JavaScript wrapper:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><ol start="4"><li>Run the tests:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre></div><h2 id="📜-license" tabindex="-1">📜 License <a class="header-anchor" href="#📜-license" aria-label="Permalink to &quot;📜 License&quot;">​</a></h2><p>This project is licensed under the MIT License. Authors: Luc Anselin and Xun Li.</p><h2 id="🤝-contributing" tabindex="-1">🤝 Contributing <a class="header-anchor" href="#🤝-contributing" aria-label="Permalink to &quot;🤝 Contributing&quot;">​</a></h2><p>Contributions are welcome! Please feel free to submit a Pull Request.</p>`,33)]))}const c=i(t,[["render",n]]);export{g as __pageData,c as default};
