{
  "version": 3,
  "sources": ["../wasm/index.cjs", "../src/init.ts", "../src/geometry/binary-geometry.ts", "../src/weights/distance-neighbors.ts", "../src/weights/nearest-neighbors.ts", "../src/weights/contiguity-neighbors.ts", "../src/weights/weights-stats.ts", "../src/utils.ts", "../src/sa/local-moran.ts", "../src/sa/local-g.ts", "../src/sa/local-geary.ts", "../src/sa/quantile-lisa.ts", "../src/sa/spatial-lag.ts", "../src/sa/rates.ts", "../src/mapping/quantile.ts", "../src/mapping/natural-breaks.ts", "../src/mapping/equal-interval-breaks.ts", "../src/mapping/percentile-breaks.ts", "../src/mapping/box-breaks.ts", "../src/mapping/stddev-breaks.ts", "../src/regression/linear-regression.ts"],
  "sourcesContent": ["\nvar geoda = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(geoda = {})  {\n\nvar Module = typeof geoda != \"undefined\" ? geoda : {};\n\nvar readyPromiseResolve, readyPromiseReject;\n\nModule[\"ready\"] = new Promise((resolve, reject) => {\n readyPromiseResolve = resolve;\n readyPromiseReject = reject;\n});\n\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\n\nvar thisProgram = \"./this.program\";\n\nvar quit_ = (status, toThrow) => {\n throw toThrow;\n};\n\nvar ENVIRONMENT_IS_WEB = typeof window == \"object\";\n\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == \"function\";\n\nvar ENVIRONMENT_IS_NODE = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\";\n\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nvar scriptDirectory = \"\";\n\nfunction locateFile(path) {\n if (Module[\"locateFile\"]) {\n  return Module[\"locateFile\"](path, scriptDirectory);\n }\n return scriptDirectory + path;\n}\n\nvar read_, readAsync, readBinary, setWindowTitle;\n\nif (ENVIRONMENT_IS_NODE) {\n var fs = require(\"fs\");\n var nodePath = require(\"path\");\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = nodePath.dirname(scriptDirectory) + \"/\";\n } else {\n  scriptDirectory = __dirname + \"/\";\n }\n read_ = (filename, binary) => {\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  return fs.readFileSync(filename, binary ? undefined : \"utf8\");\n };\n readBinary = filename => {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n   ret = new Uint8Array(ret);\n  }\n  return ret;\n };\n readAsync = (filename, onload, onerror, binary = true) => {\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  fs.readFile(filename, binary ? undefined : \"utf8\", (err, data) => {\n   if (err) onerror(err); else onload(binary ? data.buffer : data);\n  });\n };\n if (!Module[\"thisProgram\"] && process.argv.length > 1) {\n  thisProgram = process.argv[1].replace(/\\\\/g, \"/\");\n }\n arguments_ = process.argv.slice(2);\n quit_ = (status, toThrow) => {\n  process.exitCode = status;\n  throw toThrow;\n };\n Module[\"inspect\"] = () => \"[Emscripten Module object]\";\n} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = self.location.href;\n } else if (typeof document != \"undefined\" && document.currentScript) {\n  scriptDirectory = document.currentScript.src;\n }\n if (_scriptDir) {\n  scriptDirectory = _scriptDir;\n }\n if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n } else {\n  scriptDirectory = \"\";\n }\n {\n  read_ = url => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, false);\n   xhr.send(null);\n   return xhr.responseText;\n  };\n  if (ENVIRONMENT_IS_WORKER) {\n   readBinary = url => {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, false);\n    xhr.responseType = \"arraybuffer\";\n    xhr.send(null);\n    return new Uint8Array(xhr.response);\n   };\n  }\n  readAsync = (url, onload, onerror) => {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, true);\n   xhr.responseType = \"arraybuffer\";\n   xhr.onload = () => {\n    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n     onload(xhr.response);\n     return;\n    }\n    onerror();\n   };\n   xhr.onerror = onerror;\n   xhr.send(null);\n  };\n }\n setWindowTitle = title => document.title = title;\n} else {}\n\nvar out = Module[\"print\"] || console.log.bind(console);\n\nvar err = Module[\"printErr\"] || console.warn.bind(console);\n\nObject.assign(Module, moduleOverrides);\n\nmoduleOverrides = null;\n\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\n\nvar wasmBinary;\n\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n\nvar noExitRuntime = Module[\"noExitRuntime\"] || true;\n\nif (typeof WebAssembly != \"object\") {\n abort(\"no native wasm support detected\");\n}\n\nvar wasmMemory;\n\nvar ABORT = false;\n\nvar EXITSTATUS;\n\nfunction assert(condition, text) {\n if (!condition) {\n  abort(text);\n }\n}\n\nvar HEAP, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\nfunction updateMemoryViews() {\n var b = wasmMemory.buffer;\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(b);\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(b);\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(b);\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(b);\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(b);\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(b);\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(b);\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(b);\n}\n\nvar wasmTable;\n\nvar __ATPRERUN__ = [];\n\nvar __ATINIT__ = [];\n\nvar __ATEXIT__ = [];\n\nvar __ATPOSTRUN__ = [];\n\nvar runtimeInitialized = false;\n\nvar runtimeKeepaliveCounter = 0;\n\nfunction keepRuntimeAlive() {\n return noExitRuntime || runtimeKeepaliveCounter > 0;\n}\n\nfunction preRun() {\n if (Module[\"preRun\"]) {\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\n  while (Module[\"preRun\"].length) {\n   addOnPreRun(Module[\"preRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n runtimeInitialized = true;\n callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n if (Module[\"postRun\"]) {\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\n  while (Module[\"postRun\"].length) {\n   addOnPostRun(Module[\"postRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n __ATINIT__.unshift(cb);\n}\n\nfunction addOnExit(cb) {}\n\nfunction addOnPostRun(cb) {\n __ATPOSTRUN__.unshift(cb);\n}\n\nvar runDependencies = 0;\n\nvar runDependencyWatcher = null;\n\nvar dependenciesFulfilled = null;\n\nfunction getUniqueRunDependency(id) {\n return id;\n}\n\nfunction addRunDependency(id) {\n runDependencies++;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n}\n\nfunction removeRunDependency(id) {\n runDependencies--;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (runDependencies == 0) {\n  if (runDependencyWatcher !== null) {\n   clearInterval(runDependencyWatcher);\n   runDependencyWatcher = null;\n  }\n  if (dependenciesFulfilled) {\n   var callback = dependenciesFulfilled;\n   dependenciesFulfilled = null;\n   callback();\n  }\n }\n}\n\nfunction abort(what) {\n if (Module[\"onAbort\"]) {\n  Module[\"onAbort\"](what);\n }\n what = \"Aborted(\" + what + \")\";\n err(what);\n ABORT = true;\n EXITSTATUS = 1;\n what += \". Build with -sASSERTIONS for more info.\";\n var e = new WebAssembly.RuntimeError(what);\n readyPromiseReject(e);\n throw e;\n}\n\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\nfunction isDataURI(filename) {\n return filename.startsWith(dataURIPrefix);\n}\n\nfunction isFileURI(filename) {\n return filename.startsWith(\"file://\");\n}\n\nvar wasmBinaryFile;\n\nwasmBinaryFile = \"geoda.wasm\";\n\nif (!isDataURI(wasmBinaryFile)) {\n wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary(file) {\n try {\n  if (file == wasmBinaryFile && wasmBinary) {\n   return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n   return readBinary(file);\n  }\n  throw \"both async and sync fetching of the wasm failed\";\n } catch (err) {\n  abort(err);\n }\n}\n\nfunction getBinaryPromise(binaryFile) {\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n  if (typeof fetch == \"function\" && !isFileURI(binaryFile)) {\n   return fetch(binaryFile, {\n    credentials: \"same-origin\"\n   }).then(response => {\n    if (!response[\"ok\"]) {\n     throw \"failed to load wasm binary file at '\" + binaryFile + \"'\";\n    }\n    return response[\"arrayBuffer\"]();\n   }).catch(() => getBinary(binaryFile));\n  } else {\n   if (readAsync) {\n    return new Promise((resolve, reject) => {\n     readAsync(binaryFile, response => resolve(new Uint8Array(response)), reject);\n    });\n   }\n  }\n }\n return Promise.resolve().then(() => getBinary(binaryFile));\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n return getBinaryPromise(binaryFile).then(binary => {\n  return WebAssembly.instantiate(binary, imports);\n }).then(instance => {\n  return instance;\n }).then(receiver, reason => {\n  err(\"failed to asynchronously prepare wasm: \" + reason);\n  abort(reason);\n });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n if (!binary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(binaryFile) && !isFileURI(binaryFile) && !ENVIRONMENT_IS_NODE && typeof fetch == \"function\") {\n  return fetch(binaryFile, {\n   credentials: \"same-origin\"\n  }).then(response => {\n   var result = WebAssembly.instantiateStreaming(response, imports);\n   return result.then(callback, function(reason) {\n    err(\"wasm streaming compile failed: \" + reason);\n    err(\"falling back to ArrayBuffer instantiation\");\n    return instantiateArrayBuffer(binaryFile, imports, callback);\n   });\n  });\n } else {\n  return instantiateArrayBuffer(binaryFile, imports, callback);\n }\n}\n\nfunction createWasm() {\n var info = {\n  \"env\": wasmImports,\n  \"wasi_snapshot_preview1\": wasmImports\n };\n function receiveInstance(instance, module) {\n  var exports = instance.exports;\n  Module[\"asm\"] = exports;\n  wasmMemory = Module[\"asm\"][\"memory\"];\n  updateMemoryViews();\n  wasmTable = Module[\"asm\"][\"__indirect_function_table\"];\n  addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);\n  removeRunDependency(\"wasm-instantiate\");\n  return exports;\n }\n addRunDependency(\"wasm-instantiate\");\n function receiveInstantiationResult(result) {\n  receiveInstance(result[\"instance\"]);\n }\n if (Module[\"instantiateWasm\"]) {\n  try {\n   return Module[\"instantiateWasm\"](info, receiveInstance);\n  } catch (e) {\n   err(\"Module.instantiateWasm callback failed with error: \" + e);\n   readyPromiseReject(e);\n  }\n }\n instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n return {};\n}\n\nvar tempDouble;\n\nvar tempI64;\n\nfunction ExitStatus(status) {\n this.name = \"ExitStatus\";\n this.message = \"Program terminated with exit(\" + status + \")\";\n this.status = status;\n}\n\nfunction callRuntimeCallbacks(callbacks) {\n while (callbacks.length > 0) {\n  callbacks.shift()(Module);\n }\n}\n\nfunction getValue(ptr, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  return HEAP8[ptr >>> 0];\n\n case \"i8\":\n  return HEAP8[ptr >>> 0];\n\n case \"i16\":\n  return HEAP16[ptr >>> 1];\n\n case \"i32\":\n  return HEAP32[ptr >>> 2];\n\n case \"i64\":\n  return HEAP32[ptr >>> 2];\n\n case \"float\":\n  return HEAPF32[ptr >>> 2];\n\n case \"double\":\n  return HEAPF64[ptr >>> 3];\n\n case \"*\":\n  return HEAPU32[ptr >>> 2];\n\n default:\n  abort(\"invalid type for getValue: \" + type);\n }\n}\n\nfunction setValue(ptr, value, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  HEAP8[ptr >>> 0] = value;\n  break;\n\n case \"i8\":\n  HEAP8[ptr >>> 0] = value;\n  break;\n\n case \"i16\":\n  HEAP16[ptr >>> 1] = value;\n  break;\n\n case \"i32\":\n  HEAP32[ptr >>> 2] = value;\n  break;\n\n case \"i64\":\n  tempI64 = [ value >>> 0, (tempDouble = value, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n  HEAP32[ptr >>> 2] = tempI64[0], HEAP32[ptr + 4 >>> 2] = tempI64[1];\n  break;\n\n case \"float\":\n  HEAPF32[ptr >>> 2] = value;\n  break;\n\n case \"double\":\n  HEAPF64[ptr >>> 3] = value;\n  break;\n\n case \"*\":\n  HEAPU32[ptr >>> 2] = value;\n  break;\n\n default:\n  abort(\"invalid type for setValue: \" + type);\n }\n}\n\nvar exceptionCaught = [];\n\nvar exceptionLast = 0;\n\nvar uncaughtExceptionCount = 0;\n\nfunction ___cxa_rethrow() {\n var info = exceptionCaught.pop();\n if (!info) {\n  abort(\"no exception to throw\");\n }\n var ptr = info.excPtr;\n if (!info.get_rethrown()) {\n  exceptionCaught.push(info);\n  info.set_rethrown(true);\n  info.set_caught(false);\n  uncaughtExceptionCount++;\n }\n exceptionLast = ptr;\n throw exceptionLast;\n}\n\nfunction ExceptionInfo(excPtr) {\n this.excPtr = excPtr;\n this.ptr = excPtr - 24;\n this.set_type = function(type) {\n  HEAPU32[this.ptr + 4 >>> 2] = type;\n };\n this.get_type = function() {\n  return HEAPU32[this.ptr + 4 >>> 2];\n };\n this.set_destructor = function(destructor) {\n  HEAPU32[this.ptr + 8 >>> 2] = destructor;\n };\n this.get_destructor = function() {\n  return HEAPU32[this.ptr + 8 >>> 2];\n };\n this.set_caught = function(caught) {\n  caught = caught ? 1 : 0;\n  HEAP8[this.ptr + 12 >>> 0] = caught;\n };\n this.get_caught = function() {\n  return HEAP8[this.ptr + 12 >>> 0] != 0;\n };\n this.set_rethrown = function(rethrown) {\n  rethrown = rethrown ? 1 : 0;\n  HEAP8[this.ptr + 13 >>> 0] = rethrown;\n };\n this.get_rethrown = function() {\n  return HEAP8[this.ptr + 13 >>> 0] != 0;\n };\n this.init = function(type, destructor) {\n  this.set_adjusted_ptr(0);\n  this.set_type(type);\n  this.set_destructor(destructor);\n };\n this.set_adjusted_ptr = function(adjustedPtr) {\n  HEAPU32[this.ptr + 16 >>> 2] = adjustedPtr;\n };\n this.get_adjusted_ptr = function() {\n  return HEAPU32[this.ptr + 16 >>> 2];\n };\n this.get_exception_ptr = function() {\n  var isPointer = ___cxa_is_pointer_type(this.get_type());\n  if (isPointer) {\n   return HEAPU32[this.excPtr >>> 2];\n  }\n  var adjusted = this.get_adjusted_ptr();\n  if (adjusted !== 0) return adjusted;\n  return this.excPtr;\n };\n}\n\nfunction ___cxa_throw(ptr, type, destructor) {\n var info = new ExceptionInfo(ptr);\n info.init(type, destructor);\n exceptionLast = ptr;\n uncaughtExceptionCount++;\n throw exceptionLast;\n}\n\nvar UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n idx >>>= 0;\n var endIdx = idx + maxBytesToRead;\n var endPtr = idx;\n while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n  return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n }\n var str = \"\";\n while (idx < endPtr) {\n  var u0 = heapOrArray[idx++];\n  if (!(u0 & 128)) {\n   str += String.fromCharCode(u0);\n   continue;\n  }\n  var u1 = heapOrArray[idx++] & 63;\n  if ((u0 & 224) == 192) {\n   str += String.fromCharCode((u0 & 31) << 6 | u1);\n   continue;\n  }\n  var u2 = heapOrArray[idx++] & 63;\n  if ((u0 & 240) == 224) {\n   u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n  } else {\n   u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n  }\n  if (u0 < 65536) {\n   str += String.fromCharCode(u0);\n  } else {\n   var ch = u0 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  }\n }\n return str;\n}\n\nfunction UTF8ToString(ptr, maxBytesToRead) {\n ptr >>>= 0;\n return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n}\n\nvar SYSCALLS = {\n varargs: undefined,\n get: function() {\n  SYSCALLS.varargs += 4;\n  var ret = HEAP32[SYSCALLS.varargs - 4 >>> 2];\n  return ret;\n },\n getStr: function(ptr) {\n  var ret = UTF8ToString(ptr);\n  return ret;\n }\n};\n\nfunction ___syscall_dup3(fd, suggestFD, flags) {}\n\nfunction ___syscall_faccessat(dirfd, path, amode, flags) {}\n\nfunction setErrNo(value) {\n HEAP32[___errno_location() >>> 2] = value;\n return value;\n}\n\nfunction ___syscall_fcntl64(fd, cmd, varargs) {\n SYSCALLS.varargs = varargs;\n return 0;\n}\n\nfunction ___syscall_fstat64(fd, buf) {}\n\nfunction convertI32PairToI53Checked(lo, hi) {\n return hi + 2097152 >>> 0 < 4194305 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;\n}\n\nfunction ___syscall_ftruncate64(fd, length_low, length_high) {}\n\nfunction ___syscall_ioctl(fd, op, varargs) {\n SYSCALLS.varargs = varargs;\n return 0;\n}\n\nfunction ___syscall_lstat64(path, buf) {}\n\nfunction ___syscall_newfstatat(dirfd, path, buf, flags) {}\n\nfunction ___syscall_openat(dirfd, path, flags, varargs) {\n SYSCALLS.varargs = varargs;\n}\n\nfunction ___syscall_stat64(path, buf) {}\n\nfunction ___syscall_unlinkat(dirfd, path, flags) {}\n\nfunction __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {}\n\nfunction getShiftFromSize(size) {\n switch (size) {\n case 1:\n  return 0;\n\n case 2:\n  return 1;\n\n case 4:\n  return 2;\n\n case 8:\n  return 3;\n\n default:\n  throw new TypeError(\"Unknown type size: \" + size);\n }\n}\n\nfunction embind_init_charCodes() {\n var codes = new Array(256);\n for (var i = 0; i < 256; ++i) {\n  codes[i] = String.fromCharCode(i);\n }\n embind_charCodes = codes;\n}\n\nvar embind_charCodes = undefined;\n\nfunction readLatin1String(ptr) {\n var ret = \"\";\n var c = ptr;\n while (HEAPU8[c >>> 0]) {\n  ret += embind_charCodes[HEAPU8[c++ >>> 0]];\n }\n return ret;\n}\n\nvar awaitingDependencies = {};\n\nvar registeredTypes = {};\n\nvar typeDependencies = {};\n\nvar char_0 = 48;\n\nvar char_9 = 57;\n\nfunction makeLegalFunctionName(name) {\n if (undefined === name) {\n  return \"_unknown\";\n }\n name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n var f = name.charCodeAt(0);\n if (f >= char_0 && f <= char_9) {\n  return \"_\" + name;\n }\n return name;\n}\n\nfunction createNamedFunction(name, body) {\n name = makeLegalFunctionName(name);\n return {\n  [name]: function() {\n   return body.apply(this, arguments);\n  }\n }[name];\n}\n\nfunction extendError(baseErrorType, errorName) {\n var errorClass = createNamedFunction(errorName, function(message) {\n  this.name = errorName;\n  this.message = message;\n  var stack = new Error(message).stack;\n  if (stack !== undefined) {\n   this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n  }\n });\n errorClass.prototype = Object.create(baseErrorType.prototype);\n errorClass.prototype.constructor = errorClass;\n errorClass.prototype.toString = function() {\n  if (this.message === undefined) {\n   return this.name;\n  } else {\n   return this.name + \": \" + this.message;\n  }\n };\n return errorClass;\n}\n\nvar BindingError = undefined;\n\nfunction throwBindingError(message) {\n throw new BindingError(message);\n}\n\nvar InternalError = undefined;\n\nfunction throwInternalError(message) {\n throw new InternalError(message);\n}\n\nfunction whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n myTypes.forEach(function(type) {\n  typeDependencies[type] = dependentTypes;\n });\n function onComplete(typeConverters) {\n  var myTypeConverters = getTypeConverters(typeConverters);\n  if (myTypeConverters.length !== myTypes.length) {\n   throwInternalError(\"Mismatched type converter count\");\n  }\n  for (var i = 0; i < myTypes.length; ++i) {\n   registerType(myTypes[i], myTypeConverters[i]);\n  }\n }\n var typeConverters = new Array(dependentTypes.length);\n var unregisteredTypes = [];\n var registered = 0;\n dependentTypes.forEach((dt, i) => {\n  if (registeredTypes.hasOwnProperty(dt)) {\n   typeConverters[i] = registeredTypes[dt];\n  } else {\n   unregisteredTypes.push(dt);\n   if (!awaitingDependencies.hasOwnProperty(dt)) {\n    awaitingDependencies[dt] = [];\n   }\n   awaitingDependencies[dt].push(() => {\n    typeConverters[i] = registeredTypes[dt];\n    ++registered;\n    if (registered === unregisteredTypes.length) {\n     onComplete(typeConverters);\n    }\n   });\n  }\n });\n if (0 === unregisteredTypes.length) {\n  onComplete(typeConverters);\n }\n}\n\nfunction registerType(rawType, registeredInstance, options = {}) {\n if (!(\"argPackAdvance\" in registeredInstance)) {\n  throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n }\n var name = registeredInstance.name;\n if (!rawType) {\n  throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n }\n if (registeredTypes.hasOwnProperty(rawType)) {\n  if (options.ignoreDuplicateRegistrations) {\n   return;\n  } else {\n   throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n  }\n }\n registeredTypes[rawType] = registeredInstance;\n delete typeDependencies[rawType];\n if (awaitingDependencies.hasOwnProperty(rawType)) {\n  var callbacks = awaitingDependencies[rawType];\n  delete awaitingDependencies[rawType];\n  callbacks.forEach(cb => cb());\n }\n}\n\nfunction __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(wt) {\n   return !!wt;\n  },\n  \"toWireType\": function(destructors, o) {\n   return o ? trueValue : falseValue;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": function(pointer) {\n   var heap;\n   if (size === 1) {\n    heap = HEAP8;\n   } else if (size === 2) {\n    heap = HEAP16;\n   } else if (size === 4) {\n    heap = HEAP32;\n   } else {\n    throw new TypeError(\"Unknown boolean type size: \" + name);\n   }\n   return this[\"fromWireType\"](heap[pointer >>> shift]);\n  },\n  destructorFunction: null\n });\n}\n\nfunction ClassHandle_isAliasOf(other) {\n if (!(this instanceof ClassHandle)) {\n  return false;\n }\n if (!(other instanceof ClassHandle)) {\n  return false;\n }\n var leftClass = this.$$.ptrType.registeredClass;\n var left = this.$$.ptr;\n var rightClass = other.$$.ptrType.registeredClass;\n var right = other.$$.ptr;\n while (leftClass.baseClass) {\n  left = leftClass.upcast(left);\n  leftClass = leftClass.baseClass;\n }\n while (rightClass.baseClass) {\n  right = rightClass.upcast(right);\n  rightClass = rightClass.baseClass;\n }\n return leftClass === rightClass && left === right;\n}\n\nfunction shallowCopyInternalPointer(o) {\n return {\n  count: o.count,\n  deleteScheduled: o.deleteScheduled,\n  preservePointerOnDelete: o.preservePointerOnDelete,\n  ptr: o.ptr,\n  ptrType: o.ptrType,\n  smartPtr: o.smartPtr,\n  smartPtrType: o.smartPtrType\n };\n}\n\nfunction throwInstanceAlreadyDeleted(obj) {\n function getInstanceTypeName(handle) {\n  return handle.$$.ptrType.registeredClass.name;\n }\n throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n}\n\nvar finalizationRegistry = false;\n\nfunction detachFinalizer(handle) {}\n\nfunction runDestructor($$) {\n if ($$.smartPtr) {\n  $$.smartPtrType.rawDestructor($$.smartPtr);\n } else {\n  $$.ptrType.registeredClass.rawDestructor($$.ptr);\n }\n}\n\nfunction releaseClassHandle($$) {\n $$.count.value -= 1;\n var toDelete = 0 === $$.count.value;\n if (toDelete) {\n  runDestructor($$);\n }\n}\n\nfunction downcastPointer(ptr, ptrClass, desiredClass) {\n if (ptrClass === desiredClass) {\n  return ptr;\n }\n if (undefined === desiredClass.baseClass) {\n  return null;\n }\n var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n if (rv === null) {\n  return null;\n }\n return desiredClass.downcast(rv);\n}\n\nvar registeredPointers = {};\n\nfunction getInheritedInstanceCount() {\n return Object.keys(registeredInstances).length;\n}\n\nfunction getLiveInheritedInstances() {\n var rv = [];\n for (var k in registeredInstances) {\n  if (registeredInstances.hasOwnProperty(k)) {\n   rv.push(registeredInstances[k]);\n  }\n }\n return rv;\n}\n\nvar deletionQueue = [];\n\nfunction flushPendingDeletes() {\n while (deletionQueue.length) {\n  var obj = deletionQueue.pop();\n  obj.$$.deleteScheduled = false;\n  obj[\"delete\"]();\n }\n}\n\nvar delayFunction = undefined;\n\nfunction setDelayFunction(fn) {\n delayFunction = fn;\n if (deletionQueue.length && delayFunction) {\n  delayFunction(flushPendingDeletes);\n }\n}\n\nfunction init_embind() {\n Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n Module[\"setDelayFunction\"] = setDelayFunction;\n}\n\nvar registeredInstances = {};\n\nfunction getBasestPointer(class_, ptr) {\n if (ptr === undefined) {\n  throwBindingError(\"ptr should not be undefined\");\n }\n while (class_.baseClass) {\n  ptr = class_.upcast(ptr);\n  class_ = class_.baseClass;\n }\n return ptr;\n}\n\nfunction getInheritedInstance(class_, ptr) {\n ptr = getBasestPointer(class_, ptr);\n return registeredInstances[ptr];\n}\n\nfunction makeClassHandle(prototype, record) {\n if (!record.ptrType || !record.ptr) {\n  throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n }\n var hasSmartPtrType = !!record.smartPtrType;\n var hasSmartPtr = !!record.smartPtr;\n if (hasSmartPtrType !== hasSmartPtr) {\n  throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n }\n record.count = {\n  value: 1\n };\n return attachFinalizer(Object.create(prototype, {\n  $$: {\n   value: record\n  }\n }));\n}\n\nfunction RegisteredPointer_fromWireType(ptr) {\n var rawPointer = this.getPointee(ptr);\n if (!rawPointer) {\n  this.destructor(ptr);\n  return null;\n }\n var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n if (undefined !== registeredInstance) {\n  if (0 === registeredInstance.$$.count.value) {\n   registeredInstance.$$.ptr = rawPointer;\n   registeredInstance.$$.smartPtr = ptr;\n   return registeredInstance[\"clone\"]();\n  } else {\n   var rv = registeredInstance[\"clone\"]();\n   this.destructor(ptr);\n   return rv;\n  }\n }\n function makeDefaultHandle() {\n  if (this.isSmartPointer) {\n   return makeClassHandle(this.registeredClass.instancePrototype, {\n    ptrType: this.pointeeType,\n    ptr: rawPointer,\n    smartPtrType: this,\n    smartPtr: ptr\n   });\n  } else {\n   return makeClassHandle(this.registeredClass.instancePrototype, {\n    ptrType: this,\n    ptr: ptr\n   });\n  }\n }\n var actualType = this.registeredClass.getActualType(rawPointer);\n var registeredPointerRecord = registeredPointers[actualType];\n if (!registeredPointerRecord) {\n  return makeDefaultHandle.call(this);\n }\n var toType;\n if (this.isConst) {\n  toType = registeredPointerRecord.constPointerType;\n } else {\n  toType = registeredPointerRecord.pointerType;\n }\n var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n if (dp === null) {\n  return makeDefaultHandle.call(this);\n }\n if (this.isSmartPointer) {\n  return makeClassHandle(toType.registeredClass.instancePrototype, {\n   ptrType: toType,\n   ptr: dp,\n   smartPtrType: this,\n   smartPtr: ptr\n  });\n } else {\n  return makeClassHandle(toType.registeredClass.instancePrototype, {\n   ptrType: toType,\n   ptr: dp\n  });\n }\n}\n\nfunction attachFinalizer(handle) {\n if (\"undefined\" === typeof FinalizationRegistry) {\n  attachFinalizer = handle => handle;\n  return handle;\n }\n finalizationRegistry = new FinalizationRegistry(info => {\n  releaseClassHandle(info.$$);\n });\n attachFinalizer = handle => {\n  var $$ = handle.$$;\n  var hasSmartPtr = !!$$.smartPtr;\n  if (hasSmartPtr) {\n   var info = {\n    $$: $$\n   };\n   finalizationRegistry.register(handle, info, handle);\n  }\n  return handle;\n };\n detachFinalizer = handle => finalizationRegistry.unregister(handle);\n return attachFinalizer(handle);\n}\n\nfunction ClassHandle_clone() {\n if (!this.$$.ptr) {\n  throwInstanceAlreadyDeleted(this);\n }\n if (this.$$.preservePointerOnDelete) {\n  this.$$.count.value += 1;\n  return this;\n } else {\n  var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n   $$: {\n    value: shallowCopyInternalPointer(this.$$)\n   }\n  }));\n  clone.$$.count.value += 1;\n  clone.$$.deleteScheduled = false;\n  return clone;\n }\n}\n\nfunction ClassHandle_delete() {\n if (!this.$$.ptr) {\n  throwInstanceAlreadyDeleted(this);\n }\n if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n  throwBindingError(\"Object already scheduled for deletion\");\n }\n detachFinalizer(this);\n releaseClassHandle(this.$$);\n if (!this.$$.preservePointerOnDelete) {\n  this.$$.smartPtr = undefined;\n  this.$$.ptr = undefined;\n }\n}\n\nfunction ClassHandle_isDeleted() {\n return !this.$$.ptr;\n}\n\nfunction ClassHandle_deleteLater() {\n if (!this.$$.ptr) {\n  throwInstanceAlreadyDeleted(this);\n }\n if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n  throwBindingError(\"Object already scheduled for deletion\");\n }\n deletionQueue.push(this);\n if (deletionQueue.length === 1 && delayFunction) {\n  delayFunction(flushPendingDeletes);\n }\n this.$$.deleteScheduled = true;\n return this;\n}\n\nfunction init_ClassHandle() {\n ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n}\n\nfunction ClassHandle() {}\n\nfunction ensureOverloadTable(proto, methodName, humanName) {\n if (undefined === proto[methodName].overloadTable) {\n  var prevFunc = proto[methodName];\n  proto[methodName] = function() {\n   if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n    throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n   }\n   return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n  };\n  proto[methodName].overloadTable = [];\n  proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n }\n}\n\nfunction exposePublicSymbol(name, value, numArguments) {\n if (Module.hasOwnProperty(name)) {\n  if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {\n   throwBindingError(\"Cannot register public name '\" + name + \"' twice\");\n  }\n  ensureOverloadTable(Module, name, name);\n  if (Module.hasOwnProperty(numArguments)) {\n   throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n  }\n  Module[name].overloadTable[numArguments] = value;\n } else {\n  Module[name] = value;\n  if (undefined !== numArguments) {\n   Module[name].numArguments = numArguments;\n  }\n }\n}\n\nfunction RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n this.name = name;\n this.constructor = constructor;\n this.instancePrototype = instancePrototype;\n this.rawDestructor = rawDestructor;\n this.baseClass = baseClass;\n this.getActualType = getActualType;\n this.upcast = upcast;\n this.downcast = downcast;\n this.pureVirtualFunctions = [];\n}\n\nfunction upcastPointer(ptr, ptrClass, desiredClass) {\n while (ptrClass !== desiredClass) {\n  if (!ptrClass.upcast) {\n   throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n  }\n  ptr = ptrClass.upcast(ptr);\n  ptrClass = ptrClass.baseClass;\n }\n return ptr;\n}\n\nfunction constNoSmartPtrRawPointerToWireType(destructors, handle) {\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(\"null is not a valid \" + this.name);\n  }\n  return 0;\n }\n if (!handle.$$) {\n  throwBindingError('Cannot pass \"' + embindRepr(handle) + '\" as a ' + this.name);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n return ptr;\n}\n\nfunction genericPointerToWireType(destructors, handle) {\n var ptr;\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(\"null is not a valid \" + this.name);\n  }\n  if (this.isSmartPointer) {\n   ptr = this.rawConstructor();\n   if (destructors !== null) {\n    destructors.push(this.rawDestructor, ptr);\n   }\n   return ptr;\n  } else {\n   return 0;\n  }\n }\n if (!handle.$$) {\n  throwBindingError('Cannot pass \"' + embindRepr(handle) + '\" as a ' + this.name);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n }\n if (!this.isConst && handle.$$.ptrType.isConst) {\n  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n if (this.isSmartPointer) {\n  if (undefined === handle.$$.smartPtr) {\n   throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n  }\n  switch (this.sharingPolicy) {\n  case 0:\n   if (handle.$$.smartPtrType === this) {\n    ptr = handle.$$.smartPtr;\n   } else {\n    throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n   }\n   break;\n\n  case 1:\n   ptr = handle.$$.smartPtr;\n   break;\n\n  case 2:\n   if (handle.$$.smartPtrType === this) {\n    ptr = handle.$$.smartPtr;\n   } else {\n    var clonedHandle = handle[\"clone\"]();\n    ptr = this.rawShare(ptr, Emval.toHandle(function() {\n     clonedHandle[\"delete\"]();\n    }));\n    if (destructors !== null) {\n     destructors.push(this.rawDestructor, ptr);\n    }\n   }\n   break;\n\n  default:\n   throwBindingError(\"Unsupporting sharing policy\");\n  }\n }\n return ptr;\n}\n\nfunction nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(\"null is not a valid \" + this.name);\n  }\n  return 0;\n }\n if (!handle.$$) {\n  throwBindingError('Cannot pass \"' + embindRepr(handle) + '\" as a ' + this.name);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n }\n if (handle.$$.ptrType.isConst) {\n  throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n return ptr;\n}\n\nfunction simpleReadValueFromPointer(pointer) {\n return this[\"fromWireType\"](HEAP32[pointer >>> 2]);\n}\n\nfunction RegisteredPointer_getPointee(ptr) {\n if (this.rawGetPointee) {\n  ptr = this.rawGetPointee(ptr);\n }\n return ptr;\n}\n\nfunction RegisteredPointer_destructor(ptr) {\n if (this.rawDestructor) {\n  this.rawDestructor(ptr);\n }\n}\n\nfunction RegisteredPointer_deleteObject(handle) {\n if (handle !== null) {\n  handle[\"delete\"]();\n }\n}\n\nfunction init_RegisteredPointer() {\n RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n}\n\nfunction RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n this.name = name;\n this.registeredClass = registeredClass;\n this.isReference = isReference;\n this.isConst = isConst;\n this.isSmartPointer = isSmartPointer;\n this.pointeeType = pointeeType;\n this.sharingPolicy = sharingPolicy;\n this.rawGetPointee = rawGetPointee;\n this.rawConstructor = rawConstructor;\n this.rawShare = rawShare;\n this.rawDestructor = rawDestructor;\n if (!isSmartPointer && registeredClass.baseClass === undefined) {\n  if (isConst) {\n   this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n   this.destructorFunction = null;\n  } else {\n   this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n   this.destructorFunction = null;\n  }\n } else {\n  this[\"toWireType\"] = genericPointerToWireType;\n }\n}\n\nfunction replacePublicSymbol(name, value, numArguments) {\n if (!Module.hasOwnProperty(name)) {\n  throwInternalError(\"Replacing nonexistant public symbol\");\n }\n if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n  Module[name].overloadTable[numArguments] = value;\n } else {\n  Module[name] = value;\n  Module[name].argCount = numArguments;\n }\n}\n\nfunction dynCallLegacy(sig, ptr, args) {\n var f = Module[\"dynCall_\" + sig];\n return args && args.length ? f.apply(null, [ ptr ].concat(args)) : f.call(null, ptr);\n}\n\nvar wasmTableMirror = [];\n\nfunction getWasmTableEntry(funcPtr) {\n var func = wasmTableMirror[funcPtr];\n if (!func) {\n  if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n  wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n }\n return func;\n}\n\nfunction dynCall(sig, ptr, args) {\n if (sig.includes(\"j\")) {\n  return dynCallLegacy(sig, ptr, args);\n }\n var rtn = getWasmTableEntry(ptr).apply(null, args);\n return rtn;\n}\n\nfunction getDynCaller(sig, ptr) {\n var argCache = [];\n return function() {\n  argCache.length = 0;\n  Object.assign(argCache, arguments);\n  return dynCall(sig, ptr, argCache);\n };\n}\n\nfunction embind__requireFunction(signature, rawFunction) {\n signature = readLatin1String(signature);\n function makeDynCaller() {\n  if (signature.includes(\"j\")) {\n   return getDynCaller(signature, rawFunction);\n  }\n  return getWasmTableEntry(rawFunction);\n }\n var fp = makeDynCaller();\n if (typeof fp != \"function\") {\n  throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n }\n return fp;\n}\n\nvar UnboundTypeError = undefined;\n\nfunction getTypeName(type) {\n var ptr = ___getTypeName(type);\n var rv = readLatin1String(ptr);\n _free(ptr);\n return rv;\n}\n\nfunction throwUnboundTypeError(message, types) {\n var unboundTypes = [];\n var seen = {};\n function visit(type) {\n  if (seen[type]) {\n   return;\n  }\n  if (registeredTypes[type]) {\n   return;\n  }\n  if (typeDependencies[type]) {\n   typeDependencies[type].forEach(visit);\n   return;\n  }\n  unboundTypes.push(type);\n  seen[type] = true;\n }\n types.forEach(visit);\n throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([ \", \" ]));\n}\n\nfunction __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {\n name = readLatin1String(name);\n getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n if (upcast) {\n  upcast = embind__requireFunction(upcastSignature, upcast);\n }\n if (downcast) {\n  downcast = embind__requireFunction(downcastSignature, downcast);\n }\n rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n var legalFunctionName = makeLegalFunctionName(name);\n exposePublicSymbol(legalFunctionName, function() {\n  throwUnboundTypeError(\"Cannot construct \" + name + \" due to unbound types\", [ baseClassRawType ]);\n });\n whenDependentTypesAreResolved([ rawType, rawPointerType, rawConstPointerType ], baseClassRawType ? [ baseClassRawType ] : [], function(base) {\n  base = base[0];\n  var baseClass;\n  var basePrototype;\n  if (baseClassRawType) {\n   baseClass = base.registeredClass;\n   basePrototype = baseClass.instancePrototype;\n  } else {\n   basePrototype = ClassHandle.prototype;\n  }\n  var constructor = createNamedFunction(legalFunctionName, function() {\n   if (Object.getPrototypeOf(this) !== instancePrototype) {\n    throw new BindingError(\"Use 'new' to construct \" + name);\n   }\n   if (undefined === registeredClass.constructor_body) {\n    throw new BindingError(name + \" has no accessible constructor\");\n   }\n   var body = registeredClass.constructor_body[arguments.length];\n   if (undefined === body) {\n    throw new BindingError(\"Tried to invoke ctor of \" + name + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n   }\n   return body.apply(this, arguments);\n  });\n  var instancePrototype = Object.create(basePrototype, {\n   constructor: {\n    value: constructor\n   }\n  });\n  constructor.prototype = instancePrototype;\n  var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n  var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\n  var pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\n  var constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\n  registeredPointers[rawType] = {\n   pointerType: pointerConverter,\n   constPointerType: constPointerConverter\n  };\n  replacePublicSymbol(legalFunctionName, constructor);\n  return [ referenceConverter, pointerConverter, constPointerConverter ];\n });\n}\n\nfunction heap32VectorToArray(count, firstElement) {\n var array = [];\n for (var i = 0; i < count; i++) {\n  array.push(HEAPU32[firstElement + i * 4 >>> 2]);\n }\n return array;\n}\n\nfunction runDestructors(destructors) {\n while (destructors.length) {\n  var ptr = destructors.pop();\n  var del = destructors.pop();\n  del(ptr);\n }\n}\n\nfunction newFunc(constructor, argumentList) {\n if (!(constructor instanceof Function)) {\n  throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n }\n var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {});\n dummy.prototype = constructor.prototype;\n var obj = new dummy();\n var r = constructor.apply(obj, argumentList);\n return r instanceof Object ? r : obj;\n}\n\nfunction craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, isAsync) {\n var argCount = argTypes.length;\n if (argCount < 2) {\n  throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n }\n var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n var needsDestructorStack = false;\n for (var i = 1; i < argTypes.length; ++i) {\n  if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n   needsDestructorStack = true;\n   break;\n  }\n }\n var returns = argTypes[0].name !== \"void\";\n var argsList = \"\";\n var argsListWired = \"\";\n for (var i = 0; i < argCount - 2; ++i) {\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n  argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n }\n var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\n\" + \"if (arguments.length !== \" + (argCount - 2) + \") {\\n\" + \"throwBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n\" + \"}\\n\";\n if (needsDestructorStack) {\n  invokerFnBody += \"var destructors = [];\\n\";\n }\n var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n var args1 = [ \"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\" ];\n var args2 = [ throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1] ];\n if (isClassMethodFunc) {\n  invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n }\n for (var i = 0; i < argCount - 2; ++i) {\n  invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n  args1.push(\"argType\" + i);\n  args2.push(argTypes[i + 2]);\n }\n if (isClassMethodFunc) {\n  argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n }\n invokerFnBody += (returns || isAsync ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n if (needsDestructorStack) {\n  invokerFnBody += \"runDestructors(destructors);\\n\";\n } else {\n  for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n   var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n   if (argTypes[i].destructorFunction !== null) {\n    invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n    args1.push(paramName + \"_dtor\");\n    args2.push(argTypes[i].destructorFunction);\n   }\n  }\n }\n if (returns) {\n  invokerFnBody += \"var ret = retType.fromWireType(rv);\\n\" + \"return ret;\\n\";\n } else {}\n invokerFnBody += \"}\\n\";\n args1.push(invokerFnBody);\n return newFunc(Function, args1).apply(null, args2);\n}\n\nfunction __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n assert(argCount > 0);\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n invoker = embind__requireFunction(invokerSignature, invoker);\n var args = [ rawConstructor ];\n var destructors = [];\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = \"constructor \" + classType.name;\n  if (undefined === classType.registeredClass.constructor_body) {\n   classType.registeredClass.constructor_body = [];\n  }\n  if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n   throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n  }\n  classType.registeredClass.constructor_body[argCount - 1] = () => {\n   throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n  };\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n   argTypes.splice(1, 0, null);\n   classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);\n   return [];\n  });\n  return [];\n });\n}\n\nfunction __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual, isAsync) {\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n methodName = readLatin1String(methodName);\n rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n whenDependentTypesAreResolved([], [ rawClassType ], function(classType) {\n  classType = classType[0];\n  var humanName = classType.name + \".\" + methodName;\n  if (methodName.startsWith(\"@@\")) {\n   methodName = Symbol[methodName.substring(2)];\n  }\n  if (isPureVirtual) {\n   classType.registeredClass.pureVirtualFunctions.push(methodName);\n  }\n  function unboundTypesHandler() {\n   throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n  }\n  var proto = classType.registeredClass.instancePrototype;\n  var method = proto[methodName];\n  if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {\n   unboundTypesHandler.argCount = argCount - 2;\n   unboundTypesHandler.className = classType.name;\n   proto[methodName] = unboundTypesHandler;\n  } else {\n   ensureOverloadTable(proto, methodName, humanName);\n   proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n  }\n  whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n   var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context, isAsync);\n   if (undefined === proto[methodName].overloadTable) {\n    memberFunction.argCount = argCount - 2;\n    proto[methodName] = memberFunction;\n   } else {\n    proto[methodName].overloadTable[argCount - 2] = memberFunction;\n   }\n   return [];\n  });\n  return [];\n });\n}\n\nfunction HandleAllocator() {\n this.allocated = [ undefined ];\n this.freelist = [];\n this.get = function(id) {\n  return this.allocated[id];\n };\n this.allocate = function(handle) {\n  let id = this.freelist.pop() || this.allocated.length;\n  this.allocated[id] = handle;\n  return id;\n };\n this.free = function(id) {\n  this.allocated[id] = undefined;\n  this.freelist.push(id);\n };\n}\n\nvar emval_handles = new HandleAllocator();\n\nfunction __emval_decref(handle) {\n if (handle >= emval_handles.reserved && 0 === --emval_handles.get(handle).refcount) {\n  emval_handles.free(handle);\n }\n}\n\nfunction count_emval_handles() {\n var count = 0;\n for (var i = emval_handles.reserved; i < emval_handles.allocated.length; ++i) {\n  if (emval_handles.allocated[i] !== undefined) {\n   ++count;\n  }\n }\n return count;\n}\n\nfunction init_emval() {\n emval_handles.allocated.push({\n  value: undefined\n }, {\n  value: null\n }, {\n  value: true\n }, {\n  value: false\n });\n emval_handles.reserved = emval_handles.allocated.length;\n Module[\"count_emval_handles\"] = count_emval_handles;\n}\n\nvar Emval = {\n toValue: handle => {\n  if (!handle) {\n   throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n  }\n  return emval_handles.get(handle).value;\n },\n toHandle: value => {\n  switch (value) {\n  case undefined:\n   return 1;\n\n  case null:\n   return 2;\n\n  case true:\n   return 3;\n\n  case false:\n   return 4;\n\n  default:\n   {\n    return emval_handles.allocate({\n     refcount: 1,\n     value: value\n    });\n   }\n  }\n }\n};\n\nfunction __embind_register_emval(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(handle) {\n   var rv = Emval.toValue(handle);\n   __emval_decref(handle);\n   return rv;\n  },\n  \"toWireType\": function(destructors, value) {\n   return Emval.toHandle(value);\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: null\n });\n}\n\nfunction embindRepr(v) {\n if (v === null) {\n  return \"null\";\n }\n var t = typeof v;\n if (t === \"object\" || t === \"array\" || t === \"function\") {\n  return v.toString();\n } else {\n  return \"\" + v;\n }\n}\n\nfunction floatReadValueFromPointer(name, shift) {\n switch (shift) {\n case 2:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF32[pointer >>> 2]);\n  };\n\n case 3:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF64[pointer >>> 3]);\n  };\n\n default:\n  throw new TypeError(\"Unknown float type: \" + name);\n }\n}\n\nfunction __embind_register_float(rawType, name, size) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   return value;\n  },\n  \"toWireType\": function(destructors, value) {\n   return value;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn, isAsync) {\n var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n name = readLatin1String(name);\n rawInvoker = embind__requireFunction(signature, rawInvoker);\n exposePublicSymbol(name, function() {\n  throwUnboundTypeError(\"Cannot call \" + name + \" due to unbound types\", argTypes);\n }, argCount - 1);\n whenDependentTypesAreResolved([], argTypes, function(argTypes) {\n  var invokerArgsArray = [ argTypes[0], null ].concat(argTypes.slice(1));\n  replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn, isAsync), argCount - 1);\n  return [];\n });\n}\n\nfunction integerReadValueFromPointer(name, shift, signed) {\n switch (shift) {\n case 0:\n  return signed ? function readS8FromPointer(pointer) {\n   return HEAP8[pointer >>> 0];\n  } : function readU8FromPointer(pointer) {\n   return HEAPU8[pointer >>> 0];\n  };\n\n case 1:\n  return signed ? function readS16FromPointer(pointer) {\n   return HEAP16[pointer >>> 1];\n  } : function readU16FromPointer(pointer) {\n   return HEAPU16[pointer >>> 1];\n  };\n\n case 2:\n  return signed ? function readS32FromPointer(pointer) {\n   return HEAP32[pointer >>> 2];\n  } : function readU32FromPointer(pointer) {\n   return HEAPU32[pointer >>> 2];\n  };\n\n default:\n  throw new TypeError(\"Unknown integer type: \" + name);\n }\n}\n\nfunction __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n name = readLatin1String(name);\n if (maxRange === -1) {\n  maxRange = 4294967295;\n }\n var shift = getShiftFromSize(size);\n var fromWireType = value => value;\n if (minRange === 0) {\n  var bitshift = 32 - 8 * size;\n  fromWireType = value => value << bitshift >>> bitshift;\n }\n var isUnsignedType = name.includes(\"unsigned\");\n var checkAssertions = (value, toTypeName) => {};\n var toWireType;\n if (isUnsignedType) {\n  toWireType = function(destructors, value) {\n   checkAssertions(value, this.name);\n   return value >>> 0;\n  };\n } else {\n  toWireType = function(destructors, value) {\n   checkAssertions(value, this.name);\n   return value;\n  };\n }\n registerType(primitiveType, {\n  name: name,\n  \"fromWireType\": fromWireType,\n  \"toWireType\": toWireType,\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_memory_view(rawType, dataTypeIndex, name) {\n var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];\n var TA = typeMapping[dataTypeIndex];\n function decodeMemoryView(handle) {\n  handle = handle >> 2;\n  var heap = HEAPU32;\n  var size = heap[handle >>> 0];\n  var data = heap[handle + 1 >>> 0];\n  return new TA(heap.buffer, data, size);\n }\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": decodeMemoryView,\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": decodeMemoryView\n }, {\n  ignoreDuplicateRegistrations: true\n });\n}\n\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n outIdx >>>= 0;\n if (!(maxBytesToWrite > 0)) return 0;\n var startIdx = outIdx;\n var endIdx = outIdx + maxBytesToWrite - 1;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) {\n   var u1 = str.charCodeAt(++i);\n   u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n  }\n  if (u <= 127) {\n   if (outIdx >= endIdx) break;\n   heap[outIdx++ >>> 0] = u;\n  } else if (u <= 2047) {\n   if (outIdx + 1 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 192 | u >> 6;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  } else if (u <= 65535) {\n   if (outIdx + 2 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 224 | u >> 12;\n   heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  } else {\n   if (outIdx + 3 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 240 | u >> 18;\n   heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n   heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n   heap[outIdx++ >>> 0] = 128 | u & 63;\n  }\n }\n heap[outIdx >>> 0] = 0;\n return outIdx - startIdx;\n}\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n}\n\nfunction lengthBytesUTF8(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var c = str.charCodeAt(i);\n  if (c <= 127) {\n   len++;\n  } else if (c <= 2047) {\n   len += 2;\n  } else if (c >= 55296 && c <= 57343) {\n   len += 4;\n   ++i;\n  } else {\n   len += 3;\n  }\n }\n return len;\n}\n\nfunction __embind_register_std_string(rawType, name) {\n name = readLatin1String(name);\n var stdStringIsUTF8 = name === \"std::string\";\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = HEAPU32[value >>> 2];\n   var payload = value + 4;\n   var str;\n   if (stdStringIsUTF8) {\n    var decodeStartPtr = payload;\n    for (var i = 0; i <= length; ++i) {\n     var currentBytePtr = payload + i;\n     if (i == length || HEAPU8[currentBytePtr >>> 0] == 0) {\n      var maxRead = currentBytePtr - decodeStartPtr;\n      var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n      if (str === undefined) {\n       str = stringSegment;\n      } else {\n       str += String.fromCharCode(0);\n       str += stringSegment;\n      }\n      decodeStartPtr = currentBytePtr + 1;\n     }\n    }\n   } else {\n    var a = new Array(length);\n    for (var i = 0; i < length; ++i) {\n     a[i] = String.fromCharCode(HEAPU8[payload + i >>> 0]);\n    }\n    str = a.join(\"\");\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (value instanceof ArrayBuffer) {\n    value = new Uint8Array(value);\n   }\n   var length;\n   var valueIsOfTypeString = typeof value == \"string\";\n   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n    throwBindingError(\"Cannot pass non-string to std::string\");\n   }\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    length = lengthBytesUTF8(value);\n   } else {\n    length = value.length;\n   }\n   var base = _malloc(4 + length + 1);\n   var ptr = base + 4;\n   ptr >>>= 0;\n   HEAPU32[base >>> 2] = length;\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    stringToUTF8(value, ptr, length + 1);\n   } else {\n    if (valueIsOfTypeString) {\n     for (var i = 0; i < length; ++i) {\n      var charCode = value.charCodeAt(i);\n      if (charCode > 255) {\n       _free(ptr);\n       throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n      }\n      HEAPU8[ptr + i >>> 0] = charCode;\n     }\n    } else {\n     for (var i = 0; i < length; ++i) {\n      HEAPU8[ptr + i >>> 0] = value[i];\n     }\n    }\n   }\n   if (destructors !== null) {\n    destructors.push(_free, base);\n   }\n   return base;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nvar UTF16Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\nfunction UTF16ToString(ptr, maxBytesToRead) {\n var endPtr = ptr;\n var idx = endPtr >> 1;\n var maxIdx = idx + maxBytesToRead / 2;\n while (!(idx >= maxIdx) && HEAPU16[idx >>> 0]) ++idx;\n endPtr = idx << 1;\n if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(HEAPU8.subarray(ptr >>> 0, endPtr >>> 0));\n var str = \"\";\n for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n  var codeUnit = HEAP16[ptr + i * 2 >>> 1];\n  if (codeUnit == 0) break;\n  str += String.fromCharCode(codeUnit);\n }\n return str;\n}\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 2) return 0;\n maxBytesToWrite -= 2;\n var startPtr = outPtr;\n var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n for (var i = 0; i < numCharsToWrite; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  HEAP16[outPtr >>> 1] = codeUnit;\n  outPtr += 2;\n }\n HEAP16[outPtr >>> 1] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF16(str) {\n return str.length * 2;\n}\n\nfunction UTF32ToString(ptr, maxBytesToRead) {\n var i = 0;\n var str = \"\";\n while (!(i >= maxBytesToRead / 4)) {\n  var utf32 = HEAP32[ptr + i * 4 >>> 2];\n  if (utf32 == 0) break;\n  ++i;\n  if (utf32 >= 65536) {\n   var ch = utf32 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  } else {\n   str += String.fromCharCode(utf32);\n  }\n }\n return str;\n}\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n outPtr >>>= 0;\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 4) return 0;\n var startPtr = outPtr;\n var endPtr = startPtr + maxBytesToWrite - 4;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) {\n   var trailSurrogate = str.charCodeAt(++i);\n   codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n  }\n  HEAP32[outPtr >>> 2] = codeUnit;\n  outPtr += 4;\n  if (outPtr + 4 > endPtr) break;\n }\n HEAP32[outPtr >>> 2] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF32(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n  len += 4;\n }\n return len;\n}\n\nfunction __embind_register_std_wstring(rawType, charSize, name) {\n name = readLatin1String(name);\n var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n if (charSize === 2) {\n  decodeString = UTF16ToString;\n  encodeString = stringToUTF16;\n  lengthBytesUTF = lengthBytesUTF16;\n  getHeap = () => HEAPU16;\n  shift = 1;\n } else if (charSize === 4) {\n  decodeString = UTF32ToString;\n  encodeString = stringToUTF32;\n  lengthBytesUTF = lengthBytesUTF32;\n  getHeap = () => HEAPU32;\n  shift = 2;\n }\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = HEAPU32[value >>> 2];\n   var HEAP = getHeap();\n   var str;\n   var decodeStartPtr = value + 4;\n   for (var i = 0; i <= length; ++i) {\n    var currentBytePtr = value + 4 + i * charSize;\n    if (i == length || HEAP[currentBytePtr >>> shift] == 0) {\n     var maxReadBytes = currentBytePtr - decodeStartPtr;\n     var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n     if (str === undefined) {\n      str = stringSegment;\n     } else {\n      str += String.fromCharCode(0);\n      str += stringSegment;\n     }\n     decodeStartPtr = currentBytePtr + charSize;\n    }\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (!(typeof value == \"string\")) {\n    throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\n   }\n   var length = lengthBytesUTF(value);\n   var ptr = _malloc(4 + length + charSize);\n   ptr >>>= 0;\n   HEAPU32[ptr >>> 2] = length >> shift;\n   encodeString(value, ptr + 4, length + charSize);\n   if (destructors !== null) {\n    destructors.push(_free, ptr);\n   }\n   return ptr;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nfunction __embind_register_void(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  isVoid: true,\n  name: name,\n  \"argPackAdvance\": 0,\n  \"fromWireType\": function() {\n   return undefined;\n  },\n  \"toWireType\": function(destructors, o) {\n   return undefined;\n  }\n });\n}\n\nvar nowIsMonotonic = true;\n\nfunction __emscripten_get_now_is_monotonic() {\n return nowIsMonotonic;\n}\n\nfunction __emval_incref(handle) {\n if (handle > 4) {\n  emval_handles.get(handle).refcount += 1;\n }\n}\n\nfunction requireRegisteredType(rawType, humanName) {\n var impl = registeredTypes[rawType];\n if (undefined === impl) {\n  throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n }\n return impl;\n}\n\nfunction __emval_take_value(type, arg) {\n type = requireRegisteredType(type, \"_emval_take_value\");\n var v = type[\"readValueFromPointer\"](arg);\n return Emval.toHandle(v);\n}\n\nfunction _abort() {\n abort(\"\");\n}\n\nfunction _emscripten_date_now() {\n return Date.now();\n}\n\nvar _emscripten_get_now;\n\nif (ENVIRONMENT_IS_NODE) {\n _emscripten_get_now = () => {\n  var t = process.hrtime();\n  return t[0] * 1e3 + t[1] / 1e6;\n };\n} else _emscripten_get_now = () => performance.now();\n\nfunction _emscripten_memcpy_big(dest, src, num) {\n HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n}\n\nfunction getHeapMax() {\n return 3221225472;\n}\n\nfunction emscripten_realloc_buffer(size) {\n var b = wasmMemory.buffer;\n try {\n  wasmMemory.grow(size - b.byteLength + 65535 >>> 16);\n  updateMemoryViews();\n  return 1;\n } catch (e) {}\n}\n\nfunction _emscripten_resize_heap(requestedSize) {\n var oldSize = HEAPU8.length;\n requestedSize = requestedSize >>> 0;\n var maxHeapSize = getHeapMax();\n if (requestedSize > maxHeapSize) {\n  return false;\n }\n let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n  var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  var replacement = emscripten_realloc_buffer(newSize);\n  if (replacement) {\n   return true;\n  }\n }\n return false;\n}\n\nvar ENV = {};\n\nfunction getExecutableName() {\n return thisProgram || \"./this.program\";\n}\n\nfunction getEnvStrings() {\n if (!getEnvStrings.strings) {\n  var lang = (typeof navigator == \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n  var env = {\n   \"USER\": \"web_user\",\n   \"LOGNAME\": \"web_user\",\n   \"PATH\": \"/\",\n   \"PWD\": \"/\",\n   \"HOME\": \"/home/web_user\",\n   \"LANG\": lang,\n   \"_\": getExecutableName()\n  };\n  for (var x in ENV) {\n   if (ENV[x] === undefined) delete env[x]; else env[x] = ENV[x];\n  }\n  var strings = [];\n  for (var x in env) {\n   strings.push(x + \"=\" + env[x]);\n  }\n  getEnvStrings.strings = strings;\n }\n return getEnvStrings.strings;\n}\n\nfunction stringToAscii(str, buffer) {\n for (var i = 0; i < str.length; ++i) {\n  HEAP8[buffer++ >>> 0] = str.charCodeAt(i);\n }\n HEAP8[buffer >>> 0] = 0;\n}\n\nfunction _environ_get(__environ, environ_buf) {\n var bufSize = 0;\n getEnvStrings().forEach(function(string, i) {\n  var ptr = environ_buf + bufSize;\n  HEAPU32[__environ + i * 4 >>> 2] = ptr;\n  stringToAscii(string, ptr);\n  bufSize += string.length + 1;\n });\n return 0;\n}\n\nfunction _environ_sizes_get(penviron_count, penviron_buf_size) {\n var strings = getEnvStrings();\n HEAPU32[penviron_count >>> 2] = strings.length;\n var bufSize = 0;\n strings.forEach(function(string) {\n  bufSize += string.length + 1;\n });\n HEAPU32[penviron_buf_size >>> 2] = bufSize;\n return 0;\n}\n\nfunction _proc_exit(code) {\n EXITSTATUS = code;\n if (!keepRuntimeAlive()) {\n  if (Module[\"onExit\"]) Module[\"onExit\"](code);\n  ABORT = true;\n }\n quit_(code, new ExitStatus(code));\n}\n\nfunction exitJS(status, implicit) {\n EXITSTATUS = status;\n _proc_exit(status);\n}\n\nvar _exit = exitJS;\n\nfunction _fd_close(fd) {\n return 52;\n}\n\nfunction _fd_fdstat_get(fd, pbuf) {\n var rightsBase = 0;\n var rightsInheriting = 0;\n var flags = 0;\n {\n  var type = fd == 0 || fd == 1 || fd == 2 ? 2 : abort();\n  if (fd == 0) {\n   rightsBase = 2;\n  } else if (fd == 1 || fd == 2) {\n   rightsBase = 64;\n  }\n  flags = 1;\n }\n HEAP8[pbuf >>> 0] = type;\n HEAP16[pbuf + 2 >>> 1] = flags;\n tempI64 = [ rightsBase >>> 0, (tempDouble = rightsBase, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n HEAP32[pbuf + 8 >>> 2] = tempI64[0], HEAP32[pbuf + 12 >>> 2] = tempI64[1];\n tempI64 = [ rightsInheriting >>> 0, (tempDouble = rightsInheriting, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? +Math.floor(tempDouble / 4294967296) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0) ], \n HEAP32[pbuf + 16 >>> 2] = tempI64[0], HEAP32[pbuf + 20 >>> 2] = tempI64[1];\n return 0;\n}\n\nfunction _fd_read(fd, iov, iovcnt, pnum) {\n return 52;\n}\n\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n return 70;\n}\n\nvar printCharBuffers = [ null, [], [] ];\n\nfunction printChar(stream, curr) {\n var buffer = printCharBuffers[stream];\n if (curr === 0 || curr === 10) {\n  (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n  buffer.length = 0;\n } else {\n  buffer.push(curr);\n }\n}\n\nfunction flush_NO_FILESYSTEM() {\n if (printCharBuffers[1].length) printChar(1, 10);\n if (printCharBuffers[2].length) printChar(2, 10);\n}\n\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n var num = 0;\n for (var i = 0; i < iovcnt; i++) {\n  var ptr = HEAPU32[iov >>> 2];\n  var len = HEAPU32[iov + 4 >>> 2];\n  iov += 8;\n  for (var j = 0; j < len; j++) {\n   printChar(fd, HEAPU8[ptr + j >>> 0]);\n  }\n  num += len;\n }\n HEAPU32[pnum >>> 2] = num;\n return 0;\n}\n\nfunction isLeapYear(year) {\n return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\n\nfunction arraySum(array, index) {\n var sum = 0;\n for (var i = 0; i <= index; sum += array[i++]) {}\n return sum;\n}\n\nvar MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\n\nvar MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\n\nfunction addDays(date, days) {\n var newDate = new Date(date.getTime());\n while (days > 0) {\n  var leap = isLeapYear(newDate.getFullYear());\n  var currentMonth = newDate.getMonth();\n  var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\n  if (days > daysInCurrentMonth - newDate.getDate()) {\n   days -= daysInCurrentMonth - newDate.getDate() + 1;\n   newDate.setDate(1);\n   if (currentMonth < 11) {\n    newDate.setMonth(currentMonth + 1);\n   } else {\n    newDate.setMonth(0);\n    newDate.setFullYear(newDate.getFullYear() + 1);\n   }\n  } else {\n   newDate.setDate(newDate.getDate() + days);\n   return newDate;\n  }\n }\n return newDate;\n}\n\nfunction intArrayFromString(stringy, dontAddNull, length) {\n var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n var u8array = new Array(len);\n var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n if (dontAddNull) u8array.length = numBytesWritten;\n return u8array;\n}\n\nfunction writeArrayToMemory(array, buffer) {\n HEAP8.set(array, buffer >>> 0);\n}\n\nfunction _strftime(s, maxsize, format, tm) {\n var tm_zone = HEAP32[tm + 40 >>> 2];\n var date = {\n  tm_sec: HEAP32[tm >>> 2],\n  tm_min: HEAP32[tm + 4 >>> 2],\n  tm_hour: HEAP32[tm + 8 >>> 2],\n  tm_mday: HEAP32[tm + 12 >>> 2],\n  tm_mon: HEAP32[tm + 16 >>> 2],\n  tm_year: HEAP32[tm + 20 >>> 2],\n  tm_wday: HEAP32[tm + 24 >>> 2],\n  tm_yday: HEAP32[tm + 28 >>> 2],\n  tm_isdst: HEAP32[tm + 32 >>> 2],\n  tm_gmtoff: HEAP32[tm + 36 >>> 2],\n  tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n };\n var pattern = UTF8ToString(format);\n var EXPANSION_RULES_1 = {\n  \"%c\": \"%a %b %d %H:%M:%S %Y\",\n  \"%D\": \"%m/%d/%y\",\n  \"%F\": \"%Y-%m-%d\",\n  \"%h\": \"%b\",\n  \"%r\": \"%I:%M:%S %p\",\n  \"%R\": \"%H:%M\",\n  \"%T\": \"%H:%M:%S\",\n  \"%x\": \"%m/%d/%y\",\n  \"%X\": \"%H:%M:%S\",\n  \"%Ec\": \"%c\",\n  \"%EC\": \"%C\",\n  \"%Ex\": \"%m/%d/%y\",\n  \"%EX\": \"%H:%M:%S\",\n  \"%Ey\": \"%y\",\n  \"%EY\": \"%Y\",\n  \"%Od\": \"%d\",\n  \"%Oe\": \"%e\",\n  \"%OH\": \"%H\",\n  \"%OI\": \"%I\",\n  \"%Om\": \"%m\",\n  \"%OM\": \"%M\",\n  \"%OS\": \"%S\",\n  \"%Ou\": \"%u\",\n  \"%OU\": \"%U\",\n  \"%OV\": \"%V\",\n  \"%Ow\": \"%w\",\n  \"%OW\": \"%W\",\n  \"%Oy\": \"%y\"\n };\n for (var rule in EXPANSION_RULES_1) {\n  pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n }\n var WEEKDAYS = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n var MONTHS = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n function leadingSomething(value, digits, character) {\n  var str = typeof value == \"number\" ? value.toString() : value || \"\";\n  while (str.length < digits) {\n   str = character[0] + str;\n  }\n  return str;\n }\n function leadingNulls(value, digits) {\n  return leadingSomething(value, digits, \"0\");\n }\n function compareByDay(date1, date2) {\n  function sgn(value) {\n   return value < 0 ? -1 : value > 0 ? 1 : 0;\n  }\n  var compare;\n  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n    compare = sgn(date1.getDate() - date2.getDate());\n   }\n  }\n  return compare;\n }\n function getFirstWeekStartDate(janFourth) {\n  switch (janFourth.getDay()) {\n  case 0:\n   return new Date(janFourth.getFullYear() - 1, 11, 29);\n\n  case 1:\n   return janFourth;\n\n  case 2:\n   return new Date(janFourth.getFullYear(), 0, 3);\n\n  case 3:\n   return new Date(janFourth.getFullYear(), 0, 2);\n\n  case 4:\n   return new Date(janFourth.getFullYear(), 0, 1);\n\n  case 5:\n   return new Date(janFourth.getFullYear() - 1, 11, 31);\n\n  case 6:\n   return new Date(janFourth.getFullYear() - 1, 11, 30);\n  }\n }\n function getWeekBasedYear(date) {\n  var thisDate = addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n    return thisDate.getFullYear() + 1;\n   }\n   return thisDate.getFullYear();\n  }\n  return thisDate.getFullYear() - 1;\n }\n var EXPANSION_RULES_2 = {\n  \"%a\": function(date) {\n   return WEEKDAYS[date.tm_wday].substring(0, 3);\n  },\n  \"%A\": function(date) {\n   return WEEKDAYS[date.tm_wday];\n  },\n  \"%b\": function(date) {\n   return MONTHS[date.tm_mon].substring(0, 3);\n  },\n  \"%B\": function(date) {\n   return MONTHS[date.tm_mon];\n  },\n  \"%C\": function(date) {\n   var year = date.tm_year + 1900;\n   return leadingNulls(year / 100 | 0, 2);\n  },\n  \"%d\": function(date) {\n   return leadingNulls(date.tm_mday, 2);\n  },\n  \"%e\": function(date) {\n   return leadingSomething(date.tm_mday, 2, \" \");\n  },\n  \"%g\": function(date) {\n   return getWeekBasedYear(date).toString().substring(2);\n  },\n  \"%G\": function(date) {\n   return getWeekBasedYear(date);\n  },\n  \"%H\": function(date) {\n   return leadingNulls(date.tm_hour, 2);\n  },\n  \"%I\": function(date) {\n   var twelveHour = date.tm_hour;\n   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;\n   return leadingNulls(twelveHour, 2);\n  },\n  \"%j\": function(date) {\n   return leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year + 1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);\n  },\n  \"%m\": function(date) {\n   return leadingNulls(date.tm_mon + 1, 2);\n  },\n  \"%M\": function(date) {\n   return leadingNulls(date.tm_min, 2);\n  },\n  \"%n\": function() {\n   return \"\\n\";\n  },\n  \"%p\": function(date) {\n   if (date.tm_hour >= 0 && date.tm_hour < 12) {\n    return \"AM\";\n   }\n   return \"PM\";\n  },\n  \"%S\": function(date) {\n   return leadingNulls(date.tm_sec, 2);\n  },\n  \"%t\": function() {\n   return \"\\t\";\n  },\n  \"%u\": function(date) {\n   return date.tm_wday || 7;\n  },\n  \"%U\": function(date) {\n   var days = date.tm_yday + 7 - date.tm_wday;\n   return leadingNulls(Math.floor(days / 7), 2);\n  },\n  \"%V\": function(date) {\n   var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7) / 7);\n   if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n    val++;\n   }\n   if (!val) {\n    val = 52;\n    var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n    if (dec31 == 4 || dec31 == 5 && isLeapYear(date.tm_year % 400 - 1)) {\n     val++;\n    }\n   } else if (val == 53) {\n    var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n    if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year))) val = 1;\n   }\n   return leadingNulls(val, 2);\n  },\n  \"%w\": function(date) {\n   return date.tm_wday;\n  },\n  \"%W\": function(date) {\n   var days = date.tm_yday + 7 - (date.tm_wday + 6) % 7;\n   return leadingNulls(Math.floor(days / 7), 2);\n  },\n  \"%y\": function(date) {\n   return (date.tm_year + 1900).toString().substring(2);\n  },\n  \"%Y\": function(date) {\n   return date.tm_year + 1900;\n  },\n  \"%z\": function(date) {\n   var off = date.tm_gmtoff;\n   var ahead = off >= 0;\n   off = Math.abs(off) / 60;\n   off = off / 60 * 100 + off % 60;\n   return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n  },\n  \"%Z\": function(date) {\n   return date.tm_zone;\n  },\n  \"%%\": function() {\n   return \"%\";\n  }\n };\n pattern = pattern.replace(/%%/g, \"\\0\\0\");\n for (var rule in EXPANSION_RULES_2) {\n  if (pattern.includes(rule)) {\n   pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n  }\n }\n pattern = pattern.replace(/\\0\\0/g, \"%\");\n var bytes = intArrayFromString(pattern, false);\n if (bytes.length > maxsize) {\n  return 0;\n }\n writeArrayToMemory(bytes, s);\n return bytes.length - 1;\n}\n\nfunction _strftime_l(s, maxsize, format, tm, loc) {\n return _strftime(s, maxsize, format, tm);\n}\n\nembind_init_charCodes();\n\nBindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n\nInternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n\ninit_ClassHandle();\n\ninit_embind();\n\ninit_RegisteredPointer();\n\nUnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n\ninit_emval();\n\nvar wasmImports = {\n \"__cxa_rethrow\": ___cxa_rethrow,\n \"__cxa_throw\": ___cxa_throw,\n \"__syscall_dup3\": ___syscall_dup3,\n \"__syscall_faccessat\": ___syscall_faccessat,\n \"__syscall_fcntl64\": ___syscall_fcntl64,\n \"__syscall_fstat64\": ___syscall_fstat64,\n \"__syscall_ftruncate64\": ___syscall_ftruncate64,\n \"__syscall_ioctl\": ___syscall_ioctl,\n \"__syscall_lstat64\": ___syscall_lstat64,\n \"__syscall_newfstatat\": ___syscall_newfstatat,\n \"__syscall_openat\": ___syscall_openat,\n \"__syscall_stat64\": ___syscall_stat64,\n \"__syscall_unlinkat\": ___syscall_unlinkat,\n \"_embind_register_bigint\": __embind_register_bigint,\n \"_embind_register_bool\": __embind_register_bool,\n \"_embind_register_class\": __embind_register_class,\n \"_embind_register_class_constructor\": __embind_register_class_constructor,\n \"_embind_register_class_function\": __embind_register_class_function,\n \"_embind_register_emval\": __embind_register_emval,\n \"_embind_register_float\": __embind_register_float,\n \"_embind_register_function\": __embind_register_function,\n \"_embind_register_integer\": __embind_register_integer,\n \"_embind_register_memory_view\": __embind_register_memory_view,\n \"_embind_register_std_string\": __embind_register_std_string,\n \"_embind_register_std_wstring\": __embind_register_std_wstring,\n \"_embind_register_void\": __embind_register_void,\n \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\n \"_emval_decref\": __emval_decref,\n \"_emval_incref\": __emval_incref,\n \"_emval_take_value\": __emval_take_value,\n \"abort\": _abort,\n \"emscripten_date_now\": _emscripten_date_now,\n \"emscripten_get_now\": _emscripten_get_now,\n \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n \"emscripten_resize_heap\": _emscripten_resize_heap,\n \"environ_get\": _environ_get,\n \"environ_sizes_get\": _environ_sizes_get,\n \"exit\": _exit,\n \"fd_close\": _fd_close,\n \"fd_fdstat_get\": _fd_fdstat_get,\n \"fd_read\": _fd_read,\n \"fd_seek\": _fd_seek,\n \"fd_write\": _fd_write,\n \"strftime_l\": _strftime_l\n};\n\nvar asm = createWasm();\n\nvar ___wasm_call_ctors = function() {\n return (___wasm_call_ctors = Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null, arguments);\n};\n\nvar _malloc = function() {\n return (_malloc = Module[\"asm\"][\"malloc\"]).apply(null, arguments);\n};\n\nvar _free = function() {\n return (_free = Module[\"asm\"][\"free\"]).apply(null, arguments);\n};\n\nvar ___errno_location = function() {\n return (___errno_location = Module[\"asm\"][\"__errno_location\"]).apply(null, arguments);\n};\n\nvar ___getTypeName = function() {\n return (___getTypeName = Module[\"asm\"][\"__getTypeName\"]).apply(null, arguments);\n};\n\nvar __embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = function() {\n return (__embind_initialize_bindings = Module[\"__embind_initialize_bindings\"] = Module[\"asm\"][\"_embind_initialize_bindings\"]).apply(null, arguments);\n};\n\nvar stackSave = function() {\n return (stackSave = Module[\"asm\"][\"stackSave\"]).apply(null, arguments);\n};\n\nvar stackRestore = function() {\n return (stackRestore = Module[\"asm\"][\"stackRestore\"]).apply(null, arguments);\n};\n\nvar stackAlloc = function() {\n return (stackAlloc = Module[\"asm\"][\"stackAlloc\"]).apply(null, arguments);\n};\n\nvar ___cxa_is_pointer_type = function() {\n return (___cxa_is_pointer_type = Module[\"asm\"][\"__cxa_is_pointer_type\"]).apply(null, arguments);\n};\n\nvar dynCall_viiij = Module[\"dynCall_viiij\"] = function() {\n return (dynCall_viiij = Module[\"dynCall_viiij\"] = Module[\"asm\"][\"dynCall_viiij\"]).apply(null, arguments);\n};\n\nvar dynCall_viiiij = Module[\"dynCall_viiiij\"] = function() {\n return (dynCall_viiiij = Module[\"dynCall_viiiij\"] = Module[\"asm\"][\"dynCall_viiiij\"]).apply(null, arguments);\n};\n\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\n return (dynCall_ji = Module[\"dynCall_ji\"] = Module[\"asm\"][\"dynCall_ji\"]).apply(null, arguments);\n};\n\nvar dynCall_vij = Module[\"dynCall_vij\"] = function() {\n return (dynCall_vij = Module[\"dynCall_vij\"] = Module[\"asm\"][\"dynCall_vij\"]).apply(null, arguments);\n};\n\nvar dynCall_jiii = Module[\"dynCall_jiii\"] = function() {\n return (dynCall_jiii = Module[\"dynCall_jiii\"] = Module[\"asm\"][\"dynCall_jiii\"]).apply(null, arguments);\n};\n\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"dynCall_jiji\"]).apply(null, arguments);\n};\n\nvar dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\n return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"dynCall_viijii\"]).apply(null, arguments);\n};\n\nvar dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\n return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"dynCall_iiiiij\"]).apply(null, arguments);\n};\n\nvar dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\n return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiijj\"]).apply(null, arguments);\n};\n\nvar dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\n return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"dynCall_iiiiiijj\"]).apply(null, arguments);\n};\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n if (!calledRun) run();\n if (!calledRun) dependenciesFulfilled = runCaller;\n};\n\nfunction run() {\n if (runDependencies > 0) {\n  return;\n }\n preRun();\n if (runDependencies > 0) {\n  return;\n }\n function doRun() {\n  if (calledRun) return;\n  calledRun = true;\n  Module[\"calledRun\"] = true;\n  if (ABORT) return;\n  initRuntime();\n  readyPromiseResolve(Module);\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n  postRun();\n }\n if (Module[\"setStatus\"]) {\n  Module[\"setStatus\"](\"Running...\");\n  setTimeout(function() {\n   setTimeout(function() {\n    Module[\"setStatus\"](\"\");\n   }, 1);\n   doRun();\n  }, 1);\n } else {\n  doRun();\n }\n}\n\nif (Module[\"preInit\"]) {\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\n while (Module[\"preInit\"].length > 0) {\n  Module[\"preInit\"].pop()();\n }\n}\n\nrun();\n\n\n  return geoda.ready\n}\n\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = geoda;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return geoda; });\nelse if (typeof exports === 'object')\n  exports[\"geoda\"] = geoda;\n", "import type {GeoDaModule} from '../wasm';\n// @ts-expect-error - geodaAny is not used\nimport geodaAny from '../wasm/index.cjs';\n\nconst geoda: () => Promise<GeoDaModule> = geodaAny;\n\n// Singlton wasmInstance promise\nlet wasmInstancePromise: Promise<GeoDaModule> | null = null;\n\n// Initialize geoda WASM instance\nexport async function initWASM(): Promise<GeoDaModule> {\n  if (wasmInstancePromise === null) {\n    wasmInstancePromise = geoda();\n  }\n  return wasmInstancePromise;\n}\n\n// Reset WASM instance\nexport function resetWASM(): void {\n  wasmInstancePromise = null;\n  wasmInstance = null;\n  geoda().then(instance => {\n    wasmInstance = instance;\n  });\n}\n\n// Global nonPromise instance of GeoDa WASM module\nlet wasmInstance: GeoDaModule | null = null;\n\n// Set the global instance of GeoDa WASM module\nexport function setWASM(instance: GeoDaModule): void {\n  wasmInstance = instance;\n}\n\n// Get the global instance of GeoDa WASM module\nexport function getWASM(): GeoDaModule | null {\n  return wasmInstance;\n}\n", "import {BinaryFeatureCollection} from '@loaders.gl/schema';\n\nimport {\n  GeoDaModule,\n  PolygonCollection,\n  PointCollection,\n  LineCollection,\n  GeometryCollection\n} from '../../wasm';\n\n/**\n * BinaryGeometryType, it is the same as DeckGlGeoTypes in kepler.gl/layers\n * @typedef {Object} BinaryGeometryType\n */\nexport type BinaryGeometryType = {\n  point: boolean;\n  line: boolean;\n  polygon: boolean;\n};\n\n/**\n * create geoda.GeometryCollection from dataToFeatures[] in GeojsonLayer\n *\n */\nexport async function getGeometryCollectionFromBinaryGeometries(\n  geometryType: BinaryGeometryType,\n  binaryFeaturesChunks: BinaryFeatureCollection[],\n  wasm: GeoDaModule\n): Promise<GeometryCollection | null> {\n  if (!wasm) return null;\n\n  if (geometryType.point) {\n    const pointsArray = binaryFeaturesChunks.map(chunk => chunk.points);\n    return createPointCollectionFromBinaryFeatures(pointsArray, wasm);\n  } else if (geometryType.line) {\n    const linesArray = binaryFeaturesChunks.map(chunk => chunk.lines);\n    return createLineCollectionFromBinaryFeatures(linesArray, wasm);\n  } else if (geometryType.polygon) {\n    const polygonsArray = binaryFeaturesChunks.map(chunk => chunk.polygons);\n    return createPolygonCollectionFromBinaryFeatures(polygonsArray, wasm);\n  }\n  return null;\n}\n\n/**\n * create geoda pointCollection from dataToFeatures[] in GeojsonLayer\n * @param pointsArray BinaryFeatureCollection['points'] An array of binary point features from chunks of geoarrow\n * @returns pointCollection | null\n */\nexport function createPointCollectionFromBinaryFeatures(\n  pointsArray: Array<BinaryFeatureCollection['points']>,\n  wasm: GeoDaModule\n): PointCollection {\n  // create PointCollection from binaryFeatures\n  const xs = new wasm.VectorDouble();\n  const ys = new wasm.VectorDouble();\n  const parts = new wasm.VectorUInt();\n  const sizes = new wasm.VectorUInt();\n  const convertToUTM = false;\n\n  for (let chunkIndex = 0; chunkIndex < pointsArray.length; chunkIndex++) {\n    const points = pointsArray[chunkIndex];\n    if (points) {\n      const coords = points.positions.value;\n      for (let i = 0; i < coords.length; i += 2) {\n        xs.push_back(coords[i]);\n        ys.push_back(coords[i + 1]);\n      }\n      // get index as the start of each part when points.featureIds.value[i] changed\n      let index = 0;\n      for (let i = 0; i < points.featureIds.value.length; i++) {\n        // eslint-disable-next-line max-depth\n        if (i === 0) {\n          parts.push_back(index);\n        } else if (points.featureIds.value[i] !== points.featureIds.value[i - 1]) {\n          parts.push_back(index);\n        }\n        index++;\n      }\n      // get sizes from parts\n      for (let i = 1; i < parts.size(); i++) {\n        sizes.push_back(parts.get(i) - parts.get(i - 1));\n      }\n      // add the last size\n      if (parts.size() > 0) {\n        sizes.push_back(index - parts.get(parts.size() - 1));\n      }\n    }\n  }\n  const pointCollection = new wasm.PointCollection(xs, ys, parts, sizes, convertToUTM);\n  return pointCollection;\n}\n\n/**\n * create geoda lineCollection from dataToFeatures[] in GeojsonLayer\n * @param linesArray BinaryFeatureCollection['lines'][] An array of binary line features from chunks of geoarrow\n * @returns LineCollection | null\n */\nexport function createLineCollectionFromBinaryFeatures(\n  linesArray: Array<BinaryFeatureCollection['lines']>,\n  wasm: GeoDaModule\n): LineCollection {\n  // create LineCollection from array of binaryFeatures\n  const xs = new wasm.VectorDouble();\n  const ys = new wasm.VectorDouble();\n  const parts = new wasm.VectorUInt();\n  const sizes = new wasm.VectorUInt();\n  const convertToUTM = false;\n\n  for (let lineIndex = 0; lineIndex < linesArray.length; lineIndex++) {\n    const lines = linesArray[lineIndex];\n    if (lines) {\n      const coords = lines.positions.value;\n      const geomOffsets = lines.pathIndices.value;\n\n      // get xs, ys, parts, sizes\n      for (let i = 0; i < coords.length; i += 2) {\n        xs.push_back(coords[i]);\n        ys.push_back(coords[i + 1]);\n      }\n      // parts is geomOffsets: store the point index of each part\n      // get sizes from featureIds: store number of parts for each line/multiline\n      let numParts = 0;\n      for (let i = 0; i < geomOffsets.length - 1; i++) {\n        const startPointIndex = geomOffsets[i];\n        parts.push_back(startPointIndex);\n        // eslint-disable-next-line max-depth\n        if (\n          i > 0 &&\n          lines.featureIds.value[startPointIndex] !== lines.featureIds.value[startPointIndex - 1]\n        ) {\n          sizes.push_back(numParts);\n          numParts = 0;\n        }\n        numParts += 1;\n      }\n      // add the last size\n      sizes.push_back(numParts);\n    }\n  }\n\n  const lineCollection = new wasm.LineCollection(xs, ys, parts, sizes, convertToUTM);\n  return lineCollection;\n}\n\n/**\n * create geoda polygonCollection from dataToFeatures[] in GeojsonLayer\n * @param polygonsArray BinaryFeatureCollection['polygons'][] An array of binary polygon features from chunks of geoarrow\n * @returns PolygonCollection | null\n */\n// eslint-disable-next-line max-statements\nexport function createPolygonCollectionFromBinaryFeatures(\n  polygonsArray: Array<BinaryFeatureCollection['polygons']>,\n  wasm: GeoDaModule\n): PolygonCollection {\n  // create PolygonCollection from array of binaryFeatures\n  const xs = new wasm.VectorDouble();\n  const ys = new wasm.VectorDouble();\n  const parts = new wasm.VectorUInt();\n  const holes = new wasm.VectorUInt();\n  const sizes = new wasm.VectorUInt();\n  const fixPolygon = true;\n  const convertToUTM = false;\n\n  for (let chunkIndex = 0; chunkIndex < polygonsArray.length; chunkIndex++) {\n    const polygons = polygonsArray[chunkIndex];\n    if (polygons) {\n      const coords = polygons.positions.value;\n      const polygonIndices = polygons.polygonIndices.value;\n      const primitivePolygonIndices = polygons.primitivePolygonIndices.value;\n\n      // get xs, ys, parts, sizes\n      for (let i = 0; i < coords.length; i += 2) {\n        xs.push_back(coords[i]);\n        ys.push_back(coords[i + 1]);\n      }\n      let primitiveIndex = 0;\n      let numParts = 0;\n      for (let i = 0; i < polygonIndices.length - 1; i++) {\n        const startIdx = polygonIndices[i];\n        const endIdx = polygonIndices[i + 1];\n        // eslint-disable-next-line max-depth\n        while (primitivePolygonIndices[primitiveIndex] < endIdx) {\n          // parts: start index of each part\n          // holes: true if the part is a hole\n          // eslint-disable-next-line max-depth\n          if (primitivePolygonIndices[primitiveIndex] > startIdx) {\n            // holeIndices.push(primitivePolygonIndices[primitiveIndex] - startIdx);\n            holes.push_back(1);\n          } else {\n            holes.push_back(0);\n          }\n          parts.push_back(primitivePolygonIndices[primitiveIndex]);\n          primitiveIndex++;\n          numParts += 1;\n        }\n        // eslint-disable-next-line max-depth\n        if (polygons.featureIds.value[endIdx] !== polygons.featureIds.value[endIdx - 1]) {\n          sizes.push_back(numParts);\n          numParts = 0;\n        }\n      }\n    }\n  }\n\n  const polygonCollection = new wasm.PolygonCollection(\n    xs,\n    ys,\n    parts,\n    holes,\n    sizes,\n    fixPolygon,\n    convertToUTM\n  );\n  return polygonCollection;\n}\n", "import {BinaryFeatureCollection} from '@loaders.gl/schema';\n\nimport {\n  BinaryGeometryType,\n  getGeometryCollectionFromBinaryGeometries\n} from '../geometry/binary-geometry';\nimport {initWASM} from '../init';\n\n/**\n * Type of Distance based Neighbors from binary geometries arguments.\n */\ntype DistanceNeighborsFromBinaryGeometriesProps = {\n  distanceThreshold: number;\n  isMile?: boolean;\n  binaryGeometryType: BinaryGeometryType;\n  binaryGeometries: BinaryFeatureCollection[];\n};\n\n/**\n * Calculates the neighbors within a distance band for a given set of geometries or latitude/longitude arrays.\n * @param {NearestNeighborsFromBinaryGeometriesProps} input - The input parameters.\n * @returns {Promise<number[][]>} - The nearest neighbors as an array of indices.\n */\nexport async function getDistanceNeighborsFromBinaryGeometries({\n  distanceThreshold,\n  isMile = false,\n  binaryGeometryType,\n  binaryGeometries\n}: DistanceNeighborsFromBinaryGeometriesProps): Promise<number[][]> {\n  if (!binaryGeometries || binaryGeometries.length === 0) {\n    return [];\n  }\n\n  const neighbors: number[][] = [];\n\n  const wasmInstance = await initWASM();\n  const geomCollection = await getGeometryCollectionFromBinaryGeometries(\n    binaryGeometryType,\n    binaryGeometries,\n    wasmInstance\n  );\n\n  if (geomCollection) {\n    const result = wasmInstance.getDistanceWeights(geomCollection, distanceThreshold, isMile);\n    for (let i = 0; i < result.size(); ++i) {\n      const nbrs = result.get(i);\n      const nbrIndices: number[] = Array(nbrs.size());\n      for (let j = 0, nbrSize = nbrs.size(); j < nbrSize; ++j) {\n        nbrIndices[j] = nbrs.get(j);\n      }\n      neighbors[i] = nbrIndices;\n    }\n  }\n\n  return neighbors;\n}\n\nexport type DistanceThresholds = {\n  minDistance: number;\n  maxDistance: number;\n  maxPairDistance: number;\n};\n\nexport type DistanceThresholdsProps = {\n  isMile?: boolean;\n  binaryGeometryType: BinaryGeometryType;\n  binaryGeometries: BinaryFeatureCollection[];\n};\n\n/**\n * Get the distance thresholds for a given set of geometries or latitude/longitude arrays:\n * The thresholds are calculated based on the minimum, maximum, and maximum pair distances.\n * the minimum threshold is the minimum distance that guarantees that at least one geometry has one neighbor.\n * the maximum threshold is the maximum distance that guarantees that every geometry has at least one neighbor.\n * the maximum pair threshold is the maximum distance between any two geometries.\n *\n * The distances are calculated as the haversine distance between the centroids of the geometries.\n * The units of the thresholds are in kilometers or miles.\n */\nexport async function getDistanceThresholds({\n  isMile = false,\n  binaryGeometryType,\n  binaryGeometries\n}: DistanceThresholdsProps): Promise<DistanceThresholds> {\n  const wasmInstance = await initWASM();\n  const geomCollection = await getGeometryCollectionFromBinaryGeometries(\n    binaryGeometryType,\n    binaryGeometries,\n    wasmInstance\n  );\n  if (geomCollection) {\n    const thresValues = wasmInstance.getDistanceThresholds(geomCollection, isMile);\n    return {\n      minDistance: thresValues.get(0),\n      maxDistance: thresValues.get(1),\n      maxPairDistance: thresValues.get(2)\n    };\n  }\n  return {\n    minDistance: 0,\n    maxDistance: 0,\n    maxPairDistance: 0\n  };\n}\n", "import {BinaryFeatureCollection} from '@loaders.gl/schema';\n\nimport {\n  BinaryGeometryType,\n  getGeometryCollectionFromBinaryGeometries\n} from '../geometry/binary-geometry';\nimport {initWASM} from '../init';\n\n/**\n * Type of Nearest Neighbors from binary geometries arguments.\n */\ntype NearestNeighborsFromBinaryGeometriesProps = {\n  k: number;\n  binaryGeometryType: BinaryGeometryType;\n  binaryGeometries: BinaryFeatureCollection[];\n};\n\n/**\n * Calculates the nearest neighbors for a given set of geometries or latitude/longitude arrays.\n * @param {NearestNeighborsFromBinaryGeometriesProps} input - The input parameters.\n * @returns {Promise<number[][]>} - The nearest neighbors as an array of indices.\n */\nexport async function getNearestNeighborsFromBinaryGeometries({\n  k,\n  binaryGeometryType,\n  binaryGeometries\n}: NearestNeighborsFromBinaryGeometriesProps): Promise<number[][]> {\n  if (!binaryGeometries || binaryGeometries.length === 0) {\n    return [];\n  }\n\n  const neighbors: number[][] = [];\n\n  const wasmInstance = await initWASM();\n  const geomCollection = await getGeometryCollectionFromBinaryGeometries(\n    binaryGeometryType,\n    binaryGeometries,\n    wasmInstance\n  );\n\n  if (geomCollection) {\n    const result = wasmInstance.getNearestNeighbors(geomCollection, k);\n    for (let i = 0; i < result.size(); ++i) {\n      const nbrs = result.get(i);\n      const nbrIndices: number[] = Array(nbrs.size());\n      for (let j = 0, nbrSize = nbrs.size(); j < nbrSize; ++j) {\n        nbrIndices[j] = nbrs.get(j);\n      }\n      neighbors[i] = nbrIndices;\n    }\n  }\n\n  return neighbors;\n}\n", "import {BinaryFeatureCollection} from '@loaders.gl/schema';\n\nimport {\n  BinaryGeometryType,\n  getGeometryCollectionFromBinaryGeometries\n} from '../geometry/binary-geometry';\nimport {initWASM} from '../init';\n\n/**\n * Type of Contiguity Neighbors from binary geometries arguments.\n */\ntype ContiguityNeighborsFromBinaryGeometriesProps = {\n  binaryGeometryType: BinaryGeometryType;\n  binaryGeometries: BinaryFeatureCollection[];\n  useCentroids: boolean;\n  isQueen: boolean;\n  precisionThreshold?: number;\n  orderOfContiguity?: number;\n  includeLowerOrder?: boolean;\n};\n\n/**\n * Calculates the nearest neighbors for a given set of geometries or latitude/longitude arrays.\n * @param {NearestNeighborsFromBinaryGeometriesProps} input - The input parameters.\n * @returns {Promise<number[][]>} - The nearest neighbors as an array of indices.\n */\nexport async function getContiguityNeighborsFromBinaryGeometries({\n  binaryGeometryType,\n  binaryGeometries,\n  isQueen,\n  useCentroids,\n  precisionThreshold = 0.0,\n  orderOfContiguity = 1,\n  includeLowerOrder = false\n}: ContiguityNeighborsFromBinaryGeometriesProps): Promise<number[][]> {\n  if (!binaryGeometries || binaryGeometries.length === 0) {\n    return [];\n  }\n\n  const neighbors: number[][] = [];\n\n  const wasmInstance = await initWASM();\n  const geomCollection = await getGeometryCollectionFromBinaryGeometries(\n    binaryGeometryType,\n    binaryGeometries,\n    wasmInstance\n  );\n\n  if (geomCollection) {\n    const result =\n      useCentroids || binaryGeometryType.point || binaryGeometryType.line\n        ? wasmInstance.getPointContiguityWeights(\n            geomCollection,\n            isQueen,\n            precisionThreshold,\n            orderOfContiguity,\n            includeLowerOrder\n          )\n        : wasmInstance.getPolygonContiguityWeights(\n            geomCollection,\n            isQueen,\n            precisionThreshold,\n            orderOfContiguity,\n            includeLowerOrder\n          );\n    for (let i = 0; i < result.size(); ++i) {\n      const nbrs = result.get(i);\n      const nbrIndices: number[] = Array(nbrs.size());\n      for (let j = 0, nbrSize = nbrs.size(); j < nbrSize; ++j) {\n        nbrIndices[j] = nbrs.get(j);\n      }\n      neighbors[i] = nbrIndices;\n    }\n  }\n\n  return neighbors;\n}\n", "export type WeightsMeta = {\n  [key: string]: unknown;\n  id?: string;\n  type?: 'knn' | 'threshold' | 'queen' | 'rook';\n  symmetry?: 'symmetric' | 'asymmetric';\n  numberOfObservations: number;\n  minNeighbors: number;\n  maxNeighbors: number;\n  meanNeighbors: number;\n  medianNeighbors: number;\n  pctNoneZero: number;\n  order?: number;\n  incLowerOrder?: boolean;\n  k?: number;\n  threshold?: number;\n  distanceMetric?: 'euclidean' | 'manhattan' | 'arc' | 'projected';\n  distanceUnit?:\n    | 'Foot_US'\n    | 'Yard_US'\n    | 'Meter'\n    | 'Kilometer'\n    | 'NauticalMile'\n    | 'Degree'\n    | 'Radian';\n};\n\n/**\n * Get the meta data from the weights structure\n * @param weights the weights structure of every observation using row index\n * @returns WeightsMeta\n */\nexport function getMetaFromWeights(weights: number[][], isDistanceWeights = false): WeightsMeta {\n  const n = weights.length;\n  let minNeighbors = Math.min(...weights.map(w => w.length));\n  let maxNeighbors = Math.max(...weights.map(w => w.length));\n  let meanNeighbors = weights.reduce((acc, w) => acc + w.length, 0) / n;\n  let medianNeighbors = weights.map(w => w.length).sort((a, b) => a - b)[Math.floor(n / 2)];\n  let sumofNeighbors = weights.reduce((acc, w) => acc + w.length, 0);\n  let pctNoneZero = sumofNeighbors / (n * n);\n\n  if (isDistanceWeights) {\n    minNeighbors = Math.min(...weights.map(w => w.length / 2));\n    maxNeighbors = Math.max(...weights.map(w => w.length / 2));\n    meanNeighbors = weights.reduce((acc, w) => acc + w.length / 2, 0) / n;\n    medianNeighbors = weights.map(w => w.length / 2).sort((a, b) => a - b)[Math.floor(n / 2)];\n    sumofNeighbors = weights.reduce((acc, w) => acc + w.length / 2, 0);\n    pctNoneZero = sumofNeighbors / (n * n);\n  }\n\n  return {\n    numberOfObservations: n,\n    minNeighbors,\n    maxNeighbors,\n    meanNeighbors,\n    medianNeighbors,\n    pctNoneZero\n  };\n}\n", "import {VectorDouble, VectorInt, VectorString} from '../wasm';\n\nexport const earthRadius = 6371008.8;\nconst mileToMeters = 1609.344;\n\n// for lat and lng, we use the great circle distance or arc distance\n// in the unit of mile or kilometer (KM)\nexport enum DistanceUnit {\n  Mile = 'Mile',\n  KM = 'KM'\n}\n\n/**\n * Calculate the distance between two points on the earth in the unit of degree\n * @param distance The distance in the unit of mile or kilometer (KM)\n * @param unit The unit of the distance, Mile or KM\n * @returns The distance in the unit of degree\n */\nexport function lengthToDegrees(distance: number, unit: DistanceUnit): number {\n  // length to radians\n  const factor = unit === DistanceUnit.KM ? earthRadius / 1000 : earthRadius / mileToMeters;\n  const radians = distance / factor;\n  // radians to degrees\n  const degrees = radians % (2 * Math.PI);\n  return degrees;\n}\n\n/**\n * Calculate the distance between two points on the earth in the unit of meters\n * @param distance The distance in the unit of mile or kilometer (KM)\n * @param unit The unit of the distance, Mile or KM\n * @returns The distance in the unit of meters\n */\nexport function lengthToMeters(distance: number, unit: DistanceUnit): number {\n  return unit === DistanceUnit.Mile ? distance * mileToMeters : distance * 1000;\n}\n\n/**\n * Convert the std::vector<double> data to number[]\n * @param data The std::vector<double> data\n * @returns The values in number[] format.\n */\nexport function vecDoubleToNumber(data: VectorDouble): number[] {\n  const result: number[] = [];\n\n  const n = data.size();\n  for (let i = 0; i < n; ++i) {\n    result.push(data.get(i));\n  }\n\n  return result;\n}\n\n/**\n * Convert the std::vector<int> data to number[]\n * @param data The std::vector<int> data\n * @returns The values in number[] format.\n */\nexport function vecIntToNumber(data: VectorInt): number[] {\n  const result: number[] = [];\n\n  const n = data.size();\n  for (let i = 0; i < n; ++i) {\n    result.push(data.get(i));\n  }\n\n  return result;\n}\n\n/**\n * Convert the std::vector<string> data to string[]\n * @param data The std::vector<string> data\n * @returns The values in string[] format.\n */\nexport function vecStringToArray(data: VectorString): string[] {\n  const result: string[] = [];\n\n  const n = data.size();\n  for (let i = 0; i < n; ++i) {\n    result.push(data.get(i));\n  }\n\n  return result;\n}\n", "import {initWASM} from '../init';\nimport {vecDoubleToNumber, vecIntToNumber, vecStringToArray} from '../utils';\n\nexport type LocalMoranResult = {\n  isValid: boolean;\n  clusters: number[];\n  lagValues: number[];\n  pValues: number[];\n  lisaValues: number[];\n  sigCategories: number[];\n  nn: number[];\n  labels: string[];\n  colors: string[];\n};\n\nexport type LocalMoranProps = {\n  data: number[] | Float32Array;\n  neighbors: number[][];\n  permutation: number;\n  significanceCutoff?: number;\n  seed?: number;\n};\n\n// Get local moran statistics\nexport async function localMoran({\n  data,\n  neighbors,\n  permutation,\n  significanceCutoff = 0.05,\n  seed = 1234567890\n}: LocalMoranProps): Promise<LocalMoranResult> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n  }\n\n  const wasmNeighbors = new wasm.VecVecUInt();\n  const wasmUndefs = new wasm.VectorUInt();\n\n  for (let i = 0; i < n; ++i) {\n    const nbrs = neighbors[i];\n    const wasmNeighborIndices = new wasm.VectorUInt();\n    for (let j = 0, numNbrs = nbrs.length; j < numNbrs; ++j) {\n      wasmNeighborIndices.push_back(nbrs[j]);\n    }\n    wasmNeighbors.push_back(wasmNeighborIndices);\n  }\n\n  const result = wasm.localMoran(\n    wasmData,\n    wasmNeighbors,\n    wasmUndefs,\n    significanceCutoff,\n    permutation,\n    seed\n  );\n\n  return {\n    isValid: result.isValid(),\n    clusters: vecDoubleToNumber(result.getClusters()),\n    lagValues: vecDoubleToNumber(result.getLagValues()),\n    lisaValues: vecDoubleToNumber(result.getLisaValues()),\n    pValues: vecDoubleToNumber(result.getPValues()),\n    sigCategories: vecIntToNumber(result.getSignificanceCategories()),\n    nn: vecIntToNumber(result.getNN()),\n    labels: vecStringToArray(result.getLabels()),\n    colors: vecStringToArray(result.getColors())\n  };\n}\n\nexport type BivariateLocalMoranProps = {\n  data1: number[] | Float32Array;\n  data2: number[] | Float32Array;\n  neighbors: number[][];\n  permutation: number;\n  significanceCutoff?: number;\n  seed?: number;\n};\n\n// Get bivariate local moran statistics\nexport async function bivariateLocalMoran({\n  data1,\n  data2,\n  neighbors,\n  permutation,\n  significanceCutoff = 0.05,\n  seed = 1234567890\n}: BivariateLocalMoranProps): Promise<LocalMoranResult> {\n  const wasm = await initWASM();\n\n  const n = data1.length;\n  const wasmData1 = new wasm.VectorDouble();\n  wasmData1.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData1.set(i, data1[i]);\n  }\n  const wasmData2 = new wasm.VectorDouble();\n  wasmData2.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData2.set(i, data2[i]);\n  }\n\n  const wasmNeighbors = new wasm.VecVecUInt();\n  const wasmUndefs = new wasm.VectorUInt();\n\n  for (let i = 0; i < n; ++i) {\n    const nbrs = neighbors[i];\n    const wasmNeighborIndices = new wasm.VectorUInt();\n    for (let j = 0, numNbrs = nbrs.length; j < numNbrs; ++j) {\n      wasmNeighborIndices.push_back(nbrs[j]);\n    }\n    wasmNeighbors.push_back(wasmNeighborIndices);\n  }\n\n  const result = wasm.bivariateLocalMoran(\n    wasmData1,\n    wasmData2,\n    wasmNeighbors,\n    wasmUndefs,\n    significanceCutoff,\n    permutation,\n    seed\n  );\n\n  return {\n    isValid: result.isValid(),\n    clusters: vecDoubleToNumber(result.getClusters()),\n    lagValues: vecDoubleToNumber(result.getLagValues()),\n    lisaValues: vecDoubleToNumber(result.getLisaValues()),\n    pValues: vecDoubleToNumber(result.getPValues()),\n    sigCategories: vecIntToNumber(result.getSignificanceCategories()),\n    nn: vecIntToNumber(result.getNN()),\n    labels: vecStringToArray(result.getLabels()),\n    colors: vecStringToArray(result.getColors())\n  };\n}\n", "import {LocalMoranResult} from './local-moran';\nimport {initWASM} from '../init';\nimport {vecDoubleToNumber, vecIntToNumber, vecStringToArray} from '../utils';\n\nexport type LocalGProps = {\n  data: number[] | Float32Array;\n  neighbors: number[][];\n  permutation: number;\n  significanceCutoff?: number;\n  seed?: number;\n  isGStar?: boolean;\n};\n// Get local Getis-Ord statistics\nexport async function localG({\n  data,\n  neighbors,\n  permutation,\n  significanceCutoff = 0.05,\n  seed = 1234567890,\n  isGStar = false\n}: LocalGProps): Promise<LocalMoranResult> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n  }\n\n  const wasmUndefs = new wasm.VectorUInt();\n  const wasmNeighbors = new wasm.VecVecUInt();\n  for (let i = 0; i < n; ++i) {\n    const nbrs = neighbors[i];\n    const wasmNeighborIndices = new wasm.VectorUInt();\n    for (let j = 0, numNbrs = nbrs.length; j < numNbrs; ++j) {\n      wasmNeighborIndices.push_back(nbrs[j]);\n    }\n    wasmNeighbors.push_back(wasmNeighborIndices);\n  }\n\n  const result = wasm.localG(\n    wasmData,\n    wasmNeighbors,\n    wasmUndefs,\n    significanceCutoff,\n    permutation,\n    seed,\n    isGStar ? 1 : 0\n  );\n\n  return {\n    isValid: result.isValid(),\n    clusters: vecDoubleToNumber(result.getClusters()),\n    lagValues: vecDoubleToNumber(result.getLagValues()),\n    lisaValues: vecDoubleToNumber(result.getLisaValues()),\n    pValues: vecDoubleToNumber(result.getPValues()),\n    sigCategories: vecIntToNumber(result.getSignificanceCategories()),\n    nn: vecIntToNumber(result.getNN()),\n    labels: vecStringToArray(result.getLabels()),\n    colors: vecStringToArray(result.getColors())\n  };\n}\n", "import {LocalMoranResult} from './local-moran';\nimport {initWASM} from '../init';\nimport {vecDoubleToNumber, vecIntToNumber, vecStringToArray} from '../utils';\n\nexport type LocalGearyProps = {\n  data: number[] | Float32Array;\n  neighbors: number[][];\n  permutation: number;\n  significanceCutoff?: number;\n  seed?: number;\n};\n\n// Get local geary statistics\nexport async function localGeary({\n  data,\n  neighbors,\n  permutation,\n  significanceCutoff = 0.05,\n  seed = 1234567890\n}: LocalGearyProps): Promise<LocalMoranResult> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n  }\n\n  const wasmNeighbors = new wasm.VecVecUInt();\n  const wasmUndefs = new wasm.VectorUInt();\n\n  for (let i = 0; i < n; ++i) {\n    const nbrs = neighbors[i];\n    const wasmNeighborIndices = new wasm.VectorUInt();\n    for (let j = 0, numNbrs = nbrs.length; j < numNbrs; ++j) {\n      wasmNeighborIndices.push_back(nbrs[j]);\n    }\n    wasmNeighbors.push_back(wasmNeighborIndices);\n  }\n\n  const result = wasm.localGeary(\n    wasmData,\n    wasmNeighbors,\n    wasmUndefs,\n    significanceCutoff,\n    permutation,\n    seed\n  );\n\n  return {\n    isValid: result.isValid(),\n    clusters: vecDoubleToNumber(result.getClusters()),\n    lagValues: vecDoubleToNumber(result.getLagValues()),\n    lisaValues: vecDoubleToNumber(result.getLisaValues()),\n    pValues: vecDoubleToNumber(result.getPValues()),\n    sigCategories: vecIntToNumber(result.getSignificanceCategories()),\n    nn: vecIntToNumber(result.getNN()),\n    labels: vecStringToArray(result.getLabels()),\n    colors: vecStringToArray(result.getColors())\n  };\n}\n\nexport type MultivariateLocalGearyProps = {\n  data: number[][];\n  neighbors: number[][];\n  permutation: number;\n  significanceCutoff?: number;\n  seed?: number;\n};\n\n// Get multivariate local geary statistics\nexport async function multivariateLocalGeary({\n  data,\n  neighbors,\n  permutation,\n  significanceCutoff = 0.05,\n  seed = 1234567890\n}: MultivariateLocalGearyProps): Promise<LocalMoranResult> {\n  const wasm = await initWASM();\n\n  const n = neighbors.length;\n  const wasmData = new wasm.VecVecDouble();\n  for (let i = 0; i < data.length; ++i) {\n    const vals = new wasm.VectorDouble();\n    for (let j = 0; j < data[i].length; ++j) {\n      vals.push_back(data[i][j]);\n    }\n    wasmData.push_back(vals);\n  }\n\n  const wasmNeighbors = new wasm.VecVecUInt();\n  const wasmUndefs = new wasm.VecVecUInt();\n\n  for (let i = 0; i < n; ++i) {\n    const nbrs = neighbors[i];\n    const wasmNeighborIndices = new wasm.VectorUInt();\n    for (let j = 0, numNbrs = nbrs.length; j < numNbrs; ++j) {\n      wasmNeighborIndices.push_back(nbrs[j]);\n    }\n    wasmNeighbors.push_back(wasmNeighborIndices);\n  }\n\n  const result = wasm.multivariateLocalGeary(\n    wasmData,\n    wasmNeighbors,\n    wasmUndefs,\n    significanceCutoff,\n    permutation,\n    seed\n  );\n\n  return {\n    isValid: result.isValid(),\n    clusters: vecDoubleToNumber(result.getClusters()),\n    lagValues: vecDoubleToNumber(result.getLagValues()),\n    lisaValues: vecDoubleToNumber(result.getLisaValues()),\n    pValues: vecDoubleToNumber(result.getPValues()),\n    sigCategories: vecIntToNumber(result.getSignificanceCategories()),\n    nn: vecIntToNumber(result.getNN()),\n    labels: vecStringToArray(result.getLabels()),\n    colors: vecStringToArray(result.getColors())\n  };\n}\n", "import {LocalMoranResult} from './local-moran';\nimport {initWASM} from '../init';\nimport {vecDoubleToNumber, vecIntToNumber, vecStringToArray} from '../utils';\n\nexport type QuantileLisaProps = {\n  k: number;\n  quantile: number;\n  data: number[] | Float32Array;\n  neighbors: number[][];\n  permutation: number;\n  significanceCutoff?: number;\n  seed?: number;\n};\n\n/**\n * Get local Quantile Lisa statistics\n * @param k The number of classes/categories\n * @param quantile The quantile value\n * @param data The numeric values to be classified.\n * @param neighbors The neighbors of each observation\n * @param permutation The number of permutations\n * @param significanceCutoff The significance cutoff\n * @param seed The seed value\n * @returns LISA result\n */\nexport async function quantileLisa({\n  k,\n  quantile,\n  data,\n  neighbors,\n  permutation,\n  significanceCutoff = 0.05,\n  seed = 1234567890\n}: QuantileLisaProps): Promise<LocalMoranResult> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n  }\n\n  const wasmUndefs = new wasm.VectorUInt();\n  const wasmNeighbors = new wasm.VecVecUInt();\n  for (let i = 0; i < n; ++i) {\n    const nbrs = neighbors[i];\n    const wasmNeighborIndices = new wasm.VectorUInt();\n    for (let j = 0, numNbrs = nbrs.length; j < numNbrs; ++j) {\n      wasmNeighborIndices.push_back(nbrs[j]);\n    }\n    wasmNeighbors.push_back(wasmNeighborIndices);\n  }\n\n  const result = wasm.quantileLisa(\n    k,\n    quantile,\n    wasmData,\n    wasmNeighbors,\n    wasmUndefs,\n    significanceCutoff,\n    permutation,\n    seed\n  );\n\n  return {\n    isValid: result.isValid(),\n    clusters: vecDoubleToNumber(result.getClusters()),\n    lagValues: vecDoubleToNumber(result.getLagValues()),\n    lisaValues: vecDoubleToNumber(result.getLisaValues()),\n    pValues: vecDoubleToNumber(result.getPValues()),\n    sigCategories: vecIntToNumber(result.getSignificanceCategories()),\n    nn: vecIntToNumber(result.getNN()),\n    labels: vecStringToArray(result.getLabels()),\n    colors: vecStringToArray(result.getColors())\n  };\n}\n", "/**\n * Compute spatial lag of a list of values based on a list of neighbors and weights.\n * @param values The numeric values to compute spatial lag for.\n * @param neighbors The list of neighbors for each value.\n * @param weights The weight values for each neighbor.\n * @param useSelfNeighbor The flag to include self as a neighbor.\n * @param rowStandardize The flag to row standardize the spatial lag.\n * @returns The spatial lag values.\n */\n// eslint-disable-next-line max-statements, complexity\nexport function spatialLag(\n  values: number[],\n  neighbors: number[][],\n  rowStandardize = true,\n  weights?: number[][],\n  useSelfNeighbor?: boolean\n): number[] {\n  const n = values.length;\n  const isBinaryWeights = weights === undefined;\n\n  const result = new Array(n).fill(0);\n  // for each observation\n  for (let i = 0; i < n; i++) {\n    let lag = 0;\n    let numOfNbrs = 0;\n    let isSelfIncluded = false;\n    // get neighbors of observation i\n    const nn = neighbors[i];\n    // for each neighbor\n    for (let j = 0; j < nn.length; j++) {\n      // skip self\n      if (i === nn[j]) {\n        isSelfIncluded = true;\n        continue;\n      }\n      if (isBinaryWeights) {\n        lag += values[nn[j]];\n        numOfNbrs += 1;\n      } else {\n        lag += values[nn[j]] * weights[i][j];\n        numOfNbrs += weights[i][j];\n      }\n    }\n    // compute spatial lag\n    if (isBinaryWeights) {\n      // contiguity weights\n      if (useSelfNeighbor) {\n        lag += values[i];\n        numOfNbrs += 1;\n      }\n      if (rowStandardize) {\n        lag = numOfNbrs > 0 ? lag / numOfNbrs : 0;\n      }\n    } else {\n      // inverse or kernel weights\n      if (rowStandardize) {\n        lag = numOfNbrs > 0 ? lag / numOfNbrs : 0;\n      }\n      // TODO why rowStandardize is before useSelfNeighbor?\n      if (useSelfNeighbor) {\n        // eslint-disable-next-line max-depth\n        if (isSelfIncluded) {\n          // only for kernel weights with diagonal elements\n          lag += values[i] * weights[i][nn.length];\n        } else {\n          lag += values[i];\n        }\n      }\n    }\n    result[i] = lag;\n  }\n  return result;\n}\n\n/**\n * Compute the median spatial lag of a list of values based on a list of neighbors and weights using the mean function.\n * @param values The numeric values to compute spatial lag for.\n * @param neighbors The list of neighbors for each value.\n * @returns The spatial lag values.\n */\nexport function spatialLagMedian(values: number[], neighbors: number[][]): number[] {\n  const n = values.length;\n\n  const result = new Array(n).fill(0);\n  // for each observation\n  for (let i = 0; i < n; i++) {\n    // exclude self i from neighbors\n    const nn = neighbors[i].filter(j => j !== i);\n    const vals = nn.map(j => values[j]);\n    vals.sort((a, b) => a - b);\n\n    // if odd number of neighbors, return the middle value\n    // if even number of neighbors, return the average of the two middle values\n    const mid = Math.floor(nn.length / 2);\n    if (nn.length % 2 === 0) {\n      result[i] = (vals[mid - 1] + vals[mid]) / 2;\n    } else {\n      result[i] = vals[mid];\n    }\n  }\n  return result;\n}\n", "export enum RatesOptions {\n  RawRates = 'Raw Rates',\n  ExcessRisk = 'Excess Risk',\n  EmpiricalRisk = 'Empirical Risk',\n  SpatialRates = 'Spatial Rates',\n  SpatialEmpiricalRates = 'Spatial Empirical Rates',\n  EBRateStandardization = 'EB Rate Standardization'\n}\n\nexport type CalculateRatesProps = {\n  eventValues: number[];\n  baseValues: number[];\n  method: string;\n  neighbors?: number[][];\n};\n\nexport function calculateRates({\n  eventValues,\n  baseValues,\n  method,\n  neighbors\n}: CalculateRatesProps): number[] {\n  switch (method) {\n    case RatesOptions.RawRates:\n      return rawRates(baseValues, eventValues);\n    case RatesOptions.ExcessRisk:\n      return excessRisk(baseValues, eventValues);\n    case RatesOptions.EmpiricalRisk:\n      return empiricalBayes(baseValues, eventValues);\n    case RatesOptions.SpatialRates:\n      return neighbors ? spatialRates(baseValues, eventValues, neighbors) : [];\n    case RatesOptions.SpatialEmpiricalRates:\n      return neighbors ? spatialEmpiricalBayes(baseValues, eventValues, neighbors) : [];\n    case RatesOptions.EBRateStandardization:\n      return rateStandardizeEB(baseValues, eventValues);\n    default:\n      return [];\n  }\n}\n\n/**\n * Compute Raw Rate or crude rate (proportion), the simple ratio of the events\n * (number of lung cancer cases) over the population at risk (the county population).\n *\n * @param baseValues The values of base variable.\n * @param eventValues The values of event variable.\n * @returns The rates values.\n */\nexport function rawRates(baseValues: number[], eventValues: number[]): number[] {\n  const n = baseValues.length;\n  const rates = new Array(n).fill(0);\n\n  for (let i = 0; i < n; i++) {\n    if (baseValues[i] > 0) {\n      rates[i] = eventValues[i] / baseValues[i];\n    } else {\n      rates[i] = 0;\n    }\n  }\n  return rates;\n}\n\n/**\n * Compute excess risk (relative risk), the ratio of the observed number of cases\n * to the expected number of cases in the population.\n *\n * @param baseValues The values of base variable.\n * @param eventValues The values of event variable.\n * @returns The rates values.\n */\nexport function excessRisk(baseValues: number[], eventValues: number[]): number[] {\n  const n = baseValues.length;\n  const risks = new Array(n).fill(0);\n\n  let SP = 0;\n  let SE = 0;\n\n  for (let i = 0; i < n; i++) {\n    SP += baseValues[i];\n    SE += eventValues[i];\n  }\n\n  let lambda = 1;\n  if (SP > 0) {\n    lambda = SE / SP;\n  }\n\n  for (let i = 0; i < n; i++) {\n    const eHat = baseValues[i] * lambda;\n    if (eHat > 0) {\n      risks[i] = eventValues[i] / eHat;\n    } else {\n      risks[i] = 0;\n    }\n  }\n\n  return risks;\n}\n\n/**\n * Compute the empirical Bayes smoothed rates, which is a weighted average of the crude rate\n * and the overall rate, where the weights are based on the variability of the crude rates.\n *\n * @param baseValues The values of base variable.\n * @param eventValues The values of event variable.\n * @returns The rates values.\n */\nexport function empiricalBayes(baseValues: number[], eventValues: number[]): number[] {\n  const n = baseValues.length;\n  const results = new Array(n).fill(0);\n  const piRaw = new Array(n).fill(0);\n  let SP = 0;\n  let SE = 0;\n\n  for (let i = 0; i < n; i++) {\n    SP += baseValues[i];\n    SE += eventValues[i];\n    if (baseValues[i] > 0) {\n      piRaw[i] = eventValues[i] / baseValues[i];\n    }\n  }\n\n  const theta1 = SP > 0 ? SE / SP : 1;\n  const pBar = SP / n;\n  let q1 = 0;\n  let w = 0;\n\n  for (let i = 0; i < n; i++) {\n    q1 += Math.pow(piRaw[i] - theta1, 2) * baseValues[i];\n  }\n  let theta2 = q1 / SP - theta1 / pBar;\n\n  if (theta2 < 0) {\n    theta2 = 0;\n  }\n\n  for (let i = 0; i < n; i++) {\n    q1 = theta2 + theta1 / baseValues[i];\n    w = q1 > 0 ? theta2 / q1 : 1;\n    results[i] = w * piRaw[i] + (1 - w) * theta1;\n  }\n\n  return results;\n}\n\n/**\n * Compute the spatial empirical Bayes smoothed rates, which is a weighted average of the crude rate\n * and the overall rate, where the weights are based on the variability of the crude rates and the\n * spatial autocorrelation of the rates.\n *\n * @param baseValues The values of base variable.\n * @param eventValues The values of event variable.\n * @param neighbors The list of neighbors for each value.\n * @returns The rates values.\n */\nexport function spatialEmpiricalBayes(\n  baseValues: number[],\n  eventValues: number[],\n  neighbors: number[][]\n): number[] {\n  const n = baseValues.length;\n  const results = new Array(n).fill(0);\n  const piRaw = new Array(n).fill(0);\n\n  for (let i = 0; i < n; i++) {\n    piRaw[i] = baseValues[i] > 0 ? eventValues[i] / baseValues[i] : 1;\n  }\n\n  for (let i = 0; i < n; i++) {\n    let SP = baseValues[i];\n    let SE = eventValues[i];\n    const nn = neighbors[i];\n\n    for (let j = 0; j < nn.length; j++) {\n      SP += baseValues[nn[j]];\n      SE += eventValues[nn[j]];\n    }\n\n    const theta1 = SP > 0 ? SE / SP : 1;\n\n    if (nn.length > 0) {\n      const pBar = SP / (nn.length + 1);\n      let q1 = Math.pow(piRaw[i] - theta1, 2) * baseValues[i];\n\n      for (let j = 0; j < nn.length; j++) {\n        q1 += Math.pow(piRaw[nn[j]] - theta1, 2) * baseValues[nn[j]];\n      }\n\n      let theta2 = q1 / SP - theta1 / pBar;\n\n      if (theta2 < 0) {\n        theta2 = 0;\n      }\n\n      q1 = theta2 + theta1 / baseValues[i];\n      const w = q1 > 0 ? theta2 / q1 : 1;\n      results[i] = w * piRaw[i] + (1 - w) * theta1;\n    }\n  }\n\n  return results;\n}\n\n/**\n * Compute the spatial rates, which is the ratio of the events (number of lung cancer cases)\n * over the population at risk (the county population) and its neighbors.\n *\n * @param baseValues The values of base variable.\n * @param eventValues The values of event variable.\n * @param neighbors The list of neighbors for each value.\n * @returns The rates values.\n */\nexport function spatialRates(\n  baseValues: number[],\n  eventValues: number[],\n  neighbors: number[][]\n): number[] {\n  const n = baseValues.length;\n  const rates = new Array(n).fill(0);\n\n  for (let i = 0; i < n; i++) {\n    let SP = baseValues[i];\n    let SE = eventValues[i];\n    const nn = neighbors[i];\n\n    for (let j = 0; j < nn.length; j++) {\n      SP += baseValues[nn[j]];\n      SE += eventValues[nn[j]];\n    }\n\n    if (baseValues[i] + SP > 0) {\n      rates[i] = (eventValues[i] + SE) / (baseValues[i] + SP);\n    }\n  }\n\n  return rates;\n}\n\nexport function rateStandardizeEB(baseValues: number[], eventValues: number[]): number[] {\n  const n = baseValues.length;\n  const results = new Array(n).fill(0);\n  const piRaw = new Array(n).fill(0);\n  let SP = 0;\n  let SE = 0;\n\n  // compute pi, the rate i, and the pop. rate b_hat\n  for (let i = 0; i < n; i++) {\n    SP += baseValues[i];\n    SE += eventValues[i];\n    if (baseValues[i] > 0) {\n      piRaw[i] = eventValues[i] / baseValues[i];\n    }\n  }\n\n  if (SP === 0) {\n    return results;\n  }\n\n  const bHat = SE / SP;\n\n  // compute a_hat, the variance\n  let gamma = 0;\n  for (let i = 0; i < n; i++) {\n    gamma += Math.pow(piRaw[i] - bHat, 2) * baseValues[i];\n  }\n\n  const a = gamma / SP - bHat / (SP / n);\n  const aHat = a > 0 ? a : 0;\n\n  for (let i = 0; i < n; i++) {\n    const se = baseValues[i] > 0 ? Math.sqrt(aHat + bHat / baseValues[i]) : 0;\n    results[i] = se > 0 ? (piRaw[i] - bHat) / se : 0;\n  }\n\n  return results;\n}\n", "import {initWASM} from '../init';\nimport {vecDoubleToNumber} from '../utils';\n\n/**\n * The quantile breaks algorithm to determine the best way to break up the data into k groups. Each group has the same number of observations.\n * @param k The number of classes/categories\n * @param data The numeric values to be classified.\n * @returns The breaks values.\n */\nexport async function quantileBreaks(k: number, data: number[] | Float32Array): Promise<number[]> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n\n  const wasmUndefs = new wasm.VectorUInt();\n  wasmUndefs.resize(n, 0);\n\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n    if (data[i] === undefined || data[i] === null) {\n      wasmUndefs.set(i, 1);\n    }\n  }\n\n  const result = wasm.quantileBreaks(k, wasmData, wasmUndefs);\n\n  return vecDoubleToNumber(result);\n}\n", "import {initWASM} from '../init';\nimport {vecDoubleToNumber} from '../utils';\n\n/**\n * The natural breaks (Jenks) algorithm to determine the best way to break up the data into k different groups.\n * The values in each group are as similar as possible to each other, and as different as possible from the values in the other groups.\n * @param k The number of classes/categories\n * @param data The numeric values to be classified.\n * @returns The breaks values.\n */\nexport async function naturalBreaks(k: number, data: number[] | Float32Array): Promise<number[]> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n\n  const wasmUndefs = new wasm.VectorInt();\n  wasmUndefs.resize(n, 0);\n\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n    if (data[i] === undefined || data[i] === null) {\n      wasmUndefs.set(i, 1);\n    }\n  }\n\n  const result = wasm.naturalBreaks(k, wasmData, wasmUndefs);\n\n  return vecDoubleToNumber(result);\n}\n", "import {initWASM} from '../init';\nimport {vecDoubleToNumber} from '../utils';\n\n/**\n * The equal interval breaks implementation.\n *\n * @param k The number of classes/categories\n * @param data The numeric values to be classified.\n * @returns The breaks values.\n */\nexport async function equalIntervalBreaks(\n  k: number,\n  data: number[] | Float32Array\n): Promise<number[]> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n\n  const wasmUndefs = new wasm.VectorInt();\n  wasmUndefs.resize(n, 0);\n\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n    if (data[i] === undefined || data[i] === null) {\n      wasmUndefs.set(i, 1);\n    }\n  }\n\n  const result = wasm.equalIntervalBreaks(k, wasmData, wasmUndefs);\n\n  return vecDoubleToNumber(result);\n}\n", "import {initWASM} from '../init';\nimport {vecDoubleToNumber} from '../utils';\n\n/**\n * The percentile breaks implementation.\n * The percentile breaks include: <= 1%, (1-10]%, (10-50]%, (50-90)%, [90-99)%, >= 99%\n *\n * @param data The numeric values to be classified.\n * @returns The breaks values.\n */\nexport async function percentileBreaks(data: number[] | Float32Array): Promise<number[]> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n\n  const wasmUndefs = new wasm.VectorInt();\n  wasmUndefs.resize(n, 0);\n\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n    if (data[i] === undefined || data[i] === null) {\n      wasmUndefs.set(i, 1);\n    }\n  }\n\n  const result = wasm.percentileBreaks(wasmData, wasmUndefs);\n\n  return vecDoubleToNumber(result);\n}\n", "import {initWASM} from '../init';\nimport {vecDoubleToNumber} from '../utils';\n\nasync function boxBreaks(data: number[] | Float32Array, hingeFactor: number): Promise<number[]> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n\n  const wasmUndefs = new wasm.VectorInt();\n  wasmUndefs.resize(n, 0);\n\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n    if (data[i] === undefined || data[i] === null) {\n      wasmUndefs.set(i, 1);\n    }\n  }\n\n  const result = wasm.boxBreaks(wasmData, wasmUndefs, hingeFactor);\n\n  return vecDoubleToNumber(result);\n}\n\n/**\n * The implementation of box breaks with hinge = 1.5\n * The categories include: Lower outlier, < 25%, [25-50)%, [50-75)%, >= 75%, Upper outlier\n *\n * @param data The numeric values to be classified.\n * @returns The breaks values.\n */\nexport async function hinge15Breaks(data: number[] | Float32Array): Promise<number[]> {\n  const hingeFactor = 1.5;\n  const result = await boxBreaks(data, hingeFactor);\n  return result;\n}\n\n/**\n * The implementation of box breaks with hinge = 3.0\n * The categories include: Lower outlier, < 25%, [25-50)%, [50-75)%, >= 75%, Upper outlier\n *\n * @param data The numeric values to be classified.\n * @returns The breaks values.\n */\nexport async function hinge30Breaks(data: number[] | Float32Array): Promise<number[]> {\n  const hingeFactor = 3.0;\n  const result = await boxBreaks(data, hingeFactor);\n  return result;\n}", "import {initWASM} from '../init';\nimport {vecDoubleToNumber} from '../utils';\n\n/**\n * The standard deviation breaks implementation.\n * The standard deviation breaks include: < -2 std dev, [-2, -1) std dev, [-1, 0) std dev, [0, 1] std dev, (1, 2] std dev, > 2 std dev\n *\n * @param data The numeric values to be classified.\n * @returns The breaks values.\n */\nexport async function standardDeviationBreaks(data: number[] | Float32Array): Promise<number[]> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n\n  const wasmUndefs = new wasm.VectorInt();\n  wasmUndefs.resize(n, 0);\n\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n    if (data[i] === undefined || data[i] === null) {\n      wasmUndefs.set(i, 1);\n    }\n  }\n\n  const result = wasm.standardDeviationBreaks(wasmData, wasmUndefs);\n\n  return vecDoubleToNumber(result);\n}\n", "import {initWASM} from '../init';\n\nexport async function dotProduct(x: number[], y: number[]): Promise<number> {\n  // check if x and y are of the same length\n  if (x.length !== y.length) {\n    throw new Error('x and y must be of the same length');\n  }\n  const wasmInstance = await initWASM();\n\n  // Create a new vector of doubles\n  const wasmX = new wasmInstance.VectorDouble();\n  wasmX.resize(x.length, 0);\n  for (let i = 0; i < x.length; ++i) {\n    wasmX.set(i, x[i]);\n  }\n  const wasmY = new wasmInstance.VectorDouble();\n  wasmY.resize(y.length, 0);\n  for (let i = 0; i < y.length; ++i) {\n    wasmY.set(i, y[i]);\n  }\n  const result = wasmInstance.dotProduct(wasmX, wasmY);\n  return result;\n}\n\nexport type LinearRegressionProps = {\n  x: number[][];\n  y: number[];\n  weights?: number[][];\n  weightsId?: string;\n  xNames: string[];\n  yName: string;\n  datasetName: string;\n  xUndefs?: number[][];\n  yUndefs?: number[];\n};\n\nexport type LinearRegressionResult = {\n  type: string;\n  dependentVariable: string;\n  independentVariables: string[];\n  title: string;\n  datasetName: string;\n  weightsId?: string;\n  'Number of Observations': number;\n  'Mean Dependent Var': number;\n  'Number of Variables': number;\n  'SD Dependent Var': number;\n  'Degrees of Freedom': number;\n  'R-squared': number;\n  'Adjusted R-squared': number;\n  'F-statistic': number;\n  'Prob(F-statistic)': number;\n  'Sum Squared Residual': number;\n  'Log Likelihood': number;\n  'Sigma-Square': number;\n  'Akaike Info Criterion': number;\n  'SE of Regression': number;\n  'Schwarz Criterion': number;\n  'Sigma-Square ML': number;\n  'Variable Coefficients': Array<{\n    Variable: string;\n    Coefficient: number;\n    'Std Error': number;\n    't-Statistic': number;\n    Probability: number;\n  }>;\n  'REGRESSION DIAGNOSTICS': {\n    'MULTICOLLINEARITY CONDITION NUMBER': number;\n    'TEST ON NORMALITY OF ERRORS': {\n      Test: string;\n      'Jarque-Bera DF': number;\n      'Jarque-Bera Value': number;\n      'Jarque-Bera Probability': number;\n    };\n  };\n  'DIAGNOSTICS FOR HETEROSKEDASTICITY': {\n    'BREUSCH-PAGAN TEST': {\n      Test: string;\n      'Breusch-Pagan DF': number;\n      'Breusch-Pagan Value': number;\n      'Breusch-Pagan Probability': number;\n    };\n    'KOENKER-Bassett TEST': {\n      Test: string;\n      'Koenker-Bassett DF': number;\n      'Koenker-Bassett Value': number;\n      'Koenker-Bassett Probability': number;\n    };\n  };\n  'DIAGNOSTICS FOR SPATIAL DEPENDENCE': {\n    \"Moran's I (error)\": {\n      Test: string;\n      \"Moran's I (error)\": number;\n      'Moran\u2019s I (error) Z': number;\n      'Moran\u2019s I (error) Probability': number;\n    };\n    'Lagrange Multiplier (lag)': {\n      Test: string;\n      'Lagrange Multiplier (lag) DF': number;\n      'Lagrange Multiplier (lag) Value': number;\n      'Lagrange Multiplier (lag) Probability': number;\n    };\n    'Robust LM (lag)': {\n      Test: string;\n      'Robust LM (lag) DF': number;\n      'Robust LM (lag) Value': number;\n      'Robust LM (lag) Probability': number;\n    };\n    'Lagrange Multiplier (error)': {\n      Test: string;\n      'Lagrange Multiplier (error) DF': number;\n      'Lagrange Multiplier (error) Value': number;\n      'Lagrange Multiplier (error) Probability': number;\n    };\n    'Robust LM (error)': {\n      Test: string;\n      'Robust LM (error) DF': number;\n      'Robust LM (error) Value': number;\n      'Robust LM (error) Probability': number;\n    };\n    'Lagrange Multiplier (SARMA)': {\n      Test: string;\n      'Lagrange Multiplier (SARMA) DF': number;\n      'Lagrange Multiplier (SARMA) Value': number;\n      'Lagrange Multiplier (SARMA) Probability': number;\n    };\n  };\n};\n\n// eslint-disable-next-line max-statements, complexity\nexport async function linearRegression({\n  x,\n  y,\n  weightsId,\n  weights,\n  xNames,\n  yName,\n  datasetName,\n  xUndefs,\n  yUndefs\n}: LinearRegressionProps): Promise<LinearRegressionResult> {\n  const wasmInstance = await initWASM();\n  // Create a new vector of doubles\n  const wasmY = new wasmInstance.VectorDouble();\n  for (let i = 0; i < y.length; ++i) {\n    wasmY.push_back(y[i]);\n  }\n  // Create a new VecVecDouble for x\n  const wasmX = new wasmInstance.VecVecDouble();\n  for (let i = 0; i < x.length; ++i) {\n    const vals = new wasmInstance.VectorDouble();\n    for (let j = 0; j < x[i].length; ++j) {\n      vals.push_back(x[i][j]);\n    }\n    wasmX.push_back(vals);\n  }\n  // Create a new VecVecUInt for weights\n  const wasmWeights = new wasmInstance.VecVecUInt();\n  if (weights) {\n    for (let i = 0; i < weights.length; ++i) {\n      const vals = new wasmInstance.VectorUInt();\n      for (let j = 0; j < weights[i].length; ++j) {\n        vals.push_back(weights[i][j]);\n      }\n      wasmWeights.push_back(vals);\n    }\n  }\n  // Create a new vector of strings for xNames\n  const wasmXNames = new wasmInstance.VectorString();\n  for (let i = 0; i < xNames.length; ++i) {\n    wasmXNames.push_back(xNames[i]);\n  }\n  // Create a new VectorInt for yUndefs\n  const wasmYUndefs = new wasmInstance.VectorUInt();\n  if (yUndefs) {\n    for (let i = 0; i < yUndefs.length; ++i) {\n      wasmYUndefs.push_back(yUndefs[i]);\n    }\n  }\n  // Create a new VecVecInt for xUndefs\n  const wasmXUndefs = new wasmInstance.VecVecUInt();\n  if (xUndefs) {\n    for (let i = 0; i < xUndefs.length; ++i) {\n      const vals = new wasmInstance.VectorUInt();\n      for (let j = 0; j < xUndefs[i].length; ++j) {\n        vals.push_back(xUndefs[i][j]);\n      }\n      wasmXUndefs.push_back(vals);\n    }\n  }\n\n  const regReport = wasmInstance.linearRegression(\n    wasmY,\n    wasmX,\n    wasmWeights,\n    yName,\n    wasmXNames,\n    datasetName,\n    wasmYUndefs,\n    wasmXUndefs\n  );\n\n  const coefficients = [];\n  for (let i = 0; i < xNames.length + 1; ++i) {\n    coefficients.push({\n      Variable: regReport.GetXVarName(i),\n      Coefficient: regReport.GetCoefficient(i),\n      'Std Error': regReport.GetStdError(i),\n      't-Statistic': regReport.GetZValue(i),\n      Probability: regReport.GetProbability(i)\n    });\n  }\n\n  const result = {\n    type: 'linearRegression',\n    dependentVariable: yName,\n    independentVariables: xNames,\n    title: 'ORDINARY LEAST SQUARES ESTIMATION',\n    datasetName,\n    weightsId,\n    'Number of Observations': regReport.GetNoObservation(),\n    'Mean Dependent Var': regReport.GetMeanY(),\n    'Number of Variables': xNames.length + 1,\n    'SD Dependent Var': regReport.GetSDevY(),\n    'Degrees of Freedom': regReport.GetNoObservation() - xNames.length - 1,\n    'R-squared': regReport.GetR2(),\n    'Adjusted R-squared': regReport.GetR2_adjust(),\n    'F-statistic': regReport.GetFtest(),\n    'Prob(F-statistic)': regReport.GetFtestProb(),\n    'Sum Squared Residual': regReport.GetRSS(),\n    'Log Likelihood': regReport.GetLIK(),\n    'Sigma-Square': regReport.GetSIQ_SQ(),\n    'Akaike Info Criterion': regReport.GetAIC(),\n    'SE of Regression': Math.sqrt(regReport.GetSIQ_SQ()),\n    'Schwarz Criterion': regReport.GetOLS_SC(),\n    'Sigma-Square ML': regReport.GetSIQ_SQLM(),\n    'SE of Regression ML': Math.sqrt(regReport.GetSIQ_SQLM()),\n    'Variable Coefficients': coefficients,\n    'REGRESSION DIAGNOSTICS': {\n      'MULTICOLLINEARITY CONDITION NUMBER': regReport.GetConditionNumber(),\n      'TEST ON NORMALITY OF ERRORS': {\n        Test: 'Jarque-Bera',\n        'Jarque-Bera DF': regReport.GetJBtest(0),\n        'Jarque-Bera Value': regReport.GetJBtest(1),\n        'Jarque-Bera Probability': regReport.GetJBtest(2)\n      }\n    },\n    'DIAGNOSTICS FOR HETEROSKEDASTICITY': {\n      'BREUSCH-PAGAN TEST': {\n        Test: 'Breusch-Pagan',\n        'Breusch-Pagan DF': regReport.GetBPtest(0),\n        'Breusch-Pagan Value': regReport.GetBPtest(1),\n        'Breusch-Pagan Probability': regReport.GetBPtest(2)\n      },\n      'KOENKER-Bassett TEST': {\n        Test: 'Koenker-Bassett',\n        'Koenker-Bassett DF': regReport.GetKBtest(0),\n        'Koenker-Bassett Value': regReport.GetKBtest(1),\n        'Koenker-Bassett Probability': regReport.GetKBtest(2)\n      }\n    },\n    'DIAGNOSTICS FOR SPATIAL DEPENDENCE': {\n      \"Moran's I (error)\": {\n        Test: \"Moran's I (error)\",\n        \"Moran's I (error)\": regReport.GetMoranI(0),\n        'Moran\u2019s I (error) Z': regReport.GetMoranI(1),\n        'Moran\u2019s I (error) Probability': regReport.GetMoranI(2)\n      },\n      'Lagrange Multiplier (lag)': {\n        Test: 'Lagrange Multiplier (lag)',\n        'Lagrange Multiplier (lag) DF': regReport.GetLMLAG(0),\n        'Lagrange Multiplier (lag) Value': regReport.GetLMLAG(1),\n        'Lagrange Multiplier (lag) Probability': regReport.GetLMLAG(2)\n      },\n      'Robust LM (lag)': {\n        Test: 'Robust LM (lag)',\n        'Robust LM (lag) DF': regReport.GetLMLAGRob(0),\n        'Robust LM (lag) Value': regReport.GetLMLAGRob(1),\n        'Robust LM (lag) Probability': regReport.GetLMLAGRob(2)\n      },\n      'Lagrange Multiplier (error)': {\n        Test: 'Lagrange Multiplier (error)',\n        'Lagrange Multiplier (error) DF': regReport.GetLMERR(0),\n        'Lagrange Multiplier (error) Value': regReport.GetLMERR(1),\n        'Lagrange Multiplier (error) Probability': regReport.GetLMERR(2)\n      },\n      'Robust LM (error)': {\n        Test: 'Robust LM (error)',\n        'Robust LM (error) DF': regReport.GetLMERRRob(0),\n        'Robust LM (error) Value': regReport.GetLMERRRob(1),\n        'Robust LM (error) Probability': regReport.GetLMERRRob(2)\n      },\n      'Lagrange Multiplier (SARMA)': {\n        Test: 'Lagrange Multiplier (SARMA)',\n        'Lagrange Multiplier (SARMA) DF': regReport.GetLMSarma(0),\n        'Lagrange Multiplier (SARMA) Value': regReport.GetLMSarma(1),\n        'Lagrange Multiplier (SARMA) Probability': regReport.GetLMSarma(2)\n      }\n    }\n  };\n\n  return result;\n}\n\n// eslint-disable-next-line max-statements\nexport function printLinearRegressionResult(regressionReport: LinearRegressionResult): string {\n  // print the regression report using GeoDa's format\n  let output = '';\n  output += `Dataset: ${regressionReport.datasetName}\\n`;\n  output += `${regressionReport.weightsId ? `Weights: ${regressionReport.weightsId}\\n` : ''}`;\n  output += `Dependent Variable: ${regressionReport.dependentVariable}\\n`;\n  output += `Mean Dependent Var: ${regressionReport['Mean Dependent Var']}\\n`;\n  output += `SD Dependent Var: ${regressionReport['SD Dependent Var']}\\n`;\n  output += `No. Observations: ${regressionReport['Number of Observations']}\\n`;\n  output += `Degrees of Freedom: ${regressionReport['Degrees of Freedom']}\\n`;\n  output += `R-squared: ${regressionReport['R-squared']}\\n`;\n  output += `Adj. R-squared: ${regressionReport['Adjusted R-squared']}\\n`;\n  output += `F-statistic: ${regressionReport['F-statistic']}\\n`;\n  output += `Prob(F-statistic): ${regressionReport['Prob(F-statistic)']}\\n`;\n  output += `Log-Likelihood: ${regressionReport['Log Likelihood']}\\n`;\n  output += `Akaike Info Criterion: ${regressionReport['Akaike Info Criterion']}\\n`;\n  output += `Schwarz Criterion: ${regressionReport['Schwarz Criterion']}\\n`;\n  output += `Sum squared residual: ${regressionReport['Sum Squared Residual']}\\n`;\n  output += `Sigma-square: ${regressionReport['Sigma-Square']}\\n`;\n  output += `SE of regression: ${regressionReport['SE of Regression']}\\n`;\n  output += `Sigma-Square ML: ${regressionReport['Sigma-Square ML']}\\n`;\n  output += `S.E. of regression ML: ${Math.sqrt(regressionReport['Sigma-Square ML'])}\\n`;\n  output += `Variable Coefficients:\\n`;\n  output += `Variable\\tCoefficient\\tStd. Error\\tt-Statistic\\tProbability\\n`;\n  for (const coefficient of regressionReport['Variable Coefficients']) {\n    output += `${coefficient.Variable}\\t${coefficient.Coefficient}\\t${coefficient['Std Error']}\\t${coefficient['t-Statistic']}\\t${coefficient.Probability}\\n`;\n  }\n  output += `\\n\\n#REGRESSION DIAGNOSTICS*\\n`;\n  output += `Multicollinearity Condition Number: ${regressionReport['REGRESSION DIAGNOSTICS']['MULTICOLLINEARITY CONDITION NUMBER']}\\n`;\n  output += `Test on Normality of Errors:\\n`;\n  output += `Test\\tJarque-Bera DF\\tJarque-Bera Value\\tJarque-Bera Probability\\n`;\n  const normalityTest = regressionReport['REGRESSION DIAGNOSTICS']['TEST ON NORMALITY OF ERRORS'];\n  output += `${normalityTest.Test}\\t${normalityTest['Jarque-Bera DF']}\\t${normalityTest['Jarque-Bera Value']}\\t${normalityTest['Jarque-Bera Probability']}\\n\\n`;\n  output += `DIAGNOSTICS FOR HETEROSKEDASTICITY\\n`;\n  output += `Breusch-Pagan Test:\\n`;\n  output += `Test\\tBreusch-Pagan DF\\tBreusch-Pagan Value\\tBreusch-Pagan Probability\\n`;\n  const bpTest = regressionReport['DIAGNOSTICS FOR HETEROSKEDASTICITY']['BREUSCH-PAGAN TEST'];\n  output += `${bpTest.Test}\\t${bpTest['Breusch-Pagan DF']}\\t${bpTest['Breusch-Pagan Value']}\\t${bpTest['Breusch-Pagan Probability']}\\n`;\n  output += `Koenker-Bassett Test:\\n`;\n  output += `Test\\tKoenker-Bassett DF\\tKoenker-Bassett Value\\tKoenker-Bassett Probability\\n`;\n  const kbTest = regressionReport['DIAGNOSTICS FOR HETEROSKEDASTICITY']['KOENKER-Bassett TEST'];\n  output += `${kbTest.Test}\\t${kbTest['Koenker-Bassett DF']}\\t${kbTest['Koenker-Bassett Value']}\\t${kbTest['Koenker-Bassett Probability']}\\n\\n`;\n  if (regressionReport.weightsId) {\n    output += `DIAGNOSTICS FOR SPATIAL DEPENDENCE\\n`;\n    output += `Moran's I (error):\\n`;\n    output += `Test\\tMoran's I (error)\\tMoran\u2019s I (error) Z\\tMoran\u2019s I (error) Probability\\n`;\n    const moranI = regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE'][\"Moran's I (error)\"];\n    output += `${moranI.Test}\\t${moranI[\"Moran's I (error)\"]}\\t${moranI['Moran\u2019s I (error) Z']}\\t${moranI['Moran\u2019s I (error) Probability']}\\n`;\n    output += `Lagrange Multiplier (lag):\\n`;\n    output += `Test\\tLagrange Multiplier (lag) DF\\tLagrange Multiplier (lag) Value\\tLagrange Multiplier (lag) Probability\\n`;\n    const lmLag =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (lag)'];\n    output += `${lmLag.Test}\\t${lmLag['Lagrange Multiplier (lag) DF']}\\t${lmLag['Lagrange Multiplier (lag) Value']}\\t${lmLag['Lagrange Multiplier (lag) Probability']}\\n`;\n    output += `Robust LM (lag):\\n`;\n    output += `Test\\tRobust LM (lag) DF\\tRobust LM (lag) Value\\tRobust LM (lag) Probability\\n`;\n    const lmLagRob = regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Robust LM (lag)'];\n    output += `${lmLagRob.Test}\\t${lmLagRob['Robust LM (lag) DF']}\\t${lmLagRob['Robust LM (lag) Value']}\\t${lmLagRob['Robust LM (lag) Probability']}\\n`;\n    output += `Lagrange Multiplier (error):\\n`;\n    output += `Test\\tLagrange Multiplier (error) DF\\tLagrange Multiplier (error) Value\\tLagrange Multiplier (error) Probability\\n`;\n    const lmError =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (error)'];\n    output += `${lmError.Test}\\t${lmError['Lagrange Multiplier (error) DF']}\\t${lmError['Lagrange Multiplier (error) Value']}\\t${lmError['Lagrange Multiplier (error) Probability']}\\n`;\n    output += `Robust LM (error):\\n`;\n    output += `Test\\tRobust LM (error) DF\\tRobust LM (error) Value\\tRobust LM (error) Probability\\n`;\n    const lmErrorRob = regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Robust LM (error)'];\n    output += `${lmErrorRob.Test}\\t${lmErrorRob['Robust LM (error) DF']}\\t${lmErrorRob['Robust LM (error) Value']}\\t${lmErrorRob['Robust LM (error) Probability']}\\n`;\n    output += `Lagrange Multiplier (SARMA):\\n`;\n    output += `Test\\tLagrange Multiplier (SARMA) DF\\tLagrange Multiplier (SARMA) Value\\tLagrange Multiplier (SARMA) Probability\\n`;\n    const lmSarma =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (SARMA)'];\n    output += `${lmSarma.Test}\\t${lmSarma['Lagrange Multiplier (SARMA) DF']}\\t${lmSarma['Lagrange Multiplier (SARMA) Value']}\\t${lmSarma['Lagrange Multiplier (SARMA) Probability']}\\n`;\n    output += `Based on the spatial diagnostics, the recommended model is: ${selectSpatialModel(\n      regressionReport\n    )}\\n`;\n  }\n  return output;\n}\n\n// function to print number with 4 decimal places\nfunction printNumber(num: number): string {\n  // if num is float and has more than 4 decimal places, round it to 4 decimal places; otherwise return the number as is\n  const numStr = num.toString();\n  if (numStr.includes('.')) {\n    const decimalPlaces = numStr.split('.')[1].length;\n    if (decimalPlaces > 4) {\n      return num.toFixed(4);\n    }\n  }\n  return num.toString();\n}\n\n// eslint-disable-next-line max-statements\nexport function printLinearRegressionResultUsingMarkdown(\n  regressionReport: LinearRegressionResult\n): string {\n  // print the linearRegression result in GeoDa's format using Markdown\n  let output = '';\n  output += `Dataset: ${regressionReport.datasetName}\\n`;\n  output += `${regressionReport.weightsId ? `Weights: ${regressionReport.weightsId}\\n` : ''}`;\n  output += '|  |  |  |  |\\n';\n  output += '|---|---|---|---|\\n';\n  output += `|Dependent Variable |${\n    regressionReport.dependentVariable\n  }| No. Observations |${printNumber(regressionReport['Number of Observations'])}|\\n`;\n  output += `|Mean Dependent Var | ${printNumber(\n    regressionReport['Mean Dependent Var']\n  )}| Number of Variables | ${regressionReport['Number of Variables']} |\\n`;\n  output += `|S.D. dependent var| ${printNumber(\n    regressionReport['SD Dependent Var']\n  )}| Degrees of Freedom | ${regressionReport['Degrees of Freedom']} |\\n`;\n\n  output += `&nbsp;  \\n`;\n  output += '|  |  |  |  |\\n';\n  output += `|R-squared| ${printNumber(regressionReport['R-squared'])}| F-statistic | ${printNumber(\n    regressionReport['F-statistic']\n  )}|\\n`;\n  output += `|Adj. R-squared| ${printNumber(\n    regressionReport['Adjusted R-squared']\n  )}| Prob(F-statistic)| ${printNumber(regressionReport['Prob(F-statistic)'])}|\\n`;\n  output += `|Sum squared residual| ${printNumber(\n    regressionReport['Sum Squared Residual']\n  )}|Log-Likelihood| ${printNumber(regressionReport['Log Likelihood'])}|\\n`;\n  output += `|Sigma-square| ${printNumber(regressionReport['Sigma-Square'])}|AIC| ${printNumber(\n    regressionReport['Akaike Info Criterion']\n  )}|\\n`;\n  output += `|S.E. of regression| ${printNumber(\n    regressionReport['SE of Regression']\n  )}|Schwarz Criterion| ${printNumber(regressionReport['Schwarz Criterion'])}|\\n`;\n  output += `|Sigma-square ML| ${printNumber(Math.sqrt(regressionReport['Sigma-Square ML']))}|||\\n`;\n  output += `|S.E. of regression ML| ${printNumber(\n    Math.sqrt(regressionReport['Sigma-Square ML'])\n  )}|||\\n`;\n\n  output += `&nbsp;  \\n`;\n  output += `Variable Coefficients: \\n\\n`;\n  output += `| Variable&nbsp;&nbsp; | Coefficient&nbsp;&nbsp; | Std. Error&nbsp;&nbsp; | t-Statistic | Probability |\\n`;\n  output += `|---------|-------------|------------|-------------|-------------|\\n`;\n  for (const coefficient of regressionReport['Variable Coefficients']) {\n    output += `${coefficient.Variable} | ${printNumber(coefficient.Coefficient)} | ${printNumber(\n      coefficient['Std Error']\n    )} | ${printNumber(coefficient['t-Statistic'])} | ${printNumber(coefficient.Probability)}\\n`;\n  }\n  output += `&nbsp;  \\n`;\n  output += `\\nREGRESSION DIAGNOSTICS\\n`;\n  output += `&nbsp;  \\n`;\n  output += `&nbsp;  \\n`;\n  output += `Multicollinearity Condition Number: ${printNumber(\n    regressionReport['REGRESSION DIAGNOSTICS']['MULTICOLLINEARITY CONDITION NUMBER']\n  )}\\n\\n`;\n  output += `Test on Normality of Errors:\\n\\n`;\n  output += `Test&nbsp;&nbsp; | DF&nbsp;&nbsp; | Value | Probability\\n`;\n  output += `-----|----------------|-------------------| -----------------------:\\n`;\n  const normalityTest = regressionReport['REGRESSION DIAGNOSTICS']['TEST ON NORMALITY OF ERRORS'];\n  output += `${normalityTest.Test} | ${printNumber(\n    normalityTest['Jarque-Bera DF']\n  )} | ${printNumber(normalityTest['Jarque-Bera Value'])} | ${printNumber(\n    normalityTest['Jarque-Bera Probability']\n  )}\\n\\n`;\n  output += `&nbsp;  \\n`;\n  output += `&nbsp;  \\n`;\n  output += `DIAGNOSTICS FOR HETEROSKEDASTICITY`;\n  output += `&nbsp;  \\n`;\n  output += `RANDOM COEFFICIENTS\\n\\n`;\n  output += `| Test | DF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Probability|\\n`;\n  output += `|------|----|-------|------------|\\n`;\n  const bpTest = regressionReport['DIAGNOSTICS FOR HETEROSKEDASTICITY']['BREUSCH-PAGAN TEST'];\n  output += `|${bpTest.Test}| ${printNumber(bpTest['Breusch-Pagan DF'])} | ${printNumber(\n    bpTest['Breusch-Pagan Value']\n  )} | ${printNumber(bpTest['Breusch-Pagan Probability'])}|\\n`;\n  const kbTest = regressionReport['DIAGNOSTICS FOR HETEROSKEDASTICITY']['KOENKER-Bassett TEST'];\n  output += `|${kbTest.Test}| ${printNumber(kbTest['Koenker-Bassett DF'])} | ${printNumber(\n    kbTest['Koenker-Bassett Value']\n  )} | ${printNumber(kbTest['Koenker-Bassett Probability'])} |\\n`;\n\n  if (regressionReport.weightsId) {\n    output += `&nbsp;  \\n`;\n    output += `&nbsp;  \\n`;\n    output += `DIAGNOSTICS FOR SPATIAL DEPENDENCE\\n\\n`;\n    output += `Test | MI/DF&nbsp;&nbsp; | Value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Probability\\n`;\n    output += `-----|-------|-------|------------\\n`;\n\n    const moranI = regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE'][\"Moran's I (error)\"];\n    output += `${moranI.Test} | ${printNumber(moranI[\"Moran's I (error)\"])} | ${printNumber(\n      moranI['Moran\u2019s I (error) Z']\n    )} | ${printNumber(moranI['Moran\u2019s I (error) Probability'])}\\n`;\n\n    const lmLag =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (lag)'];\n    output += `${lmLag.Test} | ${printNumber(\n      lmLag['Lagrange Multiplier (lag) DF']\n    )} | ${printNumber(lmLag['Lagrange Multiplier (lag) Value'])} | ${printNumber(\n      lmLag['Lagrange Multiplier (lag) Probability']\n    )}\\n`;\n\n    const lmLagRob = regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Robust LM (lag)'];\n    output += `${lmLagRob.Test} | ${printNumber(lmLagRob['Robust LM (lag) DF'])} | ${printNumber(\n      lmLagRob['Robust LM (lag) Value']\n    )} | ${printNumber(lmLagRob['Robust LM (lag) Probability'])}\\n`;\n\n    const lmError =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (error)'];\n    output += `${lmError.Test} | ${printNumber(\n      lmError['Lagrange Multiplier (error) DF']\n    )} | ${printNumber(lmError['Lagrange Multiplier (error) Value'])} | ${printNumber(\n      lmError['Lagrange Multiplier (error) Probability']\n    )}\\n`;\n\n    const lmErrorRob = regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Robust LM (error)'];\n    output += `${lmErrorRob.Test} | ${printNumber(\n      lmErrorRob['Robust LM (error) DF']\n    )} | ${printNumber(lmErrorRob['Robust LM (error) Value'])} | ${printNumber(\n      lmErrorRob['Robust LM (error) Probability']\n    )}\\n`;\n\n    const lmSarma =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (SARMA)'];\n    output += `${lmSarma.Test} | ${printNumber(\n      lmSarma['Lagrange Multiplier (SARMA) DF']\n    )} | ${printNumber(lmSarma['Lagrange Multiplier (SARMA) Value'])} | ${printNumber(\n      lmSarma['Lagrange Multiplier (SARMA) Probability']\n    )}\\n`;\n\n    output += `&nbsp;  \\n`;\n    output += `&nbsp;  \\n`;\n    output += `Based on the spatial diagnostics, the recommended model is: ${selectSpatialModel(\n      regressionReport\n    )}\\n`;\n  }\n\n  return output;\n}\n\n/**\n * function to check which spatail model should be used based on spatial diagnostics\n */\n// eslint-disable-next-line complexity\nexport function selectSpatialModel(regressionReport: LinearRegressionResult): string {\n  let model = 'OLS Model';\n  if (regressionReport.weightsId) {\n    // check the probability of Lagrange Multiplier (lag), and Lagrange Multiplier (error)\n    const lmLag =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (lag)'];\n    const lmError =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (error)'];\n\n    // if both of them are significant, check the probability of Robust LM (lag) and Robust LM (error)\n    if (\n      lmLag['Lagrange Multiplier (lag) Probability'] <= 0.05 &&\n      lmError['Lagrange Multiplier (error) Probability'] <= 0.05\n    ) {\n      const lmLagRob = regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Robust LM (lag)'];\n      const lmErrorRob =\n        regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Robust LM (error)'];\n      if (\n        lmLagRob['Robust LM (lag) Probability'] <= 0.05 &&\n        lmErrorRob['Robust LM (error) Probability'] <= 0.05\n      ) {\n        // if both of them are significant, return the model that has the smaller probability\n        // eslint-disable-next-line max-depth\n        if (\n          lmLag['Lagrange Multiplier (lag) Probability'] <\n          lmError['Lagrange Multiplier (error) Probability']\n        ) {\n          model = 'Spatial Lag Model';\n        } else {\n          model = 'Spatial Error Model';\n        }\n      } else if (lmLagRob['Robust LM (lag) Probability'] <= 0.05) {\n        model = 'Spatial Lag Model';\n      } else if (lmErrorRob['Robust LM (error) Probability'] <= 0.05) {\n        model = 'Spatial Error Model';\n      } else {\n        // if none of them is significant, return the lmLag or lmError model which has smaller probability\n        // eslint-disable-next-line max-depth\n        if (\n          lmLag['Lagrange Multiplier (lag) Probability'] <\n          lmError['Lagrange Multiplier (error) Probability']\n        ) {\n          model = 'Spatial Lag Model';\n        } else {\n          model = 'Spatial Error Model';\n        }\n      }\n    } else if (lmLag['Lagrange Multiplier (lag) Probability'] <= 0.05) {\n      //  if one of them is significant, return the model that is significant\n      model = 'Spatial Lag Model';\n    } else if (lmError['Lagrange Multiplier (error) Probability'] <= 0.05) {\n      model = 'Spatial Error Model';\n    } else {\n      // if none of them is significant (larger than 0.05), set model to OLS and return\n      model = 'OLS Model';\n    }\n  }\n  return model;\n}\n"],
  "mappings": "wxBAAA,IAAAA,GAAAC,GAAA,CAAAC,GAAAC,KAAA,cACA,IAAIC,IAAS,IAAM,CACjB,IAAIC,EAAa,OAAO,SAAa,KAAe,SAAS,cAAgB,SAAS,cAAc,IAAM,OAC1G,OAAI,OAAO,WAAe,MAAaA,EAAaA,GAAc,YAEpE,SAASD,EAAQ,CAAC,EAAI,CAEtB,IAAIE,EAAS,OAAOF,EAAS,IAAcA,EAAQ,CAAC,EAEhDG,EAAqBC,EAEzBF,EAAO,MAAW,IAAI,QAAQ,CAACG,EAASC,IAAW,CAClDH,EAAsBE,EACtBD,EAAqBE,CACtB,CAAC,EAED,IAAIC,EAAkB,OAAO,OAAO,CAAC,EAAGL,CAAM,EAE1CM,EAAa,CAAC,EAEdC,EAAc,iBAEdC,EAAQ,CAACC,EAAQC,IAAY,CAChC,MAAMA,CACP,EAEIC,EAAqB,OAAO,QAAU,SAEtCC,EAAwB,OAAO,eAAiB,WAEhDC,EAAsB,OAAO,SAAW,UAAY,OAAO,QAAQ,UAAY,UAAY,OAAO,QAAQ,SAAS,MAAQ,SAE3HC,EAAuB,CAACH,GAAsB,CAACE,GAAuB,CAACD,EAEvEG,EAAkB,GAEtB,SAASC,EAAWC,EAAM,CACzB,OAAIjB,EAAO,WACHA,EAAO,WAAciB,EAAMF,CAAe,EAE3CA,EAAkBE,CAC1B,CAEA,IAAIC,EAAOC,EAAWC,EAAYC,GAElC,GAAIR,EAAqB,CACxB,IAAIS,EAAK,GAAQ,IAAI,EACjBC,EAAW,GAAQ,MAAM,EACzBX,EACHG,EAAkBQ,EAAS,QAAQR,CAAe,EAAI,IAEtDA,EAAkB,UAAY,IAE/BG,EAAQ,CAACM,EAAUC,KAClBD,EAAWE,GAAUF,CAAQ,EAAI,IAAI,IAAIA,CAAQ,EAAID,EAAS,UAAUC,CAAQ,EACzEF,EAAG,aAAaE,EAAUC,EAAS,OAAY,MAAM,GAE7DL,EAAaI,GAAY,CACxB,IAAIG,EAAMT,EAAMM,EAAU,EAAI,EAC9B,OAAKG,EAAI,SACRA,EAAM,IAAI,WAAWA,CAAG,GAElBA,CACR,EACAR,EAAY,CAACK,EAAUI,EAAQC,EAASJ,EAAS,KAAS,CACzDD,EAAWE,GAAUF,CAAQ,EAAI,IAAI,IAAIA,CAAQ,EAAID,EAAS,UAAUC,CAAQ,EAChFF,EAAG,SAASE,EAAUC,EAAS,OAAY,OAAQ,CAACK,EAAKC,IAAS,CAC7DD,EAAKD,EAAQC,CAAG,EAAQF,EAAOH,EAASM,EAAK,OAASA,CAAI,CAC/D,CAAC,CACF,EACI,CAAC/B,EAAO,aAAkB,QAAQ,KAAK,OAAS,IACnDO,EAAc,QAAQ,KAAK,CAAC,EAAE,QAAQ,MAAO,GAAG,GAEjDD,EAAa,QAAQ,KAAK,MAAM,CAAC,EACjCE,EAAQ,CAACC,EAAQC,IAAY,CAC5B,cAAQ,SAAWD,EACbC,CACP,EACAV,EAAO,QAAa,IAAM,kCAChBW,GAAsBC,KAC5BA,EACHG,EAAkB,KAAK,SAAS,KACtB,OAAO,SAAY,KAAe,SAAS,gBACrDA,EAAkB,SAAS,cAAc,KAEtChB,IACHgB,EAAkBhB,GAEfgB,EAAgB,QAAQ,OAAO,IAAM,EACxCA,EAAkBA,EAAgB,OAAO,EAAGA,EAAgB,QAAQ,SAAU,EAAE,EAAE,YAAY,GAAG,EAAI,CAAC,EAEtGA,EAAkB,GAGlBG,EAAQc,GAAO,CACd,IAAIC,EAAM,IAAI,eACd,OAAAA,EAAI,KAAK,MAAOD,EAAK,EAAK,EAC1BC,EAAI,KAAK,IAAI,EACNA,EAAI,YACZ,EACIrB,IACHQ,EAAaY,GAAO,CACnB,IAAIC,EAAM,IAAI,eACd,OAAAA,EAAI,KAAK,MAAOD,EAAK,EAAK,EAC1BC,EAAI,aAAe,cACnBA,EAAI,KAAK,IAAI,EACN,IAAI,WAAWA,EAAI,QAAQ,CACnC,GAEDd,EAAY,CAACa,EAAKJ,EAAQC,IAAY,CACrC,IAAII,EAAM,IAAI,eACdA,EAAI,KAAK,MAAOD,EAAK,EAAI,EACzBC,EAAI,aAAe,cACnBA,EAAI,OAAS,IAAM,CAClB,GAAIA,EAAI,QAAU,KAAOA,EAAI,QAAU,GAAKA,EAAI,SAAU,CACzDL,EAAOK,EAAI,QAAQ,EACnB,OAEDJ,EAAQ,CACT,EACAI,EAAI,QAAUJ,EACdI,EAAI,KAAK,IAAI,CACd,EAEDZ,GAAiBa,GAAS,SAAS,MAAQA,GAG5C,IAAIC,EAAMnC,EAAO,OAAY,QAAQ,IAAI,KAAK,OAAO,EAEjD8B,GAAM9B,EAAO,UAAe,QAAQ,KAAK,KAAK,OAAO,EAEzD,OAAO,OAAOA,EAAQK,CAAe,EAErCA,EAAkB,KAEdL,EAAO,YAAcM,EAAaN,EAAO,WAEzCA,EAAO,cAAgBO,EAAcP,EAAO,aAE5CA,EAAO,OAASQ,EAAQR,EAAO,MAEnC,IAAIoC,GAEApC,EAAO,aAAeoC,GAAapC,EAAO,YAE9C,IAAIqC,GAAgBrC,EAAO,eAAoB,GAE3C,OAAO,aAAe,UACzBsC,GAAM,iCAAiC,EAGxC,IAAIC,GAEAC,GAAQ,GAERC,GAEJ,SAASC,GAAOC,EAAWC,EAAM,CAC3BD,GACJL,GAAMM,CAAI,CAEZ,CAEA,IAAIC,GAAMC,EAAOC,EAAQC,GAAQC,GAASC,EAAQC,EAASC,GAASC,GAEpE,SAASC,IAAoB,CAC5B,IAAIC,EAAIhB,GAAW,OACnBvC,EAAO,MAAW8C,EAAQ,IAAI,UAAUS,CAAC,EACzCvD,EAAO,OAAYgD,GAAS,IAAI,WAAWO,CAAC,EAC5CvD,EAAO,OAAYkD,EAAS,IAAI,WAAWK,CAAC,EAC5CvD,EAAO,OAAY+C,EAAS,IAAI,WAAWQ,CAAC,EAC5CvD,EAAO,QAAaiD,GAAU,IAAI,YAAYM,CAAC,EAC/CvD,EAAO,QAAamD,EAAU,IAAI,YAAYI,CAAC,EAC/CvD,EAAO,QAAaoD,GAAU,IAAI,aAAaG,CAAC,EAChDvD,EAAO,QAAaqD,GAAU,IAAI,aAAaE,CAAC,CACjD,CAEA,IAAIC,GAEAC,GAAe,CAAC,EAEhBC,GAAa,CAAC,EAEdC,GAAa,CAAC,EAEdC,GAAgB,CAAC,EAEjBC,GAAqB,GAErBC,GAA0B,EAE9B,SAASC,IAAmB,CAC3B,OAAO1B,IAAiByB,GAA0B,CACnD,CAEA,SAASE,IAAS,CACjB,GAAIhE,EAAO,OAEV,IADI,OAAOA,EAAO,QAAa,aAAYA,EAAO,OAAY,CAAEA,EAAO,MAAU,GAC1EA,EAAO,OAAU,QACvBiE,GAAYjE,EAAO,OAAU,MAAM,CAAC,EAGtCkE,GAAqBT,EAAY,CAClC,CAEA,SAASU,IAAc,CACtBN,GAAqB,GACrBK,GAAqBR,EAAU,CAChC,CAEA,SAASU,IAAU,CAClB,GAAIpE,EAAO,QAEV,IADI,OAAOA,EAAO,SAAc,aAAYA,EAAO,QAAa,CAAEA,EAAO,OAAW,GAC7EA,EAAO,QAAW,QACxBqE,GAAarE,EAAO,QAAW,MAAM,CAAC,EAGxCkE,GAAqBN,EAAa,CACnC,CAEA,SAASK,GAAYK,EAAI,CACxBb,GAAa,QAAQa,CAAE,CACxB,CAEA,SAASC,GAAUD,EAAI,CACtBZ,GAAW,QAAQY,CAAE,CACtB,CAEA,SAASE,GAAUF,EAAI,CAAC,CAExB,SAASD,GAAaC,EAAI,CACzBV,GAAc,QAAQU,CAAE,CACzB,CAEA,IAAIG,GAAkB,EAElBC,GAAuB,KAEvBC,GAAwB,KAE5B,SAASC,GAAuBC,EAAI,CACnC,OAAOA,CACR,CAEA,SAASC,GAAiBD,EAAI,CAC7BJ,KACIzE,EAAO,wBACVA,EAAO,uBAA0ByE,EAAe,CAElD,CAEA,SAASM,GAAoBF,EAAI,CAKhC,GAJAJ,KACIzE,EAAO,wBACVA,EAAO,uBAA0ByE,EAAe,EAE7CA,IAAmB,IAClBC,KAAyB,OAC5B,cAAcA,EAAoB,EAClCA,GAAuB,MAEpBC,IAAuB,CAC1B,IAAIK,EAAWL,GACfA,GAAwB,KACxBK,EAAS,EAGZ,CAEA,SAAS1C,GAAM2C,EAAM,CAChBjF,EAAO,SACVA,EAAO,QAAWiF,CAAI,EAEvBA,EAAO,WAAaA,EAAO,IAC3BnD,GAAImD,CAAI,EACRzC,GAAQ,GACRC,GAAa,EACbwC,GAAQ,2CACR,IAAIC,EAAI,IAAI,YAAY,aAAaD,CAAI,EACzC,MAAA/E,EAAmBgF,CAAC,EACdA,CACP,CAEA,IAAIC,GAAgB,wCAEpB,SAASC,GAAU5D,EAAU,CAC5B,OAAOA,EAAS,WAAW2D,EAAa,CACzC,CAEA,SAASzD,GAAUF,EAAU,CAC5B,OAAOA,EAAS,WAAW,SAAS,CACrC,CAEA,IAAI6D,GAEJA,GAAiB,aAEZD,GAAUC,EAAc,IAC5BA,GAAiBrE,EAAWqE,EAAc,GAG3C,SAASC,GAAUC,EAAM,CACxB,GAAI,CACH,GAAIA,GAAQF,IAAkBjD,GAC7B,OAAO,IAAI,WAAWA,EAAU,EAEjC,GAAIhB,EACH,OAAOA,EAAWmE,CAAI,EAEvB,KAAM,iDACP,OAASzD,EAAP,CACDQ,GAAMR,CAAG,CACV,CACD,CAEA,SAAS0D,GAAiBC,EAAY,CACrC,GAAI,CAACrD,KAAezB,GAAsBC,GAAwB,CACjE,GAAI,OAAO,OAAS,YAAc,CAACc,GAAU+D,CAAU,EACtD,OAAO,MAAMA,EAAY,CACxB,YAAa,aACd,CAAC,EAAE,KAAKC,GAAY,CACnB,GAAI,CAACA,EAAS,GACb,KAAM,uCAAyCD,EAAa,IAE7D,OAAOC,EAAS,YAAe,CAChC,CAAC,EAAE,MAAM,IAAMJ,GAAUG,CAAU,CAAC,EAEpC,GAAItE,EACH,OAAO,IAAI,QAAQ,CAAChB,EAASC,IAAW,CACvCe,EAAUsE,EAAYC,GAAYvF,EAAQ,IAAI,WAAWuF,CAAQ,CAAC,EAAGtF,CAAM,CAC5E,CAAC,EAIJ,OAAO,QAAQ,QAAQ,EAAE,KAAK,IAAMkF,GAAUG,CAAU,CAAC,CAC1D,CAEA,SAASE,GAAuBF,EAAYG,EAASC,EAAU,CAC9D,OAAOL,GAAiBC,CAAU,EAAE,KAAKhE,GACjC,YAAY,YAAYA,EAAQmE,CAAO,CAC9C,EAAE,KAAKE,GACAA,CACP,EAAE,KAAKD,EAAUE,GAAU,CAC3BjE,GAAI,0CAA4CiE,CAAM,EACtDzD,GAAMyD,CAAM,CACb,CAAC,CACF,CAEA,SAASC,GAAiBvE,EAAQgE,EAAYG,EAASZ,EAAU,CAChE,MAAI,CAACvD,GAAU,OAAO,YAAY,sBAAwB,YAAc,CAAC2D,GAAUK,CAAU,GAAK,CAAC/D,GAAU+D,CAAU,GAAK,CAAC5E,GAAuB,OAAO,OAAS,WAC5J,MAAM4E,EAAY,CACxB,YAAa,aACd,CAAC,EAAE,KAAKC,GAAY,CACnB,IAAIO,EAAS,YAAY,qBAAqBP,EAAUE,CAAO,EAC/D,OAAOK,EAAO,KAAKjB,EAAU,SAASe,EAAQ,CAC7C,OAAAjE,GAAI,kCAAoCiE,CAAM,EAC9CjE,GAAI,2CAA2C,EACxC6D,GAAuBF,EAAYG,EAASZ,CAAQ,CAC5D,CAAC,CACF,CAAC,EAEMW,GAAuBF,EAAYG,EAASZ,CAAQ,CAE7D,CAEA,SAASkB,IAAa,CACrB,IAAIC,EAAO,CACV,IAAOC,GACP,uBAA0BA,EAC3B,EACA,SAASC,EAAgBP,EAAUjG,EAAQ,CAC1C,IAAID,EAAUkG,EAAS,QACvB,OAAA9F,EAAO,IAASJ,EAChB2C,GAAavC,EAAO,IAAO,OAC3BsD,GAAkB,EAClBE,GAAYxD,EAAO,IAAO,0BAC1BuE,GAAUvE,EAAO,IAAO,iBAAoB,EAC5C+E,GAAoB,kBAAkB,EAC/BnF,CACR,CACAkF,GAAiB,kBAAkB,EACnC,SAASwB,EAA2BL,EAAQ,CAC3CI,EAAgBJ,EAAO,QAAW,CACnC,CACA,GAAIjG,EAAO,gBACV,GAAI,CACH,OAAOA,EAAO,gBAAmBmG,EAAME,CAAe,CACvD,OAASnB,EAAP,CACDpD,GAAI,sDAAwDoD,CAAC,EAC7DhF,EAAmBgF,CAAC,CACrB,CAED,OAAAc,GAAiB5D,GAAYiD,GAAgBc,EAAMG,CAA0B,EAAE,MAAMpG,CAAkB,EAChG,CAAC,CACT,CAEA,IAAIqG,EAEAC,GAEJ,SAASC,GAAWhG,EAAQ,CAC3B,KAAK,KAAO,aACZ,KAAK,QAAU,gCAAkCA,EAAS,IAC1D,KAAK,OAASA,CACf,CAEA,SAASyD,GAAqBwC,EAAW,CACxC,KAAOA,EAAU,OAAS,GACzBA,EAAU,MAAM,EAAE1G,CAAM,CAE1B,CAEA,SAAS2G,GAASC,EAAKC,EAAO,KAAM,CAEnC,OADIA,EAAK,SAAS,GAAG,IAAGA,EAAO,KACvBA,EAAM,CACd,IAAK,KACJ,OAAO/D,EAAM8D,IAAQ,CAAC,EAEvB,IAAK,KACJ,OAAO9D,EAAM8D,IAAQ,CAAC,EAEvB,IAAK,MACJ,OAAO5D,GAAO4D,IAAQ,CAAC,EAExB,IAAK,MACJ,OAAO1D,EAAO0D,IAAQ,CAAC,EAExB,IAAK,MACJ,OAAO1D,EAAO0D,IAAQ,CAAC,EAExB,IAAK,QACJ,OAAOxD,GAAQwD,IAAQ,CAAC,EAEzB,IAAK,SACJ,OAAOvD,GAAQuD,IAAQ,CAAC,EAEzB,IAAK,IACJ,OAAOzD,EAAQyD,IAAQ,CAAC,EAEzB,QACCtE,GAAM,8BAAgCuE,CAAI,CAC3C,CACD,CAEA,SAASC,GAASF,EAAKG,EAAOF,EAAO,KAAM,CAE1C,OADIA,EAAK,SAAS,GAAG,IAAGA,EAAO,KACvBA,EAAM,CACd,IAAK,KACJ/D,EAAM8D,IAAQ,CAAC,EAAIG,EACnB,MAED,IAAK,KACJjE,EAAM8D,IAAQ,CAAC,EAAIG,EACnB,MAED,IAAK,MACJ/D,GAAO4D,IAAQ,CAAC,EAAIG,EACpB,MAED,IAAK,MACJ7D,EAAO0D,IAAQ,CAAC,EAAIG,EACpB,MAED,IAAK,MACJP,GAAU,CAAEO,IAAU,GAAIR,EAAaQ,EAAO,CAAC,KAAK,IAAIR,CAAU,GAAK,EAAIA,EAAa,EAAI,CAAC,KAAK,MAAMA,EAAa,UAAU,IAAM,EAAI,CAAC,CAAC,CAAC,KAAK,MAAMA,EAAa,EAAE,CAAC,CAACA,IAAe,IAAM,UAAU,IAAM,EAAI,EAAG,EACpNrD,EAAO0D,IAAQ,CAAC,EAAIJ,GAAQ,CAAC,EAAGtD,EAAO0D,EAAM,IAAM,CAAC,EAAIJ,GAAQ,CAAC,EACjE,MAED,IAAK,QACJpD,GAAQwD,IAAQ,CAAC,EAAIG,EACrB,MAED,IAAK,SACJ1D,GAAQuD,IAAQ,CAAC,EAAIG,EACrB,MAED,IAAK,IACJ5D,EAAQyD,IAAQ,CAAC,EAAIG,EACrB,MAED,QACCzE,GAAM,8BAAgCuE,CAAI,CAC3C,CACD,CAEA,IAAIG,GAAkB,CAAC,EAEnBC,GAAgB,EAEhBC,GAAyB,EAE7B,SAASC,IAAiB,CACzB,IAAIhB,EAAOa,GAAgB,IAAI,EAC1Bb,GACJ7D,GAAM,uBAAuB,EAE9B,IAAIsE,EAAMT,EAAK,OACf,MAAKA,EAAK,aAAa,IACtBa,GAAgB,KAAKb,CAAI,EACzBA,EAAK,aAAa,EAAI,EACtBA,EAAK,WAAW,EAAK,EACrBe,MAEDD,GAAgBL,EACVK,EACP,CAEA,SAASG,GAAcC,EAAQ,CAC9B,KAAK,OAASA,EACd,KAAK,IAAMA,EAAS,GACpB,KAAK,SAAW,SAASR,EAAM,CAC9B1D,EAAQ,KAAK,IAAM,IAAM,CAAC,EAAI0D,CAC/B,EACA,KAAK,SAAW,UAAW,CAC1B,OAAO1D,EAAQ,KAAK,IAAM,IAAM,CAAC,CAClC,EACA,KAAK,eAAiB,SAASmE,EAAY,CAC1CnE,EAAQ,KAAK,IAAM,IAAM,CAAC,EAAImE,CAC/B,EACA,KAAK,eAAiB,UAAW,CAChC,OAAOnE,EAAQ,KAAK,IAAM,IAAM,CAAC,CAClC,EACA,KAAK,WAAa,SAASoE,EAAQ,CAClCA,EAASA,EAAS,EAAI,EACtBzE,EAAM,KAAK,IAAM,KAAO,CAAC,EAAIyE,CAC9B,EACA,KAAK,WAAa,UAAW,CAC5B,OAAOzE,EAAM,KAAK,IAAM,KAAO,CAAC,GAAK,CACtC,EACA,KAAK,aAAe,SAAS0E,EAAU,CACtCA,EAAWA,EAAW,EAAI,EAC1B1E,EAAM,KAAK,IAAM,KAAO,CAAC,EAAI0E,CAC9B,EACA,KAAK,aAAe,UAAW,CAC9B,OAAO1E,EAAM,KAAK,IAAM,KAAO,CAAC,GAAK,CACtC,EACA,KAAK,KAAO,SAAS+D,EAAMS,EAAY,CACtC,KAAK,iBAAiB,CAAC,EACvB,KAAK,SAAST,CAAI,EAClB,KAAK,eAAeS,CAAU,CAC/B,EACA,KAAK,iBAAmB,SAASG,EAAa,CAC7CtE,EAAQ,KAAK,IAAM,KAAO,CAAC,EAAIsE,CAChC,EACA,KAAK,iBAAmB,UAAW,CAClC,OAAOtE,EAAQ,KAAK,IAAM,KAAO,CAAC,CACnC,EACA,KAAK,kBAAoB,UAAW,CACnC,IAAIuE,EAAYC,GAAuB,KAAK,SAAS,CAAC,EACtD,GAAID,EACH,OAAOvE,EAAQ,KAAK,SAAW,CAAC,EAEjC,IAAIyE,EAAW,KAAK,iBAAiB,EACrC,OAAIA,IAAa,EAAUA,EACpB,KAAK,MACb,CACD,CAEA,SAASC,GAAajB,EAAKC,EAAMS,EAAY,CAC5C,IAAInB,EAAO,IAAIiB,GAAcR,CAAG,EAChC,MAAAT,EAAK,KAAKU,EAAMS,CAAU,EAC1BL,GAAgBL,EAChBM,KACMD,EACP,CAEA,IAAIa,GAAc,OAAO,YAAe,IAAc,IAAI,YAAY,MAAM,EAAI,OAEhF,SAASC,GAAkBC,EAAaC,EAAKC,EAAgB,CAC5DD,KAAS,EAGT,QAFIE,EAASF,EAAMC,EACfE,EAASH,EACND,EAAYI,CAAM,GAAK,EAAEA,GAAUD,IAAS,EAAEC,EACrD,GAAIA,EAASH,EAAM,IAAMD,EAAY,QAAUF,GAC9C,OAAOA,GAAY,OAAOE,EAAY,SAASC,EAAKG,CAAM,CAAC,EAG5D,QADIC,EAAM,GACHJ,EAAMG,GAAQ,CACpB,IAAIE,EAAKN,EAAYC,GAAK,EAC1B,GAAI,EAAEK,EAAK,KAAM,CAChBD,GAAO,OAAO,aAAaC,CAAE,EAC7B,SAED,IAAIC,EAAKP,EAAYC,GAAK,EAAI,GAC9B,IAAKK,EAAK,MAAQ,IAAK,CACtBD,GAAO,OAAO,cAAcC,EAAK,KAAO,EAAIC,CAAE,EAC9C,SAED,IAAIC,EAAKR,EAAYC,GAAK,EAAI,GAM9B,IALKK,EAAK,MAAQ,IACjBA,GAAMA,EAAK,KAAO,GAAKC,GAAM,EAAIC,EAEjCF,GAAMA,EAAK,IAAM,GAAKC,GAAM,GAAKC,GAAM,EAAIR,EAAYC,GAAK,EAAI,GAE7DK,EAAK,MACRD,GAAO,OAAO,aAAaC,CAAE,MACvB,CACN,IAAIG,EAAKH,EAAK,MACdD,GAAO,OAAO,aAAa,MAAQI,GAAM,GAAI,MAAQA,EAAK,IAAI,GAGhE,OAAOJ,CACR,CAEA,SAASK,GAAa9B,EAAKsB,EAAgB,CAC1C,OAAAtB,KAAS,EACFA,EAAMmB,GAAkBhF,EAAQ6D,EAAKsB,CAAc,EAAI,EAC/D,CAEA,IAAIS,GAAW,CACd,QAAS,OACT,IAAK,UAAW,CACfA,GAAS,SAAW,EACpB,IAAIhH,EAAMuB,EAAOyF,GAAS,QAAU,IAAM,CAAC,EAC3C,OAAOhH,CACR,EACA,OAAQ,SAASiF,EAAK,CACrB,IAAIjF,EAAM+G,GAAa9B,CAAG,EAC1B,OAAOjF,CACR,CACD,EAEA,SAASiH,GAAgBC,EAAIC,EAAWC,EAAO,CAAC,CAEhD,SAASC,GAAqBC,EAAOhI,EAAMiI,EAAOH,EAAO,CAAC,CAE1D,SAASI,GAASpC,EAAO,CACxB,OAAA7D,EAAOkG,GAAkB,IAAM,CAAC,EAAIrC,EAC7BA,CACR,CAEA,SAASsC,GAAmBR,EAAIS,EAAKC,EAAS,CAC7C,OAAAZ,GAAS,QAAUY,EACZ,CACR,CAEA,SAASC,GAAmBX,EAAIY,EAAK,CAAC,CAEtC,SAASC,GAA2BC,EAAIC,EAAI,CAC3C,OAAOA,EAAK,UAAY,EAAI,QAAU,CAAC,CAACD,GAAMA,IAAO,GAAKC,EAAK,WAAa,GAC7E,CAEA,SAASC,GAAuBhB,EAAIiB,EAAYC,EAAa,CAAC,CAE9D,SAASC,GAAiBnB,EAAIoB,EAAIV,EAAS,CAC1C,OAAAZ,GAAS,QAAUY,EACZ,CACR,CAEA,SAASW,GAAmBjJ,EAAMwI,EAAK,CAAC,CAExC,SAASU,GAAsBlB,EAAOhI,EAAMwI,EAAKV,EAAO,CAAC,CAEzD,SAASqB,GAAkBnB,EAAOhI,EAAM8H,EAAOQ,EAAS,CACvDZ,GAAS,QAAUY,CACpB,CAEA,SAASc,GAAkBpJ,EAAMwI,EAAK,CAAC,CAEvC,SAASa,GAAoBrB,EAAOhI,EAAM8H,EAAO,CAAC,CAElD,SAASwB,GAAyBC,EAAeC,EAAMC,EAAMC,EAAUC,EAAU,CAAC,CAElF,SAASC,GAAiBH,EAAM,CAC/B,OAAQA,EAAM,CACd,IAAK,GACJ,MAAO,GAER,IAAK,GACJ,MAAO,GAER,IAAK,GACJ,MAAO,GAER,IAAK,GACJ,MAAO,GAER,QACC,MAAM,IAAI,UAAU,sBAAwBA,CAAI,CACjD,CACD,CAEA,SAASI,IAAwB,CAEhC,QADIC,EAAQ,IAAI,MAAM,GAAG,EAChBC,EAAI,EAAGA,EAAI,IAAK,EAAEA,EAC1BD,EAAMC,CAAC,EAAI,OAAO,aAAaA,CAAC,EAEjCC,GAAmBF,CACpB,CAEA,IAAIE,GAAmB,OAEvB,SAASC,EAAiBtE,EAAK,CAG9B,QAFIjF,EAAM,GACNwJ,EAAIvE,EACD7D,EAAOoI,IAAM,CAAC,GACpBxJ,GAAOsJ,GAAiBlI,EAAOoI,MAAQ,CAAC,CAAC,EAE1C,OAAOxJ,CACR,CAEA,IAAIyJ,GAAuB,CAAC,EAExBC,GAAkB,CAAC,EAEnBC,GAAmB,CAAC,EAEpBC,GAAS,GAETC,GAAS,GAEb,SAASC,GAAsBhB,EAAM,CACpC,GAAkBA,IAAd,OACH,MAAO,WAERA,EAAOA,EAAK,QAAQ,iBAAkB,GAAG,EACzC,IAAIiB,EAAIjB,EAAK,WAAW,CAAC,EACzB,OAAIiB,GAAKH,IAAUG,GAAKF,GAChB,IAAMf,EAEPA,CACR,CAEA,SAASkB,GAAoBlB,EAAMmB,EAAM,CACxC,OAAAnB,EAAOgB,GAAsBhB,CAAI,EAC1B,CACN,CAACA,CAAI,EAAG,UAAW,CAClB,OAAOmB,EAAK,MAAM,KAAM,SAAS,CAClC,CACD,EAAEnB,CAAI,CACP,CAEA,SAASoB,GAAYC,EAAeC,EAAW,CAC9C,IAAIC,EAAaL,GAAoBI,EAAW,SAASE,EAAS,CACjE,KAAK,KAAOF,EACZ,KAAK,QAAUE,EACf,IAAIC,EAAQ,IAAI,MAAMD,CAAO,EAAE,MAC3BC,IAAU,SACb,KAAK,MAAQ,KAAK,SAAS,EAAI;AAAA,EAAOA,EAAM,QAAQ,qBAAsB,EAAE,EAE9E,CAAC,EACD,OAAAF,EAAW,UAAY,OAAO,OAAOF,EAAc,SAAS,EAC5DE,EAAW,UAAU,YAAcA,EACnCA,EAAW,UAAU,SAAW,UAAW,CAC1C,OAAI,KAAK,UAAY,OACb,KAAK,KAEL,KAAK,KAAO,KAAO,KAAK,OAEjC,EACOA,CACR,CAEA,IAAIG,GAAe,OAEnB,SAASC,EAAkBH,EAAS,CACnC,MAAM,IAAIE,GAAaF,CAAO,CAC/B,CAEA,IAAII,GAAgB,OAEpB,SAASC,GAAmBL,EAAS,CACpC,MAAM,IAAII,GAAcJ,CAAO,CAChC,CAEA,SAASM,GAA8BC,EAASC,EAAgBC,EAAmB,CAClFF,EAAQ,QAAQ,SAAS3F,EAAM,CAC9ByE,GAAiBzE,CAAI,EAAI4F,CAC1B,CAAC,EACD,SAASE,EAAWC,EAAgB,CACnC,IAAIC,EAAmBH,EAAkBE,CAAc,EACnDC,EAAiB,SAAWL,EAAQ,QACvCF,GAAmB,iCAAiC,EAErD,QAAStB,EAAI,EAAGA,EAAIwB,EAAQ,OAAQ,EAAExB,EACrC8B,GAAaN,EAAQxB,CAAC,EAAG6B,EAAiB7B,CAAC,CAAC,CAE9C,CACA,IAAI4B,EAAiB,IAAI,MAAMH,EAAe,MAAM,EAChDM,EAAoB,CAAC,EACrBC,EAAa,EACjBP,EAAe,QAAQ,CAACQ,EAAIjC,IAAM,CAC7BK,GAAgB,eAAe4B,CAAE,EACpCL,EAAe5B,CAAC,EAAIK,GAAgB4B,CAAE,GAEtCF,EAAkB,KAAKE,CAAE,EACpB7B,GAAqB,eAAe6B,CAAE,IAC1C7B,GAAqB6B,CAAE,EAAI,CAAC,GAE7B7B,GAAqB6B,CAAE,EAAE,KAAK,IAAM,CACnCL,EAAe5B,CAAC,EAAIK,GAAgB4B,CAAE,EACtC,EAAED,EACEA,IAAeD,EAAkB,QACpCJ,EAAWC,CAAc,CAE3B,CAAC,EAEH,CAAC,EACSG,EAAkB,SAAxB,GACHJ,EAAWC,CAAc,CAE3B,CAEA,SAASE,GAAaI,EAASC,EAAoBC,EAAU,CAAC,EAAG,CAChE,GAAI,EAAE,mBAAoBD,GACzB,MAAM,IAAI,UAAU,yDAAyD,EAE9E,IAAI1C,EAAO0C,EAAmB,KAI9B,GAHKD,GACJd,EAAkB,SAAW3B,EAAO,+CAA+C,EAEhFY,GAAgB,eAAe6B,CAAO,EAAG,CAC5C,GAAIE,EAAQ,6BACX,OAEAhB,EAAkB,yBAA2B3B,EAAO,SAAS,EAK/D,GAFAY,GAAgB6B,CAAO,EAAIC,EAC3B,OAAO7B,GAAiB4B,CAAO,EAC3B9B,GAAqB,eAAe8B,CAAO,EAAG,CACjD,IAAIxG,EAAY0E,GAAqB8B,CAAO,EAC5C,OAAO9B,GAAqB8B,CAAO,EACnCxG,EAAU,QAAQpC,GAAMA,EAAG,CAAC,EAE9B,CAEA,SAAS+I,GAAuBH,EAASzC,EAAMC,EAAM4C,EAAWC,EAAY,CAC3E,IAAIC,EAAQ3C,GAAiBH,CAAI,EACjCD,EAAOS,EAAiBT,CAAI,EAC5BqC,GAAaI,EAAS,CACrB,KAAMzC,EACN,aAAgB,SAASgD,EAAI,CAC5B,MAAO,CAAC,CAACA,CACV,EACA,WAAc,SAASC,EAAaC,EAAG,CACtC,OAAOA,EAAIL,EAAYC,CACxB,EACA,eAAkB,EAClB,qBAAwB,SAASK,EAAS,CACzC,IAAIC,EACJ,GAAInD,IAAS,EACZmD,EAAO/K,UACG4H,IAAS,EACnBmD,EAAO7K,WACG0H,IAAS,EACnBmD,EAAO3K,MAEP,OAAM,IAAI,UAAU,8BAAgCuH,CAAI,EAEzD,OAAO,KAAK,aAAgBoD,EAAKD,IAAYJ,CAAK,CAAC,CACpD,EACA,mBAAoB,IACrB,CAAC,CACF,CAEA,SAASM,GAAsBC,EAAO,CAIrC,GAHI,EAAE,gBAAgBC,KAGlB,EAAED,aAAiBC,IACtB,MAAO,GAMR,QAJIC,EAAY,KAAK,GAAG,QAAQ,gBAC5BC,EAAO,KAAK,GAAG,IACfC,EAAaJ,EAAM,GAAG,QAAQ,gBAC9BK,EAAQL,EAAM,GAAG,IACdE,EAAU,WAChBC,EAAOD,EAAU,OAAOC,CAAI,EAC5BD,EAAYA,EAAU,UAEvB,KAAOE,EAAW,WACjBC,EAAQD,EAAW,OAAOC,CAAK,EAC/BD,EAAaA,EAAW,UAEzB,OAAOF,IAAcE,GAAcD,IAASE,CAC7C,CAEA,SAASC,GAA2BV,EAAG,CACtC,MAAO,CACN,MAAOA,EAAE,MACT,gBAAiBA,EAAE,gBACnB,wBAAyBA,EAAE,wBAC3B,IAAKA,EAAE,IACP,QAASA,EAAE,QACX,SAAUA,EAAE,SACZ,aAAcA,EAAE,YACjB,CACD,CAEA,SAASW,GAA4BC,EAAK,CACzC,SAASC,EAAoBC,EAAQ,CACpC,OAAOA,EAAO,GAAG,QAAQ,gBAAgB,IAC1C,CACArC,EAAkBoC,EAAoBD,CAAG,EAAI,2BAA2B,CACzE,CAEA,IAAIG,GAAuB,GAE3B,SAASC,GAAgBF,EAAQ,CAAC,CAElC,SAASG,GAAcC,EAAI,CACtBA,EAAG,SACNA,EAAG,aAAa,cAAcA,EAAG,QAAQ,EAEzCA,EAAG,QAAQ,gBAAgB,cAAcA,EAAG,GAAG,CAEjD,CAEA,SAASC,GAAmBD,EAAI,CAC/BA,EAAG,MAAM,OAAS,EAClB,IAAIE,EAAiBF,EAAG,MAAM,QAAf,EACXE,GACHH,GAAcC,CAAE,CAElB,CAEA,SAASG,GAAgBpI,EAAKqI,EAAUC,EAAc,CACrD,GAAID,IAAaC,EAChB,OAAOtI,EAER,GAAkBsI,EAAa,YAA3B,OACH,OAAO,KAER,IAAIC,EAAKH,GAAgBpI,EAAKqI,EAAUC,EAAa,SAAS,EAC9D,OAAIC,IAAO,KACH,KAEDD,EAAa,SAASC,CAAE,CAChC,CAEA,IAAIC,GAAqB,CAAC,EAE1B,SAASC,IAA4B,CACpC,OAAO,OAAO,KAAKC,EAAmB,EAAE,MACzC,CAEA,SAASC,IAA4B,CACpC,IAAIJ,EAAK,CAAC,EACV,QAASK,KAAKF,GACTA,GAAoB,eAAeE,CAAC,GACvCL,EAAG,KAAKG,GAAoBE,CAAC,CAAC,EAGhC,OAAOL,CACR,CAEA,IAAIM,GAAgB,CAAC,EAErB,SAASC,IAAsB,CAC9B,KAAOD,GAAc,QAAQ,CAC5B,IAAIlB,EAAMkB,GAAc,IAAI,EAC5BlB,EAAI,GAAG,gBAAkB,GACzBA,EAAI,OAAU,EAEhB,CAEA,IAAIoB,GAAgB,OAEpB,SAASC,GAAiBC,EAAI,CAC7BF,GAAgBE,EACZJ,GAAc,QAAUE,IAC3BA,GAAcD,EAAmB,CAEnC,CAEA,SAASI,IAAc,CACtB9P,EAAO,0BAA+BqP,GACtCrP,EAAO,0BAA+BuP,GACtCvP,EAAO,oBAAyB0P,GAChC1P,EAAO,iBAAsB4P,EAC9B,CAEA,IAAIN,GAAsB,CAAC,EAE3B,SAASS,GAAiBC,EAAQpJ,EAAK,CAItC,IAHIA,IAAQ,QACXwF,EAAkB,6BAA6B,EAEzC4D,EAAO,WACbpJ,EAAMoJ,EAAO,OAAOpJ,CAAG,EACvBoJ,EAASA,EAAO,UAEjB,OAAOpJ,CACR,CAEA,SAASqJ,GAAqBD,EAAQpJ,EAAK,CAC1C,OAAAA,EAAMmJ,GAAiBC,EAAQpJ,CAAG,EAC3B0I,GAAoB1I,CAAG,CAC/B,CAEA,SAASsJ,GAAgBC,EAAWC,EAAQ,EACvC,CAACA,EAAO,SAAW,CAACA,EAAO,MAC9B9D,GAAmB,0CAA0C,EAE9D,IAAI+D,EAAkB,CAAC,CAACD,EAAO,aAC3BE,EAAc,CAAC,CAACF,EAAO,SAC3B,OAAIC,IAAoBC,GACvBhE,GAAmB,kDAAkD,EAEtE8D,EAAO,MAAQ,CACd,MAAO,CACR,EACOG,GAAgB,OAAO,OAAOJ,EAAW,CAC/C,GAAI,CACH,MAAOC,CACR,CACD,CAAC,CAAC,CACH,CAEA,SAASI,GAA+B5J,EAAK,CAC5C,IAAI6J,EAAa,KAAK,WAAW7J,CAAG,EACpC,GAAI,CAAC6J,EACJ,YAAK,WAAW7J,CAAG,EACZ,KAER,IAAIuG,EAAqB8C,GAAqB,KAAK,gBAAiBQ,CAAU,EAC9E,GAAkBtD,IAAd,OAAkC,CACrC,GAAUA,EAAmB,GAAG,MAAM,QAAlC,EACH,OAAAA,EAAmB,GAAG,IAAMsD,EAC5BtD,EAAmB,GAAG,SAAWvG,EAC1BuG,EAAmB,MAAS,EAEnC,IAAIgC,EAAKhC,EAAmB,MAAS,EACrC,YAAK,WAAWvG,CAAG,EACZuI,EAGT,SAASuB,GAAoB,CAC5B,OAAI,KAAK,eACDR,GAAgB,KAAK,gBAAgB,kBAAmB,CAC9D,QAAS,KAAK,YACd,IAAKO,EACL,aAAc,KACd,SAAU7J,CACX,CAAC,EAEMsJ,GAAgB,KAAK,gBAAgB,kBAAmB,CAC9D,QAAS,KACT,IAAKtJ,CACN,CAAC,CAEH,CACA,IAAI+J,EAAa,KAAK,gBAAgB,cAAcF,CAAU,EAC1DG,EAA0BxB,GAAmBuB,CAAU,EAC3D,GAAI,CAACC,EACJ,OAAOF,EAAkB,KAAK,IAAI,EAEnC,IAAIG,EACA,KAAK,QACRA,EAASD,EAAwB,iBAEjCC,EAASD,EAAwB,YAElC,IAAIE,EAAK9B,GAAgByB,EAAY,KAAK,gBAAiBI,EAAO,eAAe,EACjF,OAAIC,IAAO,KACHJ,EAAkB,KAAK,IAAI,EAE/B,KAAK,eACDR,GAAgBW,EAAO,gBAAgB,kBAAmB,CAChE,QAASA,EACT,IAAKC,EACL,aAAc,KACd,SAAUlK,CACX,CAAC,EAEMsJ,GAAgBW,EAAO,gBAAgB,kBAAmB,CAChE,QAASA,EACT,IAAKC,CACN,CAAC,CAEH,CAEA,SAASP,GAAgB9B,EAAQ,CAChC,OAAoB,OAAO,qBAAvB,KACH8B,GAAkB9B,GAAUA,EACrBA,IAERC,GAAuB,IAAI,qBAAqBvI,GAAQ,CACvD2I,GAAmB3I,EAAK,EAAE,CAC3B,CAAC,EACDoK,GAAkB9B,GAAU,CAC3B,IAAII,EAAKJ,EAAO,GACZ6B,EAAc,CAAC,CAACzB,EAAG,SACvB,GAAIyB,EAAa,CAChB,IAAInK,EAAO,CACV,GAAI0I,CACL,EACAH,GAAqB,SAASD,EAAQtI,EAAMsI,CAAM,EAEnD,OAAOA,CACR,EACAE,GAAkBF,GAAUC,GAAqB,WAAWD,CAAM,EAC3D8B,GAAgB9B,CAAM,EAC9B,CAEA,SAASsC,IAAoB,CAI5B,GAHK,KAAK,GAAG,KACZzC,GAA4B,IAAI,EAE7B,KAAK,GAAG,wBACX,YAAK,GAAG,MAAM,OAAS,EAChB,KAEP,IAAI0C,EAAQT,GAAgB,OAAO,OAAO,OAAO,eAAe,IAAI,EAAG,CACtE,GAAI,CACH,MAAOlC,GAA2B,KAAK,EAAE,CAC1C,CACD,CAAC,CAAC,EACF,OAAA2C,EAAM,GAAG,MAAM,OAAS,EACxBA,EAAM,GAAG,gBAAkB,GACpBA,CAET,CAEA,SAASC,IAAqB,CACxB,KAAK,GAAG,KACZ3C,GAA4B,IAAI,EAE7B,KAAK,GAAG,iBAAmB,CAAC,KAAK,GAAG,yBACvClC,EAAkB,uCAAuC,EAE1DuC,GAAgB,IAAI,EACpBG,GAAmB,KAAK,EAAE,EACrB,KAAK,GAAG,0BACZ,KAAK,GAAG,SAAW,OACnB,KAAK,GAAG,IAAM,OAEhB,CAEA,SAASoC,IAAwB,CAChC,MAAO,CAAC,KAAK,GAAG,GACjB,CAEA,SAASC,IAA0B,CAClC,OAAK,KAAK,GAAG,KACZ7C,GAA4B,IAAI,EAE7B,KAAK,GAAG,iBAAmB,CAAC,KAAK,GAAG,yBACvClC,EAAkB,uCAAuC,EAE1DqD,GAAc,KAAK,IAAI,EACnBA,GAAc,SAAW,GAAKE,IACjCA,GAAcD,EAAmB,EAElC,KAAK,GAAG,gBAAkB,GACnB,IACR,CAEA,SAAS0B,IAAmB,CAC3BpD,GAAY,UAAU,UAAeF,GACrCE,GAAY,UAAU,MAAW+C,GACjC/C,GAAY,UAAU,OAAYiD,GAClCjD,GAAY,UAAU,UAAekD,GACrClD,GAAY,UAAU,YAAiBmD,EACxC,CAEA,SAASnD,IAAc,CAAC,CAExB,SAASqD,GAAoBC,EAAOC,EAAYC,EAAW,CAC1D,GAAkBF,EAAMC,CAAU,EAAE,gBAAhC,OAA+C,CAClD,IAAIE,EAAWH,EAAMC,CAAU,EAC/BD,EAAMC,CAAU,EAAI,UAAW,CAC9B,OAAKD,EAAMC,CAAU,EAAE,cAAc,eAAe,UAAU,MAAM,GACnEnF,EAAkB,aAAeoF,EAAY,iDAAmD,UAAU,OAAS,uBAAyBF,EAAMC,CAAU,EAAE,cAAgB,IAAI,EAE5KD,EAAMC,CAAU,EAAE,cAAc,UAAU,MAAM,EAAE,MAAM,KAAM,SAAS,CAC/E,EACAD,EAAMC,CAAU,EAAE,cAAgB,CAAC,EACnCD,EAAMC,CAAU,EAAE,cAAcE,EAAS,QAAQ,EAAIA,EAEvD,CAEA,SAASC,GAAmBjH,EAAM1D,EAAO4K,EAAc,CAClD3R,EAAO,eAAeyK,CAAI,IACXkH,IAAd,QAA4C3R,EAAOyK,CAAI,EAAE,gBAA3B,QAA0DzK,EAAOyK,CAAI,EAAE,cAAckH,CAAY,IAArD,SAC7EvF,EAAkB,gCAAkC3B,EAAO,SAAS,EAErE4G,GAAoBrR,EAAQyK,EAAMA,CAAI,EAClCzK,EAAO,eAAe2R,CAAY,GACrCvF,EAAkB,uFAAyFuF,EAAe,IAAI,EAE/H3R,EAAOyK,CAAI,EAAE,cAAckH,CAAY,EAAI5K,IAE3C/G,EAAOyK,CAAI,EAAI1D,EACG4K,IAAd,SACH3R,EAAOyK,CAAI,EAAE,aAAekH,GAG/B,CAEA,SAASC,GAAgBnH,EAAMoH,EAAaC,EAAmBC,EAAeC,EAAWC,EAAeC,EAAQC,EAAU,CACzH,KAAK,KAAO1H,EACZ,KAAK,YAAcoH,EACnB,KAAK,kBAAoBC,EACzB,KAAK,cAAgBC,EACrB,KAAK,UAAYC,EACjB,KAAK,cAAgBC,EACrB,KAAK,OAASC,EACd,KAAK,SAAWC,EAChB,KAAK,qBAAuB,CAAC,CAC9B,CAEA,SAASC,GAAcxL,EAAKqI,EAAUC,EAAc,CACnD,KAAOD,IAAaC,GACdD,EAAS,QACb7C,EAAkB,gCAAkC8C,EAAa,KAAO,wBAA0BD,EAAS,IAAI,EAEhHrI,EAAMqI,EAAS,OAAOrI,CAAG,EACzBqI,EAAWA,EAAS,UAErB,OAAOrI,CACR,CAEA,SAASyL,GAAoC3E,EAAae,EAAQ,CACjE,GAAIA,IAAW,KACd,OAAI,KAAK,aACRrC,EAAkB,uBAAyB,KAAK,IAAI,EAE9C,EAEHqC,EAAO,IACXrC,EAAkB,gBAAkBkG,GAAW7D,CAAM,EAAI,UAAY,KAAK,IAAI,EAE1EA,EAAO,GAAG,KACdrC,EAAkB,mDAAqD,KAAK,IAAI,EAEjF,IAAImG,EAAc9D,EAAO,GAAG,QAAQ,gBAChC7H,EAAMwL,GAAc3D,EAAO,GAAG,IAAK8D,EAAa,KAAK,eAAe,EACxE,OAAO3L,CACR,CAEA,SAAS4L,GAAyB9E,EAAae,EAAQ,CACtD,IAAI7H,EACJ,GAAI6H,IAAW,KAId,OAHI,KAAK,aACRrC,EAAkB,uBAAyB,KAAK,IAAI,EAEjD,KAAK,gBACRxF,EAAM,KAAK,eAAe,EACtB8G,IAAgB,MACnBA,EAAY,KAAK,KAAK,cAAe9G,CAAG,EAElCA,GAEA,EAGJ6H,EAAO,IACXrC,EAAkB,gBAAkBkG,GAAW7D,CAAM,EAAI,UAAY,KAAK,IAAI,EAE1EA,EAAO,GAAG,KACdrC,EAAkB,mDAAqD,KAAK,IAAI,EAE7E,CAAC,KAAK,SAAWqC,EAAO,GAAG,QAAQ,SACtCrC,EAAkB,oCAAsCqC,EAAO,GAAG,aAAeA,EAAO,GAAG,aAAa,KAAOA,EAAO,GAAG,QAAQ,MAAQ,sBAAwB,KAAK,IAAI,EAE3K,IAAI8D,EAAc9D,EAAO,GAAG,QAAQ,gBAEpC,GADA7H,EAAMwL,GAAc3D,EAAO,GAAG,IAAK8D,EAAa,KAAK,eAAe,EAChE,KAAK,eAIR,OAHkB9D,EAAO,GAAG,WAAxB,QACHrC,EAAkB,iDAAiD,EAE5D,KAAK,cAAe,CAC5B,IAAK,GACAqC,EAAO,GAAG,eAAiB,KAC9B7H,EAAM6H,EAAO,GAAG,SAEhBrC,EAAkB,oCAAsCqC,EAAO,GAAG,aAAeA,EAAO,GAAG,aAAa,KAAOA,EAAO,GAAG,QAAQ,MAAQ,sBAAwB,KAAK,IAAI,EAE3K,MAED,IAAK,GACJ7H,EAAM6H,EAAO,GAAG,SAChB,MAED,IAAK,GACJ,GAAIA,EAAO,GAAG,eAAiB,KAC9B7H,EAAM6H,EAAO,GAAG,aACV,CACN,IAAIgE,EAAehE,EAAO,MAAS,EACnC7H,EAAM,KAAK,SAASA,EAAK8L,GAAM,SAAS,UAAW,CAClDD,EAAa,OAAU,CACxB,CAAC,CAAC,EACE/E,IAAgB,MACnBA,EAAY,KAAK,KAAK,cAAe9G,CAAG,EAG1C,MAED,QACCwF,EAAkB,6BAA6B,CAChD,CAED,OAAOxF,CACR,CAEA,SAAS+L,GAAuCjF,EAAae,EAAQ,CACpE,GAAIA,IAAW,KACd,OAAI,KAAK,aACRrC,EAAkB,uBAAyB,KAAK,IAAI,EAE9C,EAEHqC,EAAO,IACXrC,EAAkB,gBAAkBkG,GAAW7D,CAAM,EAAI,UAAY,KAAK,IAAI,EAE1EA,EAAO,GAAG,KACdrC,EAAkB,mDAAqD,KAAK,IAAI,EAE7EqC,EAAO,GAAG,QAAQ,SACrBrC,EAAkB,mCAAqCqC,EAAO,GAAG,QAAQ,KAAO,sBAAwB,KAAK,IAAI,EAElH,IAAI8D,EAAc9D,EAAO,GAAG,QAAQ,gBAChC7H,EAAMwL,GAAc3D,EAAO,GAAG,IAAK8D,EAAa,KAAK,eAAe,EACxE,OAAO3L,CACR,CAEA,SAASgM,GAA2BhF,EAAS,CAC5C,OAAO,KAAK,aAAgB1K,EAAO0K,IAAY,CAAC,CAAC,CAClD,CAEA,SAASiF,GAA6BjM,EAAK,CAC1C,OAAI,KAAK,gBACRA,EAAM,KAAK,cAAcA,CAAG,GAEtBA,CACR,CAEA,SAASkM,GAA6BlM,EAAK,CACtC,KAAK,eACR,KAAK,cAAcA,CAAG,CAExB,CAEA,SAASmM,GAA+BtE,EAAQ,CAC3CA,IAAW,MACdA,EAAO,OAAU,CAEnB,CAEA,SAASuE,IAAyB,CACjCC,GAAkB,UAAU,WAAaJ,GACzCI,GAAkB,UAAU,WAAaH,GACzCG,GAAkB,UAAU,eAAoB,EAChDA,GAAkB,UAAU,qBAA0BL,GACtDK,GAAkB,UAAU,aAAkBF,GAC9CE,GAAkB,UAAU,aAAkBzC,EAC/C,CAEA,SAASyC,GAAkBxI,EAAMyI,EAAiBC,EAAaC,EAASC,EAAgBC,EAAaC,EAAeC,EAAeC,EAAgBC,EAAU3B,EAAe,CAC3K,KAAK,KAAOtH,EACZ,KAAK,gBAAkByI,EACvB,KAAK,YAAcC,EACnB,KAAK,QAAUC,EACf,KAAK,eAAiBC,EACtB,KAAK,YAAcC,EACnB,KAAK,cAAgBC,EACrB,KAAK,cAAgBC,EACrB,KAAK,eAAiBC,EACtB,KAAK,SAAWC,EAChB,KAAK,cAAgB3B,EACjB,CAACsB,GAAkBH,EAAgB,YAAc,OAChDE,GACH,KAAK,WAAgBf,GACrB,KAAK,mBAAqB,OAE1B,KAAK,WAAgBM,GACrB,KAAK,mBAAqB,MAG3B,KAAK,WAAgBH,EAEvB,CAEA,SAASmB,GAAoBlJ,EAAM1D,EAAO4K,EAAc,CAClD3R,EAAO,eAAeyK,CAAI,GAC9B6B,GAAmB,qCAAqC,EAEvCtM,EAAOyK,CAAI,EAAE,gBAA3B,QAA0DkH,IAAd,OAC/C3R,EAAOyK,CAAI,EAAE,cAAckH,CAAY,EAAI5K,GAE3C/G,EAAOyK,CAAI,EAAI1D,EACf/G,EAAOyK,CAAI,EAAE,SAAWkH,EAE1B,CAEA,SAASiC,GAAcC,EAAKjN,EAAKkN,EAAM,CACtC,IAAIpI,EAAI1L,EAAO,WAAa6T,CAAG,EAC/B,OAAOC,GAAQA,EAAK,OAASpI,EAAE,MAAM,KAAM,CAAE9E,CAAI,EAAE,OAAOkN,CAAI,CAAC,EAAIpI,EAAE,KAAK,KAAM9E,CAAG,CACpF,CAEA,IAAImN,GAAkB,CAAC,EAEvB,SAASC,GAAkBC,EAAS,CACnC,IAAIC,EAAOH,GAAgBE,CAAO,EAClC,OAAKC,IACAD,GAAWF,GAAgB,SAAQA,GAAgB,OAASE,EAAU,GAC1EF,GAAgBE,CAAO,EAAIC,EAAO1Q,GAAU,IAAIyQ,CAAO,GAEjDC,CACR,CAEA,SAASC,GAAQN,EAAKjN,EAAKkN,EAAM,CAChC,GAAID,EAAI,SAAS,GAAG,EACnB,OAAOD,GAAcC,EAAKjN,EAAKkN,CAAI,EAEpC,IAAIM,EAAMJ,GAAkBpN,CAAG,EAAE,MAAM,KAAMkN,CAAI,EACjD,OAAOM,CACR,CAEA,SAASC,GAAaR,EAAKjN,EAAK,CAC/B,IAAI0N,EAAW,CAAC,EAChB,OAAO,UAAW,CACjB,OAAAA,EAAS,OAAS,EAClB,OAAO,OAAOA,EAAU,SAAS,EAC1BH,GAAQN,EAAKjN,EAAK0N,CAAQ,CAClC,CACD,CAEA,SAASC,GAAwBC,EAAWC,EAAa,CACxDD,EAAYtJ,EAAiBsJ,CAAS,EACtC,SAASE,GAAgB,CACxB,OAAIF,EAAU,SAAS,GAAG,EAClBH,GAAaG,EAAWC,CAAW,EAEpCT,GAAkBS,CAAW,CACrC,CACA,IAAIE,EAAKD,EAAc,EACvB,OAAI,OAAOC,GAAM,YAChBvI,EAAkB,2CAA6CoI,EAAY,KAAOC,CAAW,EAEvFE,CACR,CAEA,IAAIC,GAAmB,OAEvB,SAASC,GAAYhO,EAAM,CAC1B,IAAID,EAAMkO,GAAejO,CAAI,EACzBsI,EAAKjE,EAAiBtE,CAAG,EAC7B,OAAAmO,GAAMnO,CAAG,EACFuI,CACR,CAEA,SAAS6F,GAAsB/I,EAASgJ,EAAO,CAC9C,IAAIC,EAAe,CAAC,EAChBC,EAAO,CAAC,EACZ,SAASC,EAAMvO,EAAM,CACpB,GAAI,CAAAsO,EAAKtO,CAAI,GAGT,CAAAwE,GAAgBxE,CAAI,EAGxB,IAAIyE,GAAiBzE,CAAI,EAAG,CAC3ByE,GAAiBzE,CAAI,EAAE,QAAQuO,CAAK,EACpC,OAEDF,EAAa,KAAKrO,CAAI,EACtBsO,EAAKtO,CAAI,EAAI,GACd,CACA,MAAAoO,EAAM,QAAQG,CAAK,EACb,IAAIR,GAAiB3I,EAAU,KAAOiJ,EAAa,IAAIL,EAAW,EAAE,KAAK,CAAE,IAAK,CAAC,CAAC,CACzF,CAEA,SAASQ,GAAwBnI,EAASoI,EAAgBC,EAAqBC,EAAkBC,EAAwBxD,EAAeyD,EAAiBxD,EAAQyD,EAAmBxD,EAAU1H,EAAMmL,EAAqB7D,EAAe,CACvOtH,EAAOS,EAAiBT,CAAI,EAC5BwH,EAAgBsC,GAAwBkB,EAAwBxD,CAAa,EACzEC,IACHA,EAASqC,GAAwBmB,EAAiBxD,CAAM,GAErDC,IACHA,EAAWoC,GAAwBoB,EAAmBxD,CAAQ,GAE/DJ,EAAgBwC,GAAwBqB,EAAqB7D,CAAa,EAC1E,IAAI8D,EAAoBpK,GAAsBhB,CAAI,EAClDiH,GAAmBmE,EAAmB,UAAW,CAChDb,GAAsB,oBAAsBvK,EAAO,wBAAyB,CAAE+K,CAAiB,CAAC,CACjG,CAAC,EACDjJ,GAA8B,CAAEW,EAASoI,EAAgBC,CAAoB,EAAGC,EAAmB,CAAEA,CAAiB,EAAI,CAAC,EAAG,SAASM,EAAM,CAC5IA,EAAOA,EAAK,CAAC,EACb,IAAI9D,EACA+D,EACAP,GACHxD,EAAY8D,EAAK,gBACjBC,EAAgB/D,EAAU,mBAE1B+D,EAAgB/H,GAAY,UAE7B,IAAI6D,GAAclG,GAAoBkK,EAAmB,UAAW,CACnE,GAAI,OAAO,eAAe,IAAI,IAAM/D,EACnC,MAAM,IAAI3F,GAAa,0BAA4B1B,CAAI,EAExD,GAAkByI,EAAgB,mBAA9B,OACH,MAAM,IAAI/G,GAAa1B,EAAO,gCAAgC,EAE/D,IAAImB,GAAOsH,EAAgB,iBAAiB,UAAU,MAAM,EAC5D,GAAkBtH,KAAd,OACH,MAAM,IAAIO,GAAa,2BAA6B1B,EAAO,uCAAyC,UAAU,OAAS,iBAAmB,OAAO,KAAKyI,EAAgB,gBAAgB,EAAE,SAAS,EAAI,uBAAuB,EAE7N,OAAOtH,GAAK,MAAM,KAAM,SAAS,CAClC,CAAC,EACGkG,EAAoB,OAAO,OAAOiE,EAAe,CACpD,YAAa,CACZ,MAAOlE,EACR,CACD,CAAC,EACDA,GAAY,UAAYC,EACxB,IAAIoB,EAAkB,IAAItB,GAAgBnH,EAAMoH,GAAaC,EAAmBC,EAAeC,EAAWC,EAAeC,EAAQC,CAAQ,EACrI6D,EAAqB,IAAI/C,GAAkBxI,EAAMyI,EAAiB,GAAM,GAAO,EAAK,EACpF+C,EAAmB,IAAIhD,GAAkBxI,EAAO,IAAKyI,EAAiB,GAAO,GAAO,EAAK,EACzFgD,GAAwB,IAAIjD,GAAkBxI,EAAO,UAAWyI,EAAiB,GAAO,GAAM,EAAK,EACvG,OAAA9D,GAAmBlC,CAAO,EAAI,CAC7B,YAAa+I,EACb,iBAAkBC,EACnB,EACAvC,GAAoBkC,EAAmBhE,EAAW,EAC3C,CAAEmE,EAAoBC,EAAkBC,EAAsB,CACtE,CAAC,CACF,CAEA,SAASC,GAAoBC,EAAOC,EAAc,CAEjD,QADIC,EAAQ,CAAC,EACJtL,EAAI,EAAGA,EAAIoL,EAAOpL,IAC1BsL,EAAM,KAAKnT,EAAQkT,EAAerL,EAAI,IAAM,CAAC,CAAC,EAE/C,OAAOsL,CACR,CAEA,SAASC,GAAe7I,EAAa,CACpC,KAAOA,EAAY,QAAQ,CAC1B,IAAI9G,EAAM8G,EAAY,IAAI,EACtB8I,EAAM9I,EAAY,IAAI,EAC1B8I,EAAI5P,CAAG,EAET,CAEA,SAAS6P,GAAQ5E,EAAa6E,EAAc,CAC3C,GAAI,EAAE7E,aAAuB,UAC5B,MAAM,IAAI,UAAU,qCAAuC,OAAOA,EAAc,0BAA0B,EAE3G,IAAI8E,EAAQhL,GAAoBkG,EAAY,MAAQ,sBAAuB,UAAW,CAAC,CAAC,EACxF8E,EAAM,UAAY9E,EAAY,UAC9B,IAAItD,EAAM,IAAIoI,EACVC,EAAI/E,EAAY,MAAMtD,EAAKmI,CAAY,EAC3C,OAAOE,aAAa,OAASA,EAAIrI,CAClC,CAEA,SAASsI,GAAqBrF,EAAWsF,EAAUC,EAAWC,EAAgBC,EAAeC,EAAS,CACrG,IAAIC,EAAWL,EAAS,OACpBK,EAAW,GACd/K,EAAkB,gFAAgF,EAInG,QAFIgL,EAAoBN,EAAS,CAAC,IAAM,MAAQC,IAAc,KAC1DM,EAAuB,GAClBrM,EAAI,EAAGA,EAAI8L,EAAS,OAAQ,EAAE9L,EACtC,GAAI8L,EAAS9L,CAAC,IAAM,MAAQ8L,EAAS9L,CAAC,EAAE,qBAAuB,OAAW,CACzEqM,EAAuB,GACvB,MAMF,QAHIC,EAAUR,EAAS,CAAC,EAAE,OAAS,OAC/BS,EAAW,GACXC,EAAgB,GACXxM,EAAI,EAAGA,EAAImM,EAAW,EAAG,EAAEnM,EACnCuM,IAAavM,IAAM,EAAI,KAAO,IAAM,MAAQA,EAC5CwM,IAAkBxM,IAAM,EAAI,KAAO,IAAM,MAAQA,EAAI,QAEtD,IAAIyM,EAAgB,mBAAqBhM,GAAsB+F,CAAS,EAAI,IAAM+F,EAAW;AAAA,4BAAyCJ,EAAW,GAAK;AAAA,8BAA2C3F,EAAY,8DAAgE2F,EAAW,GAAK;AAAA;AAAA,EACzRE,IACHI,GAAiB;AAAA,GAElB,IAAIC,EAAYL,EAAuB,cAAgB,OACnDM,EAAQ,CAAE,oBAAqB,UAAW,KAAM,iBAAkB,UAAW,YAAa,EAC1FC,EAAQ,CAAExL,EAAmB4K,EAAgBC,EAAeV,GAAgBO,EAAS,CAAC,EAAGA,EAAS,CAAC,CAAE,EACrGM,IACHK,GAAiB,yCAA2CC,EAAY;AAAA,GAEzE,QAAS1M,EAAI,EAAGA,EAAImM,EAAW,EAAG,EAAEnM,EACnCyM,GAAiB,UAAYzM,EAAI,kBAAoBA,EAAI,eAAiB0M,EAAY,QAAU1M,EAAI,SAAW8L,EAAS9L,EAAI,CAAC,EAAE,KAAO;AAAA,EACtI2M,EAAM,KAAK,UAAY3M,CAAC,EACxB4M,EAAM,KAAKd,EAAS9L,EAAI,CAAC,CAAC,EAM3B,GAJIoM,IACHI,EAAgB,aAAeA,EAAc,OAAS,EAAI,KAAO,IAAMA,GAExEC,IAAkBH,GAAWJ,EAAU,YAAc,IAAM,cAAgBM,EAAc,OAAS,EAAI,KAAO,IAAMA,EAAgB;AAAA,EAC/HH,EACHI,GAAiB;AAAA,MAEjB,SAASzM,EAAIoM,EAAoB,EAAI,EAAGpM,EAAI8L,EAAS,OAAQ,EAAE9L,EAAG,CACjE,IAAI6M,GAAY7M,IAAM,EAAI,YAAc,OAASA,EAAI,GAAK,QACtD8L,EAAS9L,CAAC,EAAE,qBAAuB,OACtCyM,GAAiBI,GAAY,SAAWA,GAAY,SAAWf,EAAS9L,CAAC,EAAE,KAAO;AAAA,EAClF2M,EAAM,KAAKE,GAAY,OAAO,EAC9BD,EAAM,KAAKd,EAAS9L,CAAC,EAAE,kBAAkB,GAI5C,OAAIsM,IACHG,GAAiB;AAAA;AAAA,GAElBA,GAAiB;AAAA,EACjBE,EAAM,KAAKF,CAAa,EACjBhB,GAAQ,SAAUkB,CAAK,EAAE,MAAM,KAAMC,CAAK,CAClD,CAEA,SAASE,GAAoCC,EAAcZ,EAAUa,EAAiBC,EAAkBC,EAASzE,EAAgB,CAChI/Q,GAAOyU,EAAW,CAAC,EACnB,IAAIgB,EAAchC,GAAoBgB,EAAUa,CAAe,EAC/DE,EAAU3D,GAAwB0D,EAAkBC,CAAO,EAC3D,IAAIpE,EAAO,CAAEL,CAAe,EACxB/F,EAAc,CAAC,EACnBnB,GAA8B,CAAC,EAAG,CAAEwL,CAAa,EAAG,SAAShB,EAAW,CACvEA,EAAYA,EAAU,CAAC,EACvB,IAAIvF,EAAY,eAAiBuF,EAAU,KAI3C,GAHkBA,EAAU,gBAAgB,mBAAxC,SACHA,EAAU,gBAAgB,iBAAmB,CAAC,GAE7BA,EAAU,gBAAgB,iBAAiBI,EAAW,CAAC,IAArE,OACH,MAAM,IAAIhL,GAAa,+EAAiFgL,EAAW,GAAK,gBAAkBJ,EAAU,KAAO,qGAAqG,EAEjQ,OAAAA,EAAU,gBAAgB,iBAAiBI,EAAW,CAAC,EAAI,IAAM,CAChEnC,GAAsB,oBAAsB+B,EAAU,KAAO,wBAAyBoB,CAAW,CAClG,EACA5L,GAA8B,CAAC,EAAG4L,EAAa,SAASrB,EAAU,CACjE,OAAAA,EAAS,OAAO,EAAG,EAAG,IAAI,EAC1BC,EAAU,gBAAgB,iBAAiBI,EAAW,CAAC,EAAIN,GAAqBrF,EAAWsF,EAAU,KAAMoB,EAASzE,CAAc,EAC3H,CAAC,CACT,CAAC,EACM,CAAC,CACT,CAAC,CACF,CAEA,SAAS2E,GAAiCL,EAAcxG,EAAY4F,EAAUa,EAAiBC,EAAkBI,EAAYC,EAASC,EAAerB,EAAS,CAC7J,IAAIiB,EAAchC,GAAoBgB,EAAUa,CAAe,EAC/DzG,EAAarG,EAAiBqG,CAAU,EACxC8G,EAAa9D,GAAwB0D,EAAkBI,CAAU,EACjE9L,GAA8B,CAAC,EAAG,CAAEwL,CAAa,EAAG,SAAShB,EAAW,CACvEA,EAAYA,EAAU,CAAC,EACvB,IAAIvF,EAAYuF,EAAU,KAAO,IAAMxF,EACnCA,EAAW,WAAW,IAAI,IAC7BA,EAAa,OAAOA,EAAW,UAAU,CAAC,CAAC,GAExCgH,GACHxB,EAAU,gBAAgB,qBAAqB,KAAKxF,CAAU,EAE/D,SAASiH,GAAsB,CAC9BxD,GAAsB,eAAiBxD,EAAY,wBAAyB2G,CAAW,CACxF,CACA,IAAI7G,EAAQyF,EAAU,gBAAgB,kBAClC0B,EAASnH,EAAMC,CAAU,EAC7B,OAAkBkH,IAAd,QAAsCA,EAAO,gBAArB,QAAsCA,EAAO,YAAc1B,EAAU,MAAQ0B,EAAO,WAAatB,EAAW,GACvIqB,EAAoB,SAAWrB,EAAW,EAC1CqB,EAAoB,UAAYzB,EAAU,KAC1CzF,EAAMC,CAAU,EAAIiH,IAEpBnH,GAAoBC,EAAOC,EAAYC,CAAS,EAChDF,EAAMC,CAAU,EAAE,cAAc4F,EAAW,CAAC,EAAIqB,GAEjDjM,GAA8B,CAAC,EAAG4L,EAAa,SAASrB,EAAU,CACjE,IAAI4B,EAAiB7B,GAAqBrF,EAAWsF,EAAUC,EAAWsB,EAAYC,EAASpB,CAAO,EACtG,OAAkB5F,EAAMC,CAAU,EAAE,gBAAhC,QACHmH,EAAe,SAAWvB,EAAW,EACrC7F,EAAMC,CAAU,EAAImH,GAEpBpH,EAAMC,CAAU,EAAE,cAAc4F,EAAW,CAAC,EAAIuB,EAE1C,CAAC,CACT,CAAC,EACM,CAAC,CACT,CAAC,CACF,CAEA,SAASC,IAAkB,CAC1B,KAAK,UAAY,CAAE,MAAU,EAC7B,KAAK,SAAW,CAAC,EACjB,KAAK,IAAM,SAAS9T,EAAI,CACvB,OAAO,KAAK,UAAUA,CAAE,CACzB,EACA,KAAK,SAAW,SAAS4J,EAAQ,CAChC,IAAI5J,EAAK,KAAK,SAAS,IAAI,GAAK,KAAK,UAAU,OAC/C,YAAK,UAAUA,CAAE,EAAI4J,EACd5J,CACR,EACA,KAAK,KAAO,SAASA,EAAI,CACxB,KAAK,UAAUA,CAAE,EAAI,OACrB,KAAK,SAAS,KAAKA,CAAE,CACtB,CACD,CAEA,IAAI+T,GAAgB,IAAID,GAExB,SAASE,GAAepK,EAAQ,CAC3BA,GAAUmK,GAAc,UAAkB,EAAEA,GAAc,IAAInK,CAAM,EAAE,WAAlC,GACvCmK,GAAc,KAAKnK,CAAM,CAE3B,CAEA,SAASqK,IAAsB,CAE9B,QADI1C,EAAQ,EACHpL,EAAI4N,GAAc,SAAU5N,EAAI4N,GAAc,UAAU,OAAQ,EAAE5N,EACtE4N,GAAc,UAAU5N,CAAC,IAAM,QAClC,EAAEoL,EAGJ,OAAOA,CACR,CAEA,SAAS2C,IAAa,CACrBH,GAAc,UAAU,KAAK,CAC5B,MAAO,MACR,EAAG,CACF,MAAO,IACR,EAAG,CACF,MAAO,EACR,EAAG,CACF,MAAO,EACR,CAAC,EACDA,GAAc,SAAWA,GAAc,UAAU,OACjD5Y,EAAO,oBAAyB8Y,EACjC,CAEA,IAAIpG,GAAQ,CACX,QAASjE,IACHA,GACJrC,EAAkB,oCAAsCqC,CAAM,EAExDmK,GAAc,IAAInK,CAAM,EAAE,OAElC,SAAU1H,GAAS,CAClB,OAAQA,EAAO,CACf,KAAK,OACJ,MAAO,GAER,KAAK,KACJ,MAAO,GAER,IAAK,GACJ,MAAO,GAER,IAAK,GACJ,MAAO,GAER,QAEE,OAAO6R,GAAc,SAAS,CAC7B,SAAU,EACV,MAAO7R,CACR,CAAC,CAEH,CACD,CACD,EAEA,SAASiS,GAAwB9L,EAASzC,EAAM,CAC/CA,EAAOS,EAAiBT,CAAI,EAC5BqC,GAAaI,EAAS,CACrB,KAAMzC,EACN,aAAgB,SAASgE,EAAQ,CAChC,IAAIU,EAAKuD,GAAM,QAAQjE,CAAM,EAC7B,OAAAoK,GAAepK,CAAM,EACdU,CACR,EACA,WAAc,SAASzB,EAAa3G,EAAO,CAC1C,OAAO2L,GAAM,SAAS3L,CAAK,CAC5B,EACA,eAAkB,EAClB,qBAAwB6L,GACxB,mBAAoB,IACrB,CAAC,CACF,CAEA,SAASN,GAAW2G,EAAG,CACtB,GAAIA,IAAM,KACT,MAAO,OAER,IAAI,EAAI,OAAOA,EACf,OAAI,IAAM,UAAY,IAAM,SAAW,IAAM,WACrCA,EAAE,SAAS,EAEX,GAAKA,CAEd,CAEA,SAASC,GAA0BzO,EAAM+C,EAAO,CAC/C,OAAQA,EAAO,CACf,IAAK,GACJ,OAAO,SAASI,EAAS,CACxB,OAAO,KAAK,aAAgBxK,GAAQwK,IAAY,CAAC,CAAC,CACnD,EAED,IAAK,GACJ,OAAO,SAASA,EAAS,CACxB,OAAO,KAAK,aAAgBvK,GAAQuK,IAAY,CAAC,CAAC,CACnD,EAED,QACC,MAAM,IAAI,UAAU,uBAAyBnD,CAAI,CAClD,CACD,CAEA,SAAS0O,GAAwBjM,EAASzC,EAAMC,EAAM,CACrD,IAAI8C,EAAQ3C,GAAiBH,CAAI,EACjCD,EAAOS,EAAiBT,CAAI,EAC5BqC,GAAaI,EAAS,CACrB,KAAMzC,EACN,aAAgB,SAAS1D,EAAO,CAC/B,OAAOA,CACR,EACA,WAAc,SAAS2G,EAAa3G,EAAO,CAC1C,OAAOA,CACR,EACA,eAAkB,EAClB,qBAAwBmS,GAA0BzO,EAAM+C,CAAK,EAC7D,mBAAoB,IACrB,CAAC,CACF,CAEA,SAAS4L,GAA2B3O,EAAM0M,EAAUa,EAAiBxD,EAAW6D,EAAYxI,EAAIqH,EAAS,CACxG,IAAIJ,EAAWX,GAAoBgB,EAAUa,CAAe,EAC5DvN,EAAOS,EAAiBT,CAAI,EAC5B4N,EAAa9D,GAAwBC,EAAW6D,CAAU,EAC1D3G,GAAmBjH,EAAM,UAAW,CACnCuK,GAAsB,eAAiBvK,EAAO,wBAAyBqM,CAAQ,CAChF,EAAGK,EAAW,CAAC,EACf5K,GAA8B,CAAC,EAAGuK,EAAU,SAASA,EAAU,CAC9D,IAAIuC,EAAmB,CAAEvC,EAAS,CAAC,EAAG,IAAK,EAAE,OAAOA,EAAS,MAAM,CAAC,CAAC,EACrE,OAAAnD,GAAoBlJ,EAAMoM,GAAqBpM,EAAM4O,EAAkB,KAAMhB,EAAYxI,EAAIqH,CAAO,EAAGC,EAAW,CAAC,EAC5G,CAAC,CACT,CAAC,CACF,CAEA,SAASmC,GAA4B7O,EAAM+C,EAAO+L,EAAQ,CACzD,OAAQ/L,EAAO,CACf,IAAK,GACJ,OAAO+L,EAAS,SAA2B3L,EAAS,CACnD,OAAO9K,EAAM8K,IAAY,CAAC,CAC3B,EAAI,SAA2BA,EAAS,CACvC,OAAO7K,EAAO6K,IAAY,CAAC,CAC5B,EAED,IAAK,GACJ,OAAO2L,EAAS,SAA4B3L,EAAS,CACpD,OAAO5K,GAAO4K,IAAY,CAAC,CAC5B,EAAI,SAA4BA,EAAS,CACxC,OAAO3K,GAAQ2K,IAAY,CAAC,CAC7B,EAED,IAAK,GACJ,OAAO2L,EAAS,SAA4B3L,EAAS,CACpD,OAAO1K,EAAO0K,IAAY,CAAC,CAC5B,EAAI,SAA4BA,EAAS,CACxC,OAAOzK,EAAQyK,IAAY,CAAC,CAC7B,EAED,QACC,MAAM,IAAI,UAAU,yBAA2BnD,CAAI,CACpD,CACD,CAEA,SAAS+O,GAA0BhP,EAAeC,EAAMC,EAAMC,EAAUC,EAAU,CACjFH,EAAOS,EAAiBT,CAAI,EACxBG,IAAa,KAChBA,EAAW,YAEZ,IAAI4C,EAAQ3C,GAAiBH,CAAI,EAC7B+O,EAAe1S,GAASA,EAC5B,GAAI4D,IAAa,EAAG,CACnB,IAAI+O,EAAW,GAAK,EAAIhP,EACxB+O,EAAe1S,GAASA,GAAS2S,IAAaA,EAE/C,IAAIC,EAAiBlP,EAAK,SAAS,UAAU,EACzCmP,EAAkB,CAAC7S,EAAO8S,IAAe,CAAC,EAC1CC,EACAH,EACHG,EAAa,SAASpM,EAAa3G,EAAO,CACzC,OAAA6S,EAAgB7S,EAAO,KAAK,IAAI,EACzBA,IAAU,CAClB,EAEA+S,EAAa,SAASpM,EAAa3G,EAAO,CACzC,OAAA6S,EAAgB7S,EAAO,KAAK,IAAI,EACzBA,CACR,EAED+F,GAAatC,EAAe,CAC3B,KAAMC,EACN,aAAgBgP,EAChB,WAAcK,EACd,eAAkB,EAClB,qBAAwBR,GAA4B7O,EAAM+C,EAAO7C,IAAa,CAAC,EAC/E,mBAAoB,IACrB,CAAC,CACF,CAEA,SAASoP,GAA8B7M,EAAS8M,EAAevP,EAAM,CACpE,IAAIwP,EAAc,CAAE,UAAW,WAAY,WAAY,YAAa,WAAY,YAAa,aAAc,YAAa,EACpHC,EAAKD,EAAYD,CAAa,EAClC,SAASG,EAAiB1L,EAAQ,CACjCA,EAASA,GAAU,EACnB,IAAIZ,EAAO1K,EACPuH,EAAOmD,EAAKY,IAAW,CAAC,EACxB1M,EAAO8L,EAAKY,EAAS,IAAM,CAAC,EAChC,OAAO,IAAIyL,EAAGrM,EAAK,OAAQ9L,EAAM2I,CAAI,CACtC,CACAD,EAAOS,EAAiBT,CAAI,EAC5BqC,GAAaI,EAAS,CACrB,KAAMzC,EACN,aAAgB0P,EAChB,eAAkB,EAClB,qBAAwBA,CACzB,EAAG,CACF,6BAA8B,EAC/B,CAAC,CACF,CAEA,SAASC,GAAkB/R,EAAKwF,EAAMwM,EAAQC,EAAiB,CAE9D,GADAD,KAAY,EACR,EAAEC,EAAkB,GAAI,MAAO,GAGnC,QAFIC,EAAWF,EACXlS,EAASkS,EAASC,EAAkB,EAC/BtP,EAAI,EAAGA,EAAI3C,EAAI,OAAQ,EAAE2C,EAAG,CACpC,IAAIwP,EAAInS,EAAI,WAAW2C,CAAC,EACxB,GAAIwP,GAAK,OAASA,GAAK,MAAO,CAC7B,IAAIjS,EAAKF,EAAI,WAAW,EAAE2C,CAAC,EAC3BwP,EAAI,QAAUA,EAAI,OAAS,IAAMjS,EAAK,KAEvC,GAAIiS,GAAK,IAAK,CACb,GAAIH,GAAUlS,EAAQ,MACtB0F,EAAKwM,MAAa,CAAC,EAAIG,UACbA,GAAK,KAAM,CACrB,GAAIH,EAAS,GAAKlS,EAAQ,MAC1B0F,EAAKwM,MAAa,CAAC,EAAI,IAAMG,GAAK,EAClC3M,EAAKwM,MAAa,CAAC,EAAI,IAAMG,EAAI,WACvBA,GAAK,MAAO,CACtB,GAAIH,EAAS,GAAKlS,EAAQ,MAC1B0F,EAAKwM,MAAa,CAAC,EAAI,IAAMG,GAAK,GAClC3M,EAAKwM,MAAa,CAAC,EAAI,IAAMG,GAAK,EAAI,GACtC3M,EAAKwM,MAAa,CAAC,EAAI,IAAMG,EAAI,OAC3B,CACN,GAAIH,EAAS,GAAKlS,EAAQ,MAC1B0F,EAAKwM,MAAa,CAAC,EAAI,IAAMG,GAAK,GAClC3M,EAAKwM,MAAa,CAAC,EAAI,IAAMG,GAAK,GAAK,GACvC3M,EAAKwM,MAAa,CAAC,EAAI,IAAMG,GAAK,EAAI,GACtC3M,EAAKwM,MAAa,CAAC,EAAI,IAAMG,EAAI,IAGnC,OAAA3M,EAAKwM,IAAW,CAAC,EAAI,EACdA,EAASE,CACjB,CAEA,SAASE,GAAapS,EAAKqS,EAAQJ,EAAiB,CACnD,OAAOF,GAAkB/R,EAAKtF,EAAQ2X,EAAQJ,CAAe,CAC9D,CAEA,SAASK,GAAgBtS,EAAK,CAE7B,QADIuS,EAAM,EACD5P,EAAI,EAAGA,EAAI3C,EAAI,OAAQ,EAAE2C,EAAG,CACpC,IAAIG,EAAI9C,EAAI,WAAW2C,CAAC,EACpBG,GAAK,IACRyP,IACUzP,GAAK,KACfyP,GAAO,EACGzP,GAAK,OAASA,GAAK,OAC7ByP,GAAO,EACP,EAAE5P,GAEF4P,GAAO,EAGT,OAAOA,CACR,CAEA,SAASC,GAA6B3N,EAASzC,EAAM,CACpDA,EAAOS,EAAiBT,CAAI,EAC5B,IAAIqQ,EAAkBrQ,IAAS,cAC/BqC,GAAaI,EAAS,CACrB,KAAMzC,EACN,aAAgB,SAAS1D,EAAO,CAC/B,IAAIgU,EAAS5X,EAAQ4D,IAAU,CAAC,EAC5BiU,EAAUjU,EAAQ,EAClBsB,EACJ,GAAIyS,EAEH,QADIG,EAAiBD,EACZhQ,EAAI,EAAGA,GAAK+P,EAAQ,EAAE/P,EAAG,CACjC,IAAIkQ,EAAiBF,EAAUhQ,EAC/B,GAAIA,GAAK+P,GAAUhY,EAAOmY,IAAmB,CAAC,GAAK,EAAG,CACrD,IAAIC,EAAUD,EAAiBD,EAC3BG,EAAgB1S,GAAauS,EAAgBE,CAAO,EACpD9S,IAAQ,OACXA,EAAM+S,GAEN/S,GAAO,OAAO,aAAa,CAAC,EAC5BA,GAAO+S,GAERH,EAAiBC,EAAiB,OAG9B,CAEN,QADIG,EAAI,IAAI,MAAMN,CAAM,EACf/P,EAAI,EAAGA,EAAI+P,EAAQ,EAAE/P,EAC7BqQ,EAAErQ,CAAC,EAAI,OAAO,aAAajI,EAAOiY,EAAUhQ,IAAM,CAAC,CAAC,EAErD3C,EAAMgT,EAAE,KAAK,EAAE,EAEhB,OAAAtG,GAAMhO,CAAK,EACJsB,CACR,EACA,WAAc,SAASqF,EAAa3G,EAAO,CACtCA,aAAiB,cACpBA,EAAQ,IAAI,WAAWA,CAAK,GAE7B,IAAIgU,EACAO,EAAsB,OAAOvU,GAAS,SACpCuU,GAAuBvU,aAAiB,YAAcA,aAAiB,mBAAqBA,aAAiB,WAClHqF,EAAkB,uCAAuC,EAEtD0O,GAAmBQ,EACtBP,EAASJ,GAAgB5T,CAAK,EAE9BgU,EAAShU,EAAM,OAEhB,IAAI+O,EAAOyF,GAAQ,EAAIR,EAAS,CAAC,EAC7BnU,EAAMkP,EAAO,EAGjB,GAFAlP,KAAS,EACTzD,EAAQ2S,IAAS,CAAC,EAAIiF,EAClBD,GAAmBQ,EACtBb,GAAa1T,EAAOH,EAAKmU,EAAS,CAAC,UAE/BO,EACH,QAAStQ,EAAI,EAAGA,EAAI+P,EAAQ,EAAE/P,EAAG,CAChC,IAAIwQ,EAAWzU,EAAM,WAAWiE,CAAC,EAC7BwQ,EAAW,MACdzG,GAAMnO,CAAG,EACTwF,EAAkB,wDAAwD,GAE3ErJ,EAAO6D,EAAMoE,IAAM,CAAC,EAAIwQ,MAGzB,SAASxQ,EAAI,EAAGA,EAAI+P,EAAQ,EAAE/P,EAC7BjI,EAAO6D,EAAMoE,IAAM,CAAC,EAAIjE,EAAMiE,CAAC,EAIlC,OAAI0C,IAAgB,MACnBA,EAAY,KAAKqH,GAAOe,CAAI,EAEtBA,CACR,EACA,eAAkB,EAClB,qBAAwBlD,GACxB,mBAAoB,SAAShM,EAAK,CACjCmO,GAAMnO,CAAG,CACV,CACD,CAAC,CACF,CAEA,IAAI6U,GAAe,OAAO,YAAe,IAAc,IAAI,YAAY,UAAU,EAAI,OAErF,SAASC,GAAc9U,EAAKsB,EAAgB,CAI3C,QAHIE,EAASxB,EACTqB,EAAMG,GAAU,EAChBuT,EAAS1T,EAAMC,EAAiB,EAC7B,EAAED,GAAO0T,IAAW1Y,GAAQgF,IAAQ,CAAC,GAAG,EAAEA,EAEjD,GADAG,EAASH,GAAO,EACZG,EAASxB,EAAM,IAAM6U,GAAc,OAAOA,GAAa,OAAO1Y,EAAO,SAAS6D,IAAQ,EAAGwB,IAAW,CAAC,CAAC,EAE1G,QADIC,EAAM,GACD2C,EAAI,EAAG,EAAEA,GAAK9C,EAAiB,GAAI,EAAE8C,EAAG,CAChD,IAAI4Q,EAAW5Y,GAAO4D,EAAMoE,EAAI,IAAM,CAAC,EACvC,GAAI4Q,GAAY,EAAG,MACnBvT,GAAO,OAAO,aAAauT,CAAQ,EAEpC,OAAOvT,CACR,CAEA,SAASwT,GAAcxT,EAAKqS,EAAQJ,EAAiB,CAIpD,GAHIA,IAAoB,SACvBA,EAAkB,YAEfA,EAAkB,EAAG,MAAO,GAChCA,GAAmB,EAGnB,QAFIwB,EAAWpB,EACXqB,EAAkBzB,EAAkBjS,EAAI,OAAS,EAAIiS,EAAkB,EAAIjS,EAAI,OAC1E2C,EAAI,EAAGA,EAAI+Q,EAAiB,EAAE/Q,EAAG,CACzC,IAAI4Q,EAAWvT,EAAI,WAAW2C,CAAC,EAC/BhI,GAAO0X,IAAW,CAAC,EAAIkB,EACvBlB,GAAU,EAEX,OAAA1X,GAAO0X,IAAW,CAAC,EAAI,EAChBA,EAASoB,CACjB,CAEA,SAASE,GAAiB3T,EAAK,CAC9B,OAAOA,EAAI,OAAS,CACrB,CAEA,SAAS4T,GAAcrV,EAAKsB,EAAgB,CAG3C,QAFI8C,EAAI,EACJ3C,EAAM,GACH,EAAE2C,GAAK9C,EAAiB,IAAI,CAClC,IAAIgU,EAAQhZ,EAAO0D,EAAMoE,EAAI,IAAM,CAAC,EACpC,GAAIkR,GAAS,EAAG,MAEhB,GADA,EAAElR,EACEkR,GAAS,MAAO,CACnB,IAAIzT,EAAKyT,EAAQ,MACjB7T,GAAO,OAAO,aAAa,MAAQI,GAAM,GAAI,MAAQA,EAAK,IAAI,OAE9DJ,GAAO,OAAO,aAAa6T,CAAK,EAGlC,OAAO7T,CACR,CAEA,SAAS8T,GAAc9T,EAAKqS,EAAQJ,EAAiB,CAKpD,GAJAI,KAAY,EACRJ,IAAoB,SACvBA,EAAkB,YAEfA,EAAkB,EAAG,MAAO,GAGhC,QAFIwB,EAAWpB,EACXtS,EAAS0T,EAAWxB,EAAkB,EACjCtP,EAAI,EAAGA,EAAI3C,EAAI,OAAQ,EAAE2C,EAAG,CACpC,IAAI4Q,EAAWvT,EAAI,WAAW2C,CAAC,EAC/B,GAAI4Q,GAAY,OAASA,GAAY,MAAO,CAC3C,IAAIQ,EAAiB/T,EAAI,WAAW,EAAE2C,CAAC,EACvC4Q,EAAW,QAAUA,EAAW,OAAS,IAAMQ,EAAiB,KAIjE,GAFAlZ,EAAOwX,IAAW,CAAC,EAAIkB,EACvBlB,GAAU,EACNA,EAAS,EAAItS,EAAQ,MAE1B,OAAAlF,EAAOwX,IAAW,CAAC,EAAI,EAChBA,EAASoB,CACjB,CAEA,SAASO,GAAiBhU,EAAK,CAE9B,QADIuS,EAAM,EACD5P,EAAI,EAAGA,EAAI3C,EAAI,OAAQ,EAAE2C,EAAG,CACpC,IAAI4Q,EAAWvT,EAAI,WAAW2C,CAAC,EAC3B4Q,GAAY,OAASA,GAAY,OAAO,EAAE5Q,EAC9C4P,GAAO,EAER,OAAOA,CACR,CAEA,SAAS0B,GAA8BpP,EAASqP,EAAU9R,EAAM,CAC/DA,EAAOS,EAAiBT,CAAI,EAC5B,IAAI+R,EAAcC,EAAcC,EAASC,EAAgBnP,EACrD+O,IAAa,GAChBC,EAAed,GACfe,EAAeZ,GACfc,EAAiBX,GACjBU,EAAU,IAAMzZ,GAChBuK,EAAQ,GACE+O,IAAa,IACvBC,EAAeP,GACfQ,EAAeN,GACfQ,EAAiBN,GACjBK,EAAU,IAAMvZ,EAChBqK,EAAQ,GAETV,GAAaI,EAAS,CACrB,KAAMzC,EACN,aAAgB,SAAS1D,EAAO,CAK/B,QAJIgU,EAAS5X,EAAQ4D,IAAU,CAAC,EAC5BlE,EAAO6Z,EAAQ,EACfrU,EACA4S,EAAiBlU,EAAQ,EACpBiE,EAAI,EAAGA,GAAK+P,EAAQ,EAAE/P,EAAG,CACjC,IAAIkQ,EAAiBnU,EAAQ,EAAIiE,EAAIuR,EACrC,GAAIvR,GAAK+P,GAAUlY,EAAKqY,IAAmB1N,CAAK,GAAK,EAAG,CACvD,IAAIoP,EAAe1B,EAAiBD,EAChCG,EAAgBoB,EAAavB,EAAgB2B,CAAY,EACzDvU,IAAQ,OACXA,EAAM+S,GAEN/S,GAAO,OAAO,aAAa,CAAC,EAC5BA,GAAO+S,GAERH,EAAiBC,EAAiBqB,GAGpC,OAAAxH,GAAMhO,CAAK,EACJsB,CACR,EACA,WAAc,SAASqF,EAAa3G,EAAO,CACpC,OAAOA,GAAS,UACrBqF,EAAkB,6CAA+C3B,CAAI,EAEtE,IAAIsQ,EAAS4B,EAAe5V,CAAK,EAC7BH,EAAM2U,GAAQ,EAAIR,EAASwB,CAAQ,EACvC,OAAA3V,KAAS,EACTzD,EAAQyD,IAAQ,CAAC,EAAImU,GAAUvN,EAC/BiP,EAAa1V,EAAOH,EAAM,EAAGmU,EAASwB,CAAQ,EAC1C7O,IAAgB,MACnBA,EAAY,KAAKqH,GAAOnO,CAAG,EAErBA,CACR,EACA,eAAkB,EAClB,qBAAwBgM,GACxB,mBAAoB,SAAShM,EAAK,CACjCmO,GAAMnO,CAAG,CACV,CACD,CAAC,CACF,CAEA,SAASiW,GAAuB3P,EAASzC,EAAM,CAC9CA,EAAOS,EAAiBT,CAAI,EAC5BqC,GAAaI,EAAS,CACrB,OAAQ,GACR,KAAMzC,EACN,eAAkB,EAClB,aAAgB,UAAW,CAE3B,EACA,WAAc,SAASiD,EAAa,EAAG,CAEvC,CACD,CAAC,CACF,CAEA,IAAIoP,GAAiB,GAErB,SAASC,IAAoC,CAC5C,OAAOD,EACR,CAEA,SAASE,GAAevO,EAAQ,CAC3BA,EAAS,IACZmK,GAAc,IAAInK,CAAM,EAAE,UAAY,EAExC,CAEA,SAASwO,GAAsB/P,EAASsE,EAAW,CAClD,IAAI0L,EAAO7R,GAAgB6B,CAAO,EAClC,OAAkBgQ,IAAd,QACH9Q,EAAkBoF,EAAY,qBAAuBqD,GAAY3H,CAAO,CAAC,EAEnEgQ,CACR,CAEA,SAASC,GAAmBtW,EAAMuW,EAAK,CACtCvW,EAAOoW,GAAsBpW,EAAM,mBAAmB,EACtD,IAAIoS,EAAIpS,EAAK,qBAAwBuW,CAAG,EACxC,OAAO1K,GAAM,SAASuG,CAAC,CACxB,CAEA,SAASoE,IAAS,CACjB/a,GAAM,EAAE,CACT,CAEA,SAASgb,IAAuB,CAC/B,OAAO,KAAK,IAAI,CACjB,CAEA,IAAIC,GAEA1c,EACH0c,GAAsB,IAAM,CAC3B,IAAIC,EAAI,QAAQ,OAAO,EACvB,OAAOA,EAAE,CAAC,EAAI,IAAMA,EAAE,CAAC,EAAI,GAC5B,EACMD,GAAsB,IAAM,YAAY,IAAI,EAEnD,SAASE,GAAuBC,EAAMC,EAAKC,EAAK,CAC/C7a,EAAO,WAAW2a,IAAS,EAAGC,IAAQ,EAAGA,EAAMC,IAAQ,CAAC,CACzD,CAEA,SAASC,IAAa,CACrB,MAAO,WACR,CAEA,SAASC,GAA0BpT,EAAM,CACxC,IAAInH,EAAIhB,GAAW,OACnB,GAAI,CACH,OAAAA,GAAW,KAAKmI,EAAOnH,EAAE,WAAa,QAAU,EAAE,EAClDD,GAAkB,EACX,CACR,MAAE,CAAW,CACd,CAEA,SAASya,GAAwBC,EAAe,CAC/C,IAAIC,EAAUlb,EAAO,OACrBib,EAAgBA,IAAkB,EAClC,IAAIE,EAAcL,GAAW,EAC7B,GAAIG,EAAgBE,EACnB,MAAO,GAER,IAAIC,EAAU,CAACC,EAAGC,IAAaD,GAAKC,EAAWD,EAAIC,GAAYA,EAC/D,QAASC,EAAU,EAAGA,GAAW,EAAGA,GAAW,EAAG,CACjD,IAAIC,EAAoBN,GAAW,EAAI,GAAKK,GAC5CC,EAAoB,KAAK,IAAIA,EAAmBP,EAAgB,SAAS,EACzE,IAAIQ,EAAU,KAAK,IAAIN,EAAaC,EAAQ,KAAK,IAAIH,EAAeO,CAAiB,EAAG,KAAK,CAAC,EAC1FE,EAAcX,GAA0BU,CAAO,EACnD,GAAIC,EACH,MAAO,GAGT,MAAO,EACR,CAEA,IAAIC,GAAM,CAAC,EAEX,SAASC,IAAoB,CAC5B,OAAOpe,GAAe,gBACvB,CAEA,SAASqe,IAAgB,CACxB,GAAI,CAACA,GAAc,QAAS,CAC3B,IAAIC,GAAQ,OAAO,WAAa,UAAY,UAAU,WAAa,UAAU,UAAU,CAAC,GAAK,KAAK,QAAQ,IAAK,GAAG,EAAI,SAClHC,EAAM,CACT,KAAQ,WACR,QAAW,WACX,KAAQ,IACR,IAAO,IACP,KAAQ,iBACR,KAAQD,EACR,EAAKF,GAAkB,CACxB,EACA,QAASP,KAAKM,GACTA,GAAIN,CAAC,IAAM,OAAW,OAAOU,EAAIV,CAAC,EAAQU,EAAIV,CAAC,EAAIM,GAAIN,CAAC,EAE7D,IAAIW,EAAU,CAAC,EACf,QAASX,KAAKU,EACbC,EAAQ,KAAKX,EAAI,IAAMU,EAAIV,CAAC,CAAC,EAE9BQ,GAAc,QAAUG,EAEzB,OAAOH,GAAc,OACtB,CAEA,SAASI,GAAc3W,EAAK4W,EAAQ,CACnC,QAASjU,EAAI,EAAGA,EAAI3C,EAAI,OAAQ,EAAE2C,EACjClI,EAAMmc,MAAa,CAAC,EAAI5W,EAAI,WAAW2C,CAAC,EAEzClI,EAAMmc,IAAW,CAAC,EAAI,CACvB,CAEA,SAASC,GAAaC,EAAWC,EAAa,CAC7C,IAAIC,EAAU,EACd,OAAAT,GAAc,EAAE,QAAQ,SAASU,EAAQtU,EAAG,CAC3C,IAAIpE,EAAMwY,EAAcC,EACxBlc,EAAQgc,EAAYnU,EAAI,IAAM,CAAC,EAAIpE,EACnCoY,GAAcM,EAAQ1Y,CAAG,EACzByY,GAAWC,EAAO,OAAS,CAC5B,CAAC,EACM,CACR,CAEA,SAASC,GAAmBC,EAAgBC,EAAmB,CAC9D,IAAIV,EAAUH,GAAc,EAC5Bzb,EAAQqc,IAAmB,CAAC,EAAIT,EAAQ,OACxC,IAAIM,EAAU,EACd,OAAAN,EAAQ,QAAQ,SAASO,EAAQ,CAChCD,GAAWC,EAAO,OAAS,CAC5B,CAAC,EACDnc,EAAQsc,IAAsB,CAAC,EAAIJ,EAC5B,CACR,CAEA,SAASK,GAAWC,EAAM,CACzBld,GAAakd,EACR5b,GAAiB,IACjB/D,EAAO,QAAWA,EAAO,OAAU2f,CAAI,EAC3Cnd,GAAQ,IAEThC,EAAMmf,EAAM,IAAIlZ,GAAWkZ,CAAI,CAAC,CACjC,CAEA,SAASC,GAAOnf,EAAQof,EAAU,CACjCpd,GAAahC,EACbif,GAAWjf,CAAM,CAClB,CAEA,IAAIqf,GAAQF,GAEZ,SAASG,GAAUlX,EAAI,CACtB,MAAO,GACR,CAEA,SAASmX,GAAenX,EAAIoX,EAAM,CACjC,IAAIC,EAAa,EACbC,EAAmB,EACnBpX,EAAQ,EACZ,CACC,IAAIlC,EAAOgC,GAAM,GAAKA,GAAM,GAAKA,GAAM,EAAI,EAAIvG,GAAM,EACjDuG,GAAM,EACTqX,EAAa,GACHrX,GAAM,GAAKA,GAAM,KAC3BqX,EAAa,IAEdnX,EAAQ,CACT,CACA,OAAAjG,EAAMmd,IAAS,CAAC,EAAIpZ,EACpB7D,GAAOid,EAAO,IAAM,CAAC,EAAIlX,EACzBvC,GAAU,CAAE0Z,IAAe,GAAI3Z,EAAa2Z,EAAY,CAAC,KAAK,IAAI3Z,CAAU,GAAK,EAAIA,EAAa,EAAI,CAAC,KAAK,MAAMA,EAAa,UAAU,IAAM,EAAI,CAAC,CAAC,CAAC,KAAK,MAAMA,EAAa,EAAE,CAAC,CAACA,IAAe,IAAM,UAAU,IAAM,EAAI,EAAG,EAC9NrD,EAAO+c,EAAO,IAAM,CAAC,EAAIzZ,GAAQ,CAAC,EAAGtD,EAAO+c,EAAO,KAAO,CAAC,EAAIzZ,GAAQ,CAAC,EACxEA,GAAU,CAAE2Z,IAAqB,GAAI5Z,EAAa4Z,EAAkB,CAAC,KAAK,IAAI5Z,CAAU,GAAK,EAAIA,EAAa,EAAI,CAAC,KAAK,MAAMA,EAAa,UAAU,IAAM,EAAI,CAAC,CAAC,CAAC,KAAK,MAAMA,EAAa,EAAE,CAAC,CAACA,IAAe,IAAM,UAAU,IAAM,EAAI,EAAG,EAC1OrD,EAAO+c,EAAO,KAAO,CAAC,EAAIzZ,GAAQ,CAAC,EAAGtD,EAAO+c,EAAO,KAAO,CAAC,EAAIzZ,GAAQ,CAAC,EAClE,CACR,CAEA,SAAS4Z,GAASvX,EAAIwX,EAAKC,EAAQC,EAAM,CACxC,MAAO,GACR,CAEA,SAASC,GAAS3X,EAAI4X,EAAYC,EAAaC,EAAQC,EAAW,CACjE,MAAO,GACR,CAEA,IAAIC,GAAmB,CAAE,KAAM,CAAC,EAAG,CAAC,CAAE,EAEtC,SAASC,GAAUC,EAAQC,EAAM,CAChC,IAAI/B,EAAS4B,GAAiBE,CAAM,EAChCC,IAAS,GAAKA,IAAS,KACzBD,IAAW,EAAI5e,EAAML,IAAKiG,GAAkBkX,EAAQ,CAAC,CAAC,EACvDA,EAAO,OAAS,GAEhBA,EAAO,KAAK+B,CAAI,CAElB,CAEA,SAASC,IAAsB,CAC1BJ,GAAiB,CAAC,EAAE,QAAQC,GAAU,EAAG,EAAE,EAC3CD,GAAiB,CAAC,EAAE,QAAQC,GAAU,EAAG,EAAE,CAChD,CAEA,SAASI,GAAUrY,EAAIwX,EAAKC,EAAQC,EAAM,CAEzC,QADI3C,EAAM,EACD5S,EAAI,EAAGA,EAAIsV,EAAQtV,IAAK,CAChC,IAAIpE,EAAMzD,EAAQkd,IAAQ,CAAC,EACvBzF,EAAMzX,EAAQkd,EAAM,IAAM,CAAC,EAC/BA,GAAO,EACP,QAASc,EAAI,EAAGA,EAAIvG,EAAKuG,IACxBL,GAAUjY,EAAI9F,EAAO6D,EAAMua,IAAM,CAAC,CAAC,EAEpCvD,GAAOhD,EAER,OAAAzX,EAAQod,IAAS,CAAC,EAAI3C,EACf,CACR,CAEA,SAASwD,GAAWC,EAAM,CACzB,OAAOA,EAAO,IAAM,IAAMA,EAAO,MAAQ,GAAKA,EAAO,MAAQ,EAC9D,CAEA,SAASC,GAAShL,EAAOiL,EAAO,CAE/B,QADIC,EAAM,EACDxW,EAAI,EAAGA,GAAKuW,EAAOC,GAAOlL,EAAMtL,GAAG,EAAG,CAC/C,OAAOwW,CACR,CAEA,IAAIC,GAAkB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAEnEC,GAAqB,CAAE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAE1E,SAASC,GAAQC,EAAMC,EAAM,CAE5B,QADIC,EAAU,IAAI,KAAKF,EAAK,QAAQ,CAAC,EAC9BC,EAAO,GAAG,CAChB,IAAIE,EAAOX,GAAWU,EAAQ,YAAY,CAAC,EACvCE,EAAeF,EAAQ,SAAS,EAChCG,GAAsBF,EAAON,GAAkBC,IAAoBM,CAAY,EACnF,GAAIH,EAAOI,EAAqBH,EAAQ,QAAQ,EAC/CD,GAAQI,EAAqBH,EAAQ,QAAQ,EAAI,EACjDA,EAAQ,QAAQ,CAAC,EACbE,EAAe,GAClBF,EAAQ,SAASE,EAAe,CAAC,GAEjCF,EAAQ,SAAS,CAAC,EAClBA,EAAQ,YAAYA,EAAQ,YAAY,EAAI,CAAC,OAG9C,QAAAA,EAAQ,QAAQA,EAAQ,QAAQ,EAAID,CAAI,EACjCC,EAGT,OAAOA,CACR,CAEA,SAASI,GAAmBC,EAASC,EAAarH,EAAQ,CACzD,IAAIH,EAAMG,EAAS,EAAIA,EAASJ,GAAgBwH,CAAO,EAAI,EACvDE,EAAU,IAAI,MAAMzH,CAAG,EACvB0H,EAAkBlI,GAAkB+H,EAASE,EAAS,EAAGA,EAAQ,MAAM,EAC3E,OAAID,IAAaC,EAAQ,OAASC,GAC3BD,CACR,CAEA,SAASE,GAAmBjM,EAAO2I,EAAQ,CAC1Cnc,EAAM,IAAIwT,EAAO2I,IAAW,CAAC,CAC9B,CAEA,SAASuD,GAAUC,EAAGC,EAASC,EAAQC,EAAI,CAC1C,IAAIC,EAAU3f,EAAO0f,EAAK,KAAO,CAAC,EAC9BhB,EAAO,CACV,OAAQ1e,EAAO0f,IAAO,CAAC,EACvB,OAAQ1f,EAAO0f,EAAK,IAAM,CAAC,EAC3B,QAAS1f,EAAO0f,EAAK,IAAM,CAAC,EAC5B,QAAS1f,EAAO0f,EAAK,KAAO,CAAC,EAC7B,OAAQ1f,EAAO0f,EAAK,KAAO,CAAC,EAC5B,QAAS1f,EAAO0f,EAAK,KAAO,CAAC,EAC7B,QAAS1f,EAAO0f,EAAK,KAAO,CAAC,EAC7B,QAAS1f,EAAO0f,EAAK,KAAO,CAAC,EAC7B,SAAU1f,EAAO0f,EAAK,KAAO,CAAC,EAC9B,UAAW1f,EAAO0f,EAAK,KAAO,CAAC,EAC/B,QAASC,EAAUna,GAAama,CAAO,EAAI,EAC5C,EACIC,EAAUpa,GAAaia,CAAM,EAC7BI,EAAoB,CACvB,KAAM,uBACN,KAAM,WACN,KAAM,WACN,KAAM,KACN,KAAM,cACN,KAAM,QACN,KAAM,WACN,KAAM,WACN,KAAM,WACN,MAAO,KACP,MAAO,KACP,MAAO,WACP,MAAO,WACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,KACP,MAAO,IACR,EACA,QAASC,KAAQD,EAChBD,EAAUA,EAAQ,QAAQ,IAAI,OAAOE,EAAM,GAAG,EAAGD,EAAkBC,CAAI,CAAC,EAEzE,IAAIC,EAAW,CAAE,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,UAAW,EAC1FC,EAAS,CAAE,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,UAAW,EACxI,SAASC,EAAiBpc,EAAOqc,EAAQC,EAAW,CAEnD,QADIhb,EAAM,OAAOtB,GAAS,SAAWA,EAAM,SAAS,EAAIA,GAAS,GAC1DsB,EAAI,OAAS+a,GACnB/a,EAAMgb,EAAU,CAAC,EAAIhb,EAEtB,OAAOA,CACR,CACA,SAASib,EAAavc,EAAOqc,EAAQ,CACpC,OAAOD,EAAiBpc,EAAOqc,EAAQ,GAAG,CAC3C,CACA,SAASG,EAAaC,EAAOC,EAAO,CACnC,SAASC,EAAI3c,GAAO,CACnB,OAAOA,GAAQ,EAAI,GAAKA,GAAQ,EAAI,EAAI,CACzC,CACA,IAAI4c,EACJ,OAAKA,EAAUD,EAAIF,EAAM,YAAY,EAAIC,EAAM,YAAY,CAAC,KAAO,IAC7DE,EAAUD,EAAIF,EAAM,SAAS,EAAIC,EAAM,SAAS,CAAC,KAAO,IAC5DE,EAAUD,EAAIF,EAAM,QAAQ,EAAIC,EAAM,QAAQ,CAAC,GAG1CE,CACR,CACA,SAASC,EAAsBC,EAAW,CACzC,OAAQA,EAAU,OAAO,EAAG,CAC5B,IAAK,GACJ,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAI,EAAG,GAAI,EAAE,EAEpD,IAAK,GACJ,OAAOA,EAER,IAAK,GACJ,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAG,EAAG,CAAC,EAE9C,IAAK,GACJ,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAG,EAAG,CAAC,EAE9C,IAAK,GACJ,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAG,EAAG,CAAC,EAE9C,IAAK,GACJ,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAI,EAAG,GAAI,EAAE,EAEpD,IAAK,GACJ,OAAO,IAAI,KAAKA,EAAU,YAAY,EAAI,EAAG,GAAI,EAAE,CACpD,CACD,CACA,SAASC,EAAiBlC,EAAM,CAC/B,IAAImC,EAAWpC,GAAQ,IAAI,KAAKC,EAAK,QAAU,KAAM,EAAG,CAAC,EAAGA,EAAK,OAAO,EACpEoC,EAAoB,IAAI,KAAKD,EAAS,YAAY,EAAG,EAAG,CAAC,EACzDE,EAAoB,IAAI,KAAKF,EAAS,YAAY,EAAI,EAAG,EAAG,CAAC,EAC7DG,GAAyBN,EAAsBI,CAAiB,EAChEG,GAAyBP,EAAsBK,CAAiB,EACpE,OAAIV,EAAaW,GAAwBH,CAAQ,GAAK,EACjDR,EAAaY,GAAwBJ,CAAQ,GAAK,EAC9CA,EAAS,YAAY,EAAI,EAE1BA,EAAS,YAAY,EAEtBA,EAAS,YAAY,EAAI,CACjC,CACA,IAAIK,EAAoB,CACvB,KAAM,SAASxC,EAAM,CACpB,OAAOqB,EAASrB,EAAK,OAAO,EAAE,UAAU,EAAG,CAAC,CAC7C,EACA,KAAM,SAASA,EAAM,CACpB,OAAOqB,EAASrB,EAAK,OAAO,CAC7B,EACA,KAAM,SAASA,EAAM,CACpB,OAAOsB,EAAOtB,EAAK,MAAM,EAAE,UAAU,EAAG,CAAC,CAC1C,EACA,KAAM,SAASA,EAAM,CACpB,OAAOsB,EAAOtB,EAAK,MAAM,CAC1B,EACA,KAAM,SAASA,EAAM,CACpB,IAAIP,EAAOO,EAAK,QAAU,KAC1B,OAAO0B,EAAajC,EAAO,IAAM,EAAG,CAAC,CACtC,EACA,KAAM,SAASO,EAAM,CACpB,OAAO0B,EAAa1B,EAAK,QAAS,CAAC,CACpC,EACA,KAAM,SAASA,EAAM,CACpB,OAAOuB,EAAiBvB,EAAK,QAAS,EAAG,GAAG,CAC7C,EACA,KAAM,SAASA,EAAM,CACpB,OAAOkC,EAAiBlC,CAAI,EAAE,SAAS,EAAE,UAAU,CAAC,CACrD,EACA,KAAM,SAASA,EAAM,CACpB,OAAOkC,EAAiBlC,CAAI,CAC7B,EACA,KAAM,SAASA,EAAM,CACpB,OAAO0B,EAAa1B,EAAK,QAAS,CAAC,CACpC,EACA,KAAM,SAASA,EAAM,CACpB,IAAIyC,EAAazC,EAAK,QACtB,OAAIyC,GAAc,EAAGA,EAAa,GAAaA,EAAa,KAAIA,GAAc,IACvEf,EAAae,EAAY,CAAC,CAClC,EACA,KAAM,SAASzC,EAAM,CACpB,OAAO0B,EAAa1B,EAAK,QAAUN,GAASF,GAAWQ,EAAK,QAAU,IAAI,EAAIH,GAAkBC,GAAoBE,EAAK,OAAS,CAAC,EAAG,CAAC,CACxI,EACA,KAAM,SAASA,EAAM,CACpB,OAAO0B,EAAa1B,EAAK,OAAS,EAAG,CAAC,CACvC,EACA,KAAM,SAASA,EAAM,CACpB,OAAO0B,EAAa1B,EAAK,OAAQ,CAAC,CACnC,EACA,KAAM,UAAW,CAChB,MAAO;AAAA,CACR,EACA,KAAM,SAASA,EAAM,CACpB,OAAIA,EAAK,SAAW,GAAKA,EAAK,QAAU,GAChC,KAED,IACR,EACA,KAAM,SAASA,EAAM,CACpB,OAAO0B,EAAa1B,EAAK,OAAQ,CAAC,CACnC,EACA,KAAM,UAAW,CAChB,MAAO,GACR,EACA,KAAM,SAASA,EAAM,CACpB,OAAOA,EAAK,SAAW,CACxB,EACA,KAAM,SAASA,EAAM,CACpB,IAAIC,EAAOD,EAAK,QAAU,EAAIA,EAAK,QACnC,OAAO0B,EAAa,KAAK,MAAMzB,EAAO,CAAC,EAAG,CAAC,CAC5C,EACA,KAAM,SAASD,EAAM,CACpB,IAAI0C,EAAM,KAAK,OAAO1C,EAAK,QAAU,GAAKA,EAAK,QAAU,GAAK,GAAK,CAAC,EAIpE,IAHKA,EAAK,QAAU,IAAMA,EAAK,QAAU,GAAK,GAAK,GAClD0C,IAEIA,GAME,GAAIA,GAAO,GAAI,CACrB,IAAIC,GAAQ3C,EAAK,QAAU,IAAMA,EAAK,SAAW,EAC7C2C,GAAQ,IAAMA,GAAQ,GAAK,CAACnD,GAAWQ,EAAK,OAAO,KAAI0C,EAAM,QARxD,CACTA,EAAM,GACN,IAAIE,GAAS5C,EAAK,QAAU,EAAIA,EAAK,QAAU,GAAK,GAChD4C,GAAS,GAAKA,GAAS,GAAKpD,GAAWQ,EAAK,QAAU,IAAM,CAAC,IAChE0C,IAMF,OAAOhB,EAAagB,EAAK,CAAC,CAC3B,EACA,KAAM,SAAS1C,EAAM,CACpB,OAAOA,EAAK,OACb,EACA,KAAM,SAASA,EAAM,CACpB,IAAIC,EAAOD,EAAK,QAAU,GAAKA,EAAK,QAAU,GAAK,EACnD,OAAO0B,EAAa,KAAK,MAAMzB,EAAO,CAAC,EAAG,CAAC,CAC5C,EACA,KAAM,SAASD,EAAM,CACpB,OAAQA,EAAK,QAAU,MAAM,SAAS,EAAE,UAAU,CAAC,CACpD,EACA,KAAM,SAASA,EAAM,CACpB,OAAOA,EAAK,QAAU,IACvB,EACA,KAAM,SAASA,EAAM,CACpB,IAAI6C,EAAM7C,EAAK,UACX8C,EAAQD,GAAO,EACnB,OAAAA,EAAM,KAAK,IAAIA,CAAG,EAAI,GACtBA,EAAMA,EAAM,GAAK,IAAMA,EAAM,IACrBC,EAAQ,IAAM,MAAc,OAASD,GAAK,MAAM,EAAE,CAC3D,EACA,KAAM,SAAS7C,EAAM,CACpB,OAAOA,EAAK,OACb,EACA,KAAM,UAAW,CAChB,MAAO,GACR,CACD,EACAkB,EAAUA,EAAQ,QAAQ,MAAO,MAAM,EACvC,QAASE,KAAQoB,EACZtB,EAAQ,SAASE,CAAI,IACxBF,EAAUA,EAAQ,QAAQ,IAAI,OAAOE,EAAM,GAAG,EAAGoB,EAAkBpB,CAAI,EAAEpB,CAAI,CAAC,GAGhFkB,EAAUA,EAAQ,QAAQ,QAAS,GAAG,EACtC,IAAI6B,GAAQzC,GAAmBY,EAAS,EAAK,EAC7C,OAAI6B,GAAM,OAASjC,EACX,GAERH,GAAmBoC,GAAOlC,CAAC,EACpBkC,GAAM,OAAS,EACvB,CAEA,SAASC,GAAYnC,EAAGC,EAASC,EAAQC,EAAIiC,EAAK,CACjD,OAAOrC,GAAUC,EAAGC,EAASC,EAAQC,CAAE,CACxC,CAEA9X,GAAsB,EAEtBqB,GAAenM,EAAO,aAAkB6L,GAAY,MAAO,cAAc,EAEzEQ,GAAgBrM,EAAO,cAAmB6L,GAAY,MAAO,eAAe,EAE5EuF,GAAiB,EAEjBtB,GAAY,EAEZkD,GAAuB,EAEvB4B,GAAmB5U,EAAO,iBAAsB6L,GAAY,MAAO,kBAAkB,EAErFkN,GAAW,EAEX,IAAI3S,GAAc,CACjB,cAAiBe,GACjB,YAAeU,GACf,eAAkBe,GAClB,oBAAuBI,GACvB,kBAAqBK,GACrB,kBAAqBG,GACrB,sBAAyBK,GACzB,gBAAmBG,GACnB,kBAAqBE,GACrB,qBAAwBC,GACxB,iBAAoBC,GACpB,iBAAoBC,GACpB,mBAAsBC,GACtB,wBAA2BC,GAC3B,sBAAyB8C,GACzB,uBAA0BgI,GAC1B,mCAAsCyC,GACtC,gCAAmCM,GACnC,uBAA0BY,GAC1B,uBAA0BG,GAC1B,0BAA6BC,GAC7B,yBAA4BI,GAC5B,6BAAgCO,GAChC,4BAA+Bc,GAC/B,6BAAgCyB,GAChC,sBAAyBO,GACzB,iCAAoCE,GACpC,cAAiBlE,GACjB,cAAiBmE,GACjB,kBAAqBG,GACrB,MAASE,GACT,oBAAuBC,GACvB,mBAAsBC,GACtB,sBAAyBE,GACzB,uBAA0BM,GAC1B,YAAemB,GACf,kBAAqBK,GACrB,KAAQO,GACR,SAAYC,GACZ,cAAiBC,GACjB,QAAWI,GACX,QAAWI,GACX,SAAYU,GACZ,WAAc0D,EACf,EAEIE,GAAM5e,GAAW,EAEjB6e,GAAqB,UAAW,CACnC,OAAQA,GAAqB/kB,EAAO,IAAO,mBAAsB,MAAM,KAAM,SAAS,CACvF,EAEIub,GAAU,UAAW,CACxB,OAAQA,GAAUvb,EAAO,IAAO,QAAW,MAAM,KAAM,SAAS,CACjE,EAEI+U,GAAQ,UAAW,CACtB,OAAQA,GAAQ/U,EAAO,IAAO,MAAS,MAAM,KAAM,SAAS,CAC7D,EAEIoJ,GAAoB,UAAW,CAClC,OAAQA,GAAoBpJ,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CACrF,EAEI8U,GAAiB,UAAW,CAC/B,OAAQA,GAAiB9U,EAAO,IAAO,eAAkB,MAAM,KAAM,SAAS,CAC/E,EAEIglB,GAA+BhlB,EAAO,6BAAkC,UAAW,CACtF,OAAQglB,GAA+BhlB,EAAO,6BAAkCA,EAAO,IAAO,6BAAgC,MAAM,KAAM,SAAS,CACpJ,EAEIilB,GAAY,UAAW,CAC1B,OAAQA,GAAYjlB,EAAO,IAAO,WAAc,MAAM,KAAM,SAAS,CACtE,EAEIklB,GAAe,UAAW,CAC7B,OAAQA,GAAellB,EAAO,IAAO,cAAiB,MAAM,KAAM,SAAS,CAC5E,EAEImlB,GAAa,UAAW,CAC3B,OAAQA,GAAanlB,EAAO,IAAO,YAAe,MAAM,KAAM,SAAS,CACxE,EAEI2H,GAAyB,UAAW,CACvC,OAAQA,GAAyB3H,EAAO,IAAO,uBAA0B,MAAM,KAAM,SAAS,CAC/F,EAEIolB,GAAgBplB,EAAO,cAAmB,UAAW,CACxD,OAAQolB,GAAgBplB,EAAO,cAAmBA,EAAO,IAAO,eAAkB,MAAM,KAAM,SAAS,CACxG,EAEIqlB,GAAiBrlB,EAAO,eAAoB,UAAW,CAC1D,OAAQqlB,GAAiBrlB,EAAO,eAAoBA,EAAO,IAAO,gBAAmB,MAAM,KAAM,SAAS,CAC3G,EAEIslB,GAAatlB,EAAO,WAAgB,UAAW,CAClD,OAAQslB,GAAatlB,EAAO,WAAgBA,EAAO,IAAO,YAAe,MAAM,KAAM,SAAS,CAC/F,EAEIulB,GAAcvlB,EAAO,YAAiB,UAAW,CACpD,OAAQulB,GAAcvlB,EAAO,YAAiBA,EAAO,IAAO,aAAgB,MAAM,KAAM,SAAS,CAClG,EAEIwlB,GAAexlB,EAAO,aAAkB,UAAW,CACtD,OAAQwlB,GAAexlB,EAAO,aAAkBA,EAAO,IAAO,cAAiB,MAAM,KAAM,SAAS,CACrG,EAEIylB,GAAezlB,EAAO,aAAkB,UAAW,CACtD,OAAQylB,GAAezlB,EAAO,aAAkBA,EAAO,IAAO,cAAiB,MAAM,KAAM,SAAS,CACrG,EAEI0lB,GAAiB1lB,EAAO,eAAoB,UAAW,CAC1D,OAAQ0lB,GAAiB1lB,EAAO,eAAoBA,EAAO,IAAO,gBAAmB,MAAM,KAAM,SAAS,CAC3G,EAEI2lB,GAAiB3lB,EAAO,eAAoB,UAAW,CAC1D,OAAQ2lB,GAAiB3lB,EAAO,eAAoBA,EAAO,IAAO,gBAAmB,MAAM,KAAM,SAAS,CAC3G,EAEI4lB,GAAkB5lB,EAAO,gBAAqB,UAAW,CAC5D,OAAQ4lB,GAAkB5lB,EAAO,gBAAqBA,EAAO,IAAO,iBAAoB,MAAM,KAAM,SAAS,CAC9G,EAEI6lB,GAAmB7lB,EAAO,iBAAsB,UAAW,CAC9D,OAAQ6lB,GAAmB7lB,EAAO,iBAAsBA,EAAO,IAAO,kBAAqB,MAAM,KAAM,SAAS,CACjH,EAEI8lB,GAEJnhB,GAAwB,SAASohB,GAAY,CACvCD,IAAWE,GAAI,EACfF,KAAWnhB,GAAwBohB,EACzC,EAEA,SAASC,IAAM,CAKd,GAJIvhB,GAAkB,IAGtBT,GAAO,EACHS,GAAkB,GACrB,OAED,SAASwhB,GAAQ,CACZH,KACJA,GAAY,GACZ9lB,EAAO,UAAe,GAClB,CAAAwC,KACJ2B,GAAY,EACZlE,EAAoBD,CAAM,EACtBA,EAAO,sBAAyBA,EAAO,qBAAwB,EACnEoE,GAAQ,GACT,CACIpE,EAAO,WACVA,EAAO,UAAa,YAAY,EAChC,WAAW,UAAW,CACrB,WAAW,UAAW,CACrBA,EAAO,UAAa,EAAE,CACvB,EAAG,CAAC,EACJimB,EAAM,CACP,EAAG,CAAC,GAEJA,EAAM,CAER,CAEA,GAAIjmB,EAAO,QAEV,IADI,OAAOA,EAAO,SAAc,aAAYA,EAAO,QAAa,CAAEA,EAAO,OAAW,GAC7EA,EAAO,QAAW,OAAS,GACjCA,EAAO,QAAW,IAAI,EAAE,EAI1B,OAAAgmB,GAAI,EAGKlmB,EAAM,KACf,CAGA,GAAG,EACC,OAAOF,IAAY,UAAY,OAAOC,IAAW,SACnDA,GAAO,QAAUC,GACV,OAAO,QAAW,YAAc,OAAO,IAC9C,OAAO,CAAC,EAAG,UAAW,CAAE,OAAOA,EAAO,CAAC,EAChC,OAAOF,IAAY,WAC1BA,GAAQ,MAAWE,MCx3FrB,IAAAomB,GAAqB,WAEfC,GAAoC,GAAAC,QAGtCC,GAAmD,KAGvD,eAAsBC,GAAiC,CACrD,OAAID,KAAwB,OAC1BA,GAAsBF,GAAM,GAEvBE,EACT,CAGO,SAASE,IAAkB,CAChCF,GAAsB,KACtBG,GAAe,KACfL,GAAM,EAAE,KAAKM,GAAY,CACvBD,GAAeC,CACjB,CAAC,CACH,CAGA,IAAID,GAAmC,KAGhC,SAASE,GAAQD,EAA6B,CACnDD,GAAeC,CACjB,CAGO,SAASE,IAA8B,CAC5C,OAAOH,EACT,CCbA,eAAsBI,GACpBC,EACAC,EACAC,EACoC,CACpC,GAAI,CAACA,EAAM,OAAO,KAElB,GAAIF,EAAa,MAAO,CACtB,IAAMG,EAAcF,EAAqB,IAAIG,GAASA,EAAM,MAAM,EAClE,OAAOC,GAAwCF,EAAaD,CAAI,UACvDF,EAAa,KAAM,CAC5B,IAAMM,EAAaL,EAAqB,IAAIG,GAASA,EAAM,KAAK,EAChE,OAAOG,GAAuCD,EAAYJ,CAAI,UACrDF,EAAa,QAAS,CAC/B,IAAMQ,EAAgBP,EAAqB,IAAIG,GAASA,EAAM,QAAQ,EACtE,OAAOK,GAA0CD,EAAeN,CAAI,EAEtE,OAAO,IACT,CAOO,SAASG,GACdF,EACAD,EACiB,CAEjB,IAAMQ,EAAK,IAAIR,EAAK,aACdS,EAAK,IAAIT,EAAK,aACdU,EAAQ,IAAIV,EAAK,WACjBW,EAAQ,IAAIX,EAAK,WACjBY,EAAe,GAErB,QAASC,EAAa,EAAGA,EAAaZ,EAAY,OAAQY,IAAc,CACtE,IAAMC,EAASb,EAAYY,CAAU,EACrC,GAAIC,EAAQ,CACV,IAAMC,EAASD,EAAO,UAAU,MAChC,QAASE,EAAI,EAAGA,EAAID,EAAO,OAAQC,GAAK,EACtCR,EAAG,UAAUO,EAAOC,CAAC,CAAC,EACtBP,EAAG,UAAUM,EAAOC,EAAI,CAAC,CAAC,EAG5B,IAAIC,EAAQ,EACZ,QAASD,EAAI,EAAGA,EAAIF,EAAO,WAAW,MAAM,OAAQE,KAE9CA,IAAM,GAECF,EAAO,WAAW,MAAME,CAAC,IAAMF,EAAO,WAAW,MAAME,EAAI,CAAC,IACrEN,EAAM,UAAUO,CAAK,EAEvBA,IAGF,QAASD,EAAI,EAAGA,EAAIN,EAAM,KAAK,EAAGM,IAChCL,EAAM,UAAUD,EAAM,IAAIM,CAAC,EAAIN,EAAM,IAAIM,EAAI,CAAC,CAAC,EAG7CN,EAAM,KAAK,EAAI,GACjBC,EAAM,UAAUM,EAAQP,EAAM,IAAIA,EAAM,KAAK,EAAI,CAAC,CAAC,GAKzD,OADwB,IAAIV,EAAK,gBAAgBQ,EAAIC,EAAIC,EAAOC,EAAOC,CAAY,CAErF,CAOO,SAASP,GACdD,EACAJ,EACgB,CAEhB,IAAMQ,EAAK,IAAIR,EAAK,aACdS,EAAK,IAAIT,EAAK,aACdU,EAAQ,IAAIV,EAAK,WACjBW,EAAQ,IAAIX,EAAK,WACjBY,EAAe,GAErB,QAASM,EAAY,EAAGA,EAAYd,EAAW,OAAQc,IAAa,CAClE,IAAMC,EAAQf,EAAWc,CAAS,EAClC,GAAIC,EAAO,CACT,IAAMJ,EAASI,EAAM,UAAU,MACzBC,EAAcD,EAAM,YAAY,MAGtC,QAASH,EAAI,EAAGA,EAAID,EAAO,OAAQC,GAAK,EACtCR,EAAG,UAAUO,EAAOC,CAAC,CAAC,EACtBP,EAAG,UAAUM,EAAOC,EAAI,CAAC,CAAC,EAI5B,IAAIK,EAAW,EACf,QAASL,EAAI,EAAGA,EAAII,EAAY,OAAS,EAAGJ,IAAK,CAC/C,IAAMM,EAAkBF,EAAYJ,CAAC,EACrCN,EAAM,UAAUY,CAAe,EAG7BN,EAAI,GACJG,EAAM,WAAW,MAAMG,CAAe,IAAMH,EAAM,WAAW,MAAMG,EAAkB,CAAC,IAEtFX,EAAM,UAAUU,CAAQ,EACxBA,EAAW,GAEbA,GAAY,EAGdV,EAAM,UAAUU,CAAQ,GAK5B,OADuB,IAAIrB,EAAK,eAAeQ,EAAIC,EAAIC,EAAOC,EAAOC,CAAY,CAEnF,CAQO,SAASL,GACdD,EACAN,EACmB,CAEnB,IAAMQ,EAAK,IAAIR,EAAK,aACdS,EAAK,IAAIT,EAAK,aACdU,EAAQ,IAAIV,EAAK,WACjBuB,EAAQ,IAAIvB,EAAK,WACjBW,EAAQ,IAAIX,EAAK,WACjBwB,EAAa,GACbZ,EAAe,GAErB,QAASC,EAAa,EAAGA,EAAaP,EAAc,OAAQO,IAAc,CACxE,IAAMY,EAAWnB,EAAcO,CAAU,EACzC,GAAIY,EAAU,CACZ,IAAMV,EAASU,EAAS,UAAU,MAC5BC,EAAiBD,EAAS,eAAe,MACzCE,EAA0BF,EAAS,wBAAwB,MAGjE,QAAST,EAAI,EAAGA,EAAID,EAAO,OAAQC,GAAK,EACtCR,EAAG,UAAUO,EAAOC,CAAC,CAAC,EACtBP,EAAG,UAAUM,EAAOC,EAAI,CAAC,CAAC,EAE5B,IAAIY,EAAiB,EACjBP,EAAW,EACf,QAASL,EAAI,EAAGA,EAAIU,EAAe,OAAS,EAAGV,IAAK,CAClD,IAAMa,GAAWH,EAAeV,CAAC,EAC3Bc,EAASJ,EAAeV,EAAI,CAAC,EAEnC,KAAOW,EAAwBC,CAAc,EAAIE,GAI3CH,EAAwBC,CAAc,EAAIC,GAE5CN,EAAM,UAAU,CAAC,EAEjBA,EAAM,UAAU,CAAC,EAEnBb,EAAM,UAAUiB,EAAwBC,CAAc,CAAC,EACvDA,IACAP,GAAY,EAGVI,EAAS,WAAW,MAAMK,CAAM,IAAML,EAAS,WAAW,MAAMK,EAAS,CAAC,IAC5EnB,EAAM,UAAUU,CAAQ,EACxBA,EAAW,KAenB,OAT0B,IAAIrB,EAAK,kBACjCQ,EACAC,EACAC,EACAa,EACAZ,EACAa,EACAZ,CACF,CAEF,CChMA,eAAsBmB,GAAyC,CAC7D,kBAAAC,EACA,OAAAC,EAAS,GACT,mBAAAC,EACA,iBAAAC,CACF,EAAoE,CAClE,GAAI,CAACA,GAAoBA,EAAiB,SAAW,EACnD,MAAO,CAAC,EAGV,IAAMC,EAAwB,CAAC,EAEzBC,EAAe,MAAMC,EAAS,EAC9BC,EAAiB,MAAMC,GAC3BN,EACAC,EACAE,CACF,EAEA,GAAIE,EAAgB,CAClB,IAAME,EAASJ,EAAa,mBAAmBE,EAAgBP,EAAmBC,CAAM,EACxF,QAASS,EAAI,EAAGA,EAAID,EAAO,KAAK,EAAG,EAAEC,EAAG,CACtC,IAAMC,EAAOF,EAAO,IAAIC,CAAC,EACnBE,EAAuB,MAAMD,EAAK,KAAK,CAAC,EAC9C,QAASE,EAAI,EAAGC,EAAUH,EAAK,KAAK,EAAGE,EAAIC,EAAS,EAAED,EACpDD,EAAWC,CAAC,EAAIF,EAAK,IAAIE,CAAC,EAE5BT,EAAUM,CAAC,EAAIE,GAInB,OAAOR,CACT,CAwBA,eAAsBW,GAAsB,CAC1C,OAAAd,EAAS,GACT,mBAAAC,EACA,iBAAAC,CACF,EAAyD,CACvD,IAAME,EAAe,MAAMC,EAAS,EAC9BC,EAAiB,MAAMC,GAC3BN,EACAC,EACAE,CACF,EACA,GAAIE,EAAgB,CAClB,IAAMS,EAAcX,EAAa,sBAAsBE,EAAgBN,CAAM,EAC7E,MAAO,CACL,YAAae,EAAY,IAAI,CAAC,EAC9B,YAAaA,EAAY,IAAI,CAAC,EAC9B,gBAAiBA,EAAY,IAAI,CAAC,CACpC,EAEF,MAAO,CACL,YAAa,EACb,YAAa,EACb,gBAAiB,CACnB,CACF,CCjFA,eAAsBC,GAAwC,CAC5D,EAAAC,EACA,mBAAAC,EACA,iBAAAC,CACF,EAAmE,CACjE,GAAI,CAACA,GAAoBA,EAAiB,SAAW,EACnD,MAAO,CAAC,EAGV,IAAMC,EAAwB,CAAC,EAEzBC,EAAe,MAAMC,EAAS,EAC9BC,EAAiB,MAAMC,GAC3BN,EACAC,EACAE,CACF,EAEA,GAAIE,EAAgB,CAClB,IAAME,EAASJ,EAAa,oBAAoBE,EAAgBN,CAAC,EACjE,QAASS,EAAI,EAAGA,EAAID,EAAO,KAAK,EAAG,EAAEC,EAAG,CACtC,IAAMC,EAAOF,EAAO,IAAIC,CAAC,EACnBE,EAAuB,MAAMD,EAAK,KAAK,CAAC,EAC9C,QAASE,EAAI,EAAGC,EAAUH,EAAK,KAAK,EAAGE,EAAIC,EAAS,EAAED,EACpDD,EAAWC,CAAC,EAAIF,EAAK,IAAIE,CAAC,EAE5BT,EAAUM,CAAC,EAAIE,GAInB,OAAOR,CACT,CC3BA,eAAsBW,GAA2C,CAC/D,mBAAAC,EACA,iBAAAC,EACA,QAAAC,EACA,aAAAC,EACA,mBAAAC,EAAqB,EACrB,kBAAAC,EAAoB,EACpB,kBAAAC,EAAoB,EACtB,EAAsE,CACpE,GAAI,CAACL,GAAoBA,EAAiB,SAAW,EACnD,MAAO,CAAC,EAGV,IAAMM,EAAwB,CAAC,EAEzBC,EAAe,MAAMC,EAAS,EAC9BC,EAAiB,MAAMC,GAC3BX,EACAC,EACAO,CACF,EAEA,GAAIE,EAAgB,CAClB,IAAME,EACJT,GAAgBH,EAAmB,OAASA,EAAmB,KAC3DQ,EAAa,0BACXE,EACAR,EACAE,EACAC,EACAC,CACF,EACAE,EAAa,4BACXE,EACAR,EACAE,EACAC,EACAC,CACF,EACN,QAASO,EAAI,EAAGA,EAAID,EAAO,KAAK,EAAG,EAAEC,EAAG,CACtC,IAAMC,EAAOF,EAAO,IAAIC,CAAC,EACnBE,EAAuB,MAAMD,EAAK,KAAK,CAAC,EAC9C,QAASE,EAAI,EAAGC,EAAUH,EAAK,KAAK,EAAGE,EAAIC,EAAS,EAAED,EACpDD,EAAWC,CAAC,EAAIF,EAAK,IAAIE,CAAC,EAE5BT,EAAUM,CAAC,EAAIE,GAInB,OAAOR,CACT,CC7CO,SAASW,GAAmBC,EAAqBC,EAAoB,GAAoB,CAC9F,IAAM,EAAID,EAAQ,OACdE,EAAe,KAAK,IAAI,GAAGF,EAAQ,IAAIG,GAAKA,EAAE,MAAM,CAAC,EACrDC,EAAe,KAAK,IAAI,GAAGJ,EAAQ,IAAIG,GAAKA,EAAE,MAAM,CAAC,EACrDE,EAAgBL,EAAQ,OAAO,CAACM,EAAKH,IAAMG,EAAMH,EAAE,OAAQ,CAAC,EAAI,EAChEI,EAAkBP,EAAQ,IAAIG,GAAKA,EAAE,MAAM,EAAE,KAAK,CAACK,EAAGC,IAAMD,EAAIC,CAAC,EAAE,KAAK,MAAM,EAAI,CAAC,CAAC,EACpFC,EAAiBV,EAAQ,OAAO,CAACM,EAAKH,IAAMG,EAAMH,EAAE,OAAQ,CAAC,EAC7DQ,EAAcD,GAAkB,EAAI,GAExC,OAAIT,IACFC,EAAe,KAAK,IAAI,GAAGF,EAAQ,IAAIG,GAAKA,EAAE,OAAS,CAAC,CAAC,EACzDC,EAAe,KAAK,IAAI,GAAGJ,EAAQ,IAAIG,GAAKA,EAAE,OAAS,CAAC,CAAC,EACzDE,EAAgBL,EAAQ,OAAO,CAACM,EAAKH,IAAMG,EAAMH,EAAE,OAAS,EAAG,CAAC,EAAI,EACpEI,EAAkBP,EAAQ,IAAIG,GAAKA,EAAE,OAAS,CAAC,EAAE,KAAK,CAACK,EAAGC,IAAMD,EAAIC,CAAC,EAAE,KAAK,MAAM,EAAI,CAAC,CAAC,EACxFC,EAAiBV,EAAQ,OAAO,CAACM,EAAKH,IAAMG,EAAMH,EAAE,OAAS,EAAG,CAAC,EACjEQ,EAAcD,GAAkB,EAAI,IAG/B,CACL,qBAAsB,EACtB,aAAAR,EACA,aAAAE,EACA,cAAAC,EACA,gBAAAE,EACA,YAAAI,CACF,CACF,CCfO,SAASC,EAAkBC,EAA8B,CAC9D,IAAMC,EAAmB,CAAC,EAEpB,EAAID,EAAK,KAAK,EACpB,QAASE,EAAI,EAAGA,EAAI,EAAG,EAAEA,EACvBD,EAAO,KAAKD,EAAK,IAAIE,CAAC,CAAC,EAGzB,OAAOD,CACT,CAOO,SAASE,EAAeH,EAA2B,CACxD,IAAMC,EAAmB,CAAC,EAEpB,EAAID,EAAK,KAAK,EACpB,QAASE,EAAI,EAAGA,EAAI,EAAG,EAAEA,EACvBD,EAAO,KAAKD,EAAK,IAAIE,CAAC,CAAC,EAGzB,OAAOD,CACT,CAOO,SAASG,EAAiBJ,EAA8B,CAC7D,IAAMC,EAAmB,CAAC,EAEpB,EAAID,EAAK,KAAK,EACpB,QAASE,EAAI,EAAGA,EAAI,EAAG,EAAEA,EACvBD,EAAO,KAAKD,EAAK,IAAIE,CAAC,CAAC,EAGzB,OAAOD,CACT,CC3DA,eAAsBI,GAAW,CAC/B,KAAAC,EACA,UAAAC,EACA,YAAAC,EACA,mBAAAC,EAAqB,IACrB,KAAAC,EAAO,UACT,EAA+C,CAC7C,IAAMC,EAAO,MAAMC,EAAS,EAEtBC,EAAIP,EAAK,OACTQ,EAAW,IAAIH,EAAK,aAC1BG,EAAS,OAAOD,EAAG,CAAC,EACpB,QAASE,EAAI,EAAGA,EAAIF,EAAG,EAAEE,EACvBD,EAAS,IAAIC,EAAGT,EAAKS,CAAC,CAAC,EAGzB,IAAMC,EAAgB,IAAIL,EAAK,WACzBM,EAAa,IAAIN,EAAK,WAE5B,QAASI,EAAI,EAAGA,EAAIF,EAAG,EAAEE,EAAG,CAC1B,IAAMG,EAAOX,EAAUQ,CAAC,EAClBI,EAAsB,IAAIR,EAAK,WACrC,QAASS,EAAI,EAAGC,EAAUH,EAAK,OAAQE,EAAIC,EAAS,EAAED,EACpDD,EAAoB,UAAUD,EAAKE,CAAC,CAAC,EAEvCJ,EAAc,UAAUG,CAAmB,EAG7C,IAAMG,EAASX,EAAK,WAClBG,EACAE,EACAC,EACAR,EACAD,EACAE,CACF,EAEA,MAAO,CACL,QAASY,EAAO,QAAQ,EACxB,SAAUC,EAAkBD,EAAO,YAAY,CAAC,EAChD,UAAWC,EAAkBD,EAAO,aAAa,CAAC,EAClD,WAAYC,EAAkBD,EAAO,cAAc,CAAC,EACpD,QAASC,EAAkBD,EAAO,WAAW,CAAC,EAC9C,cAAeE,EAAeF,EAAO,0BAA0B,CAAC,EAChE,GAAIE,EAAeF,EAAO,MAAM,CAAC,EACjC,OAAQG,EAAiBH,EAAO,UAAU,CAAC,EAC3C,OAAQG,EAAiBH,EAAO,UAAU,CAAC,CAC7C,CACF,CAYA,eAAsBI,GAAoB,CACxC,MAAAC,EACA,MAAAC,EACA,UAAArB,EACA,YAAAC,EACA,mBAAAC,EAAqB,IACrB,KAAAC,EAAO,UACT,EAAwD,CACtD,IAAMC,EAAO,MAAMC,EAAS,EAEtBC,EAAIc,EAAM,OACVE,EAAY,IAAIlB,EAAK,aAC3BkB,EAAU,OAAOhB,EAAG,CAAC,EACrB,QAASE,EAAI,EAAGA,EAAIF,EAAG,EAAEE,EACvBc,EAAU,IAAId,EAAGY,EAAMZ,CAAC,CAAC,EAE3B,IAAMe,EAAY,IAAInB,EAAK,aAC3BmB,EAAU,OAAOjB,EAAG,CAAC,EACrB,QAASE,EAAI,EAAGA,EAAIF,EAAG,EAAEE,EACvBe,EAAU,IAAIf,EAAGa,EAAMb,CAAC,CAAC,EAG3B,IAAMC,EAAgB,IAAIL,EAAK,WACzBM,EAAa,IAAIN,EAAK,WAE5B,QAASI,EAAI,EAAGA,EAAIF,EAAG,EAAEE,EAAG,CAC1B,IAAMG,EAAOX,EAAUQ,CAAC,EAClBI,EAAsB,IAAIR,EAAK,WACrC,QAASS,EAAI,EAAGC,EAAUH,EAAK,OAAQE,EAAIC,EAAS,EAAED,EACpDD,EAAoB,UAAUD,EAAKE,CAAC,CAAC,EAEvCJ,EAAc,UAAUG,CAAmB,EAG7C,IAAMG,EAASX,EAAK,oBAClBkB,EACAC,EACAd,EACAC,EACAR,EACAD,EACAE,CACF,EAEA,MAAO,CACL,QAASY,EAAO,QAAQ,EACxB,SAAUC,EAAkBD,EAAO,YAAY,CAAC,EAChD,UAAWC,EAAkBD,EAAO,aAAa,CAAC,EAClD,WAAYC,EAAkBD,EAAO,cAAc,CAAC,EACpD,QAASC,EAAkBD,EAAO,WAAW,CAAC,EAC9C,cAAeE,EAAeF,EAAO,0BAA0B,CAAC,EAChE,GAAIE,EAAeF,EAAO,MAAM,CAAC,EACjC,OAAQG,EAAiBH,EAAO,UAAU,CAAC,EAC3C,OAAQG,EAAiBH,EAAO,UAAU,CAAC,CAC7C,CACF,CC9HA,eAAsBS,GAAO,CAC3B,KAAAC,EACA,UAAAC,EACA,YAAAC,EACA,mBAAAC,EAAqB,IACrB,KAAAC,EAAO,WACP,QAAAC,EAAU,EACZ,EAA2C,CACzC,IAAMC,EAAO,MAAMC,EAAS,EAEtBC,EAAIR,EAAK,OACTS,EAAW,IAAIH,EAAK,aAC1BG,EAAS,OAAOD,EAAG,CAAC,EACpB,QAASE,EAAI,EAAGA,EAAIF,EAAG,EAAEE,EACvBD,EAAS,IAAIC,EAAGV,EAAKU,CAAC,CAAC,EAGzB,IAAMC,EAAa,IAAIL,EAAK,WACtBM,EAAgB,IAAIN,EAAK,WAC/B,QAASI,EAAI,EAAGA,EAAIF,EAAG,EAAEE,EAAG,CAC1B,IAAMG,EAAOZ,EAAUS,CAAC,EAClBI,EAAsB,IAAIR,EAAK,WACrC,QAASS,EAAI,EAAGC,EAAUH,EAAK,OAAQE,EAAIC,EAAS,EAAED,EACpDD,EAAoB,UAAUD,EAAKE,CAAC,CAAC,EAEvCH,EAAc,UAAUE,CAAmB,EAG7C,IAAMG,EAASX,EAAK,OAClBG,EACAG,EACAD,EACAR,EACAD,EACAE,EACAC,EAAU,EAAI,CAChB,EAEA,MAAO,CACL,QAASY,EAAO,QAAQ,EACxB,SAAUC,EAAkBD,EAAO,YAAY,CAAC,EAChD,UAAWC,EAAkBD,EAAO,aAAa,CAAC,EAClD,WAAYC,EAAkBD,EAAO,cAAc,CAAC,EACpD,QAASC,EAAkBD,EAAO,WAAW,CAAC,EAC9C,cAAeE,EAAeF,EAAO,0BAA0B,CAAC,EAChE,GAAIE,EAAeF,EAAO,MAAM,CAAC,EACjC,OAAQG,EAAiBH,EAAO,UAAU,CAAC,EAC3C,OAAQG,EAAiBH,EAAO,UAAU,CAAC,CAC7C,CACF,CCjDA,eAAsBI,GAAW,CAC/B,KAAAC,EACA,UAAAC,EACA,YAAAC,EACA,mBAAAC,EAAqB,IACrB,KAAAC,EAAO,UACT,EAA+C,CAC7C,IAAMC,EAAO,MAAMC,EAAS,EAEtBC,EAAIP,EAAK,OACTQ,EAAW,IAAIH,EAAK,aAC1BG,EAAS,OAAOD,EAAG,CAAC,EACpB,QAASE,EAAI,EAAGA,EAAIF,EAAG,EAAEE,EACvBD,EAAS,IAAIC,EAAGT,EAAKS,CAAC,CAAC,EAGzB,IAAMC,EAAgB,IAAIL,EAAK,WACzBM,EAAa,IAAIN,EAAK,WAE5B,QAASI,EAAI,EAAGA,EAAIF,EAAG,EAAEE,EAAG,CAC1B,IAAMG,EAAOX,EAAUQ,CAAC,EAClBI,EAAsB,IAAIR,EAAK,WACrC,QAASS,EAAI,EAAGC,EAAUH,EAAK,OAAQE,EAAIC,EAAS,EAAED,EACpDD,EAAoB,UAAUD,EAAKE,CAAC,CAAC,EAEvCJ,EAAc,UAAUG,CAAmB,EAG7C,IAAMG,EAASX,EAAK,WAClBG,EACAE,EACAC,EACAR,EACAD,EACAE,CACF,EAEA,MAAO,CACL,QAASY,EAAO,QAAQ,EACxB,SAAUC,EAAkBD,EAAO,YAAY,CAAC,EAChD,UAAWC,EAAkBD,EAAO,aAAa,CAAC,EAClD,WAAYC,EAAkBD,EAAO,cAAc,CAAC,EACpD,QAASC,EAAkBD,EAAO,WAAW,CAAC,EAC9C,cAAeE,EAAeF,EAAO,0BAA0B,CAAC,EAChE,GAAIE,EAAeF,EAAO,MAAM,CAAC,EACjC,OAAQG,EAAiBH,EAAO,UAAU,CAAC,EAC3C,OAAQG,EAAiBH,EAAO,UAAU,CAAC,CAC7C,CACF,CAWA,eAAsBI,GAAuB,CAC3C,KAAApB,EACA,UAAAC,EACA,YAAAC,EACA,mBAAAC,EAAqB,IACrB,KAAAC,EAAO,UACT,EAA2D,CACzD,IAAMC,EAAO,MAAMC,EAAS,EAEtBC,EAAIN,EAAU,OACdO,EAAW,IAAIH,EAAK,aAC1B,QAASI,EAAI,EAAGA,EAAIT,EAAK,OAAQ,EAAES,EAAG,CACpC,IAAMY,EAAO,IAAIhB,EAAK,aACtB,QAASS,EAAI,EAAGA,EAAId,EAAKS,CAAC,EAAE,OAAQ,EAAEK,EACpCO,EAAK,UAAUrB,EAAKS,CAAC,EAAEK,CAAC,CAAC,EAE3BN,EAAS,UAAUa,CAAI,EAGzB,IAAMX,EAAgB,IAAIL,EAAK,WACzBM,EAAa,IAAIN,EAAK,WAE5B,QAASI,EAAI,EAAGA,EAAIF,EAAG,EAAEE,EAAG,CAC1B,IAAMG,EAAOX,EAAUQ,CAAC,EAClBI,EAAsB,IAAIR,EAAK,WACrC,QAASS,EAAI,EAAGC,EAAUH,EAAK,OAAQE,EAAIC,EAAS,EAAED,EACpDD,EAAoB,UAAUD,EAAKE,CAAC,CAAC,EAEvCJ,EAAc,UAAUG,CAAmB,EAG7C,IAAMG,EAASX,EAAK,uBAClBG,EACAE,EACAC,EACAR,EACAD,EACAE,CACF,EAEA,MAAO,CACL,QAASY,EAAO,QAAQ,EACxB,SAAUC,EAAkBD,EAAO,YAAY,CAAC,EAChD,UAAWC,EAAkBD,EAAO,aAAa,CAAC,EAClD,WAAYC,EAAkBD,EAAO,cAAc,CAAC,EACpD,QAASC,EAAkBD,EAAO,WAAW,CAAC,EAC9C,cAAeE,EAAeF,EAAO,0BAA0B,CAAC,EAChE,GAAIE,EAAeF,EAAO,MAAM,CAAC,EACjC,OAAQG,EAAiBH,EAAO,UAAU,CAAC,EAC3C,OAAQG,EAAiBH,EAAO,UAAU,CAAC,CAC7C,CACF,CClGA,eAAsBM,GAAa,CACjC,EAAAC,EACA,SAAAC,EACA,KAAAC,EACA,UAAAC,EACA,YAAAC,EACA,mBAAAC,EAAqB,IACrB,KAAAC,EAAO,UACT,EAAiD,CAC/C,IAAMC,EAAO,MAAMC,EAAS,EAEtBC,EAAIP,EAAK,OACTQ,EAAW,IAAIH,EAAK,aAC1BG,EAAS,OAAOD,EAAG,CAAC,EACpB,QAASE,EAAI,EAAGA,EAAIF,EAAG,EAAEE,EACvBD,EAAS,IAAIC,EAAGT,EAAKS,CAAC,CAAC,EAGzB,IAAMC,EAAa,IAAIL,EAAK,WACtBM,EAAgB,IAAIN,EAAK,WAC/B,QAASI,EAAI,EAAGA,EAAIF,EAAG,EAAEE,EAAG,CAC1B,IAAMG,EAAOX,EAAUQ,CAAC,EAClBI,EAAsB,IAAIR,EAAK,WACrC,QAASS,EAAI,EAAGC,EAAUH,EAAK,OAAQE,EAAIC,EAAS,EAAED,EACpDD,EAAoB,UAAUD,EAAKE,CAAC,CAAC,EAEvCH,EAAc,UAAUE,CAAmB,EAG7C,IAAMG,EAASX,EAAK,aAClBP,EACAC,EACAS,EACAG,EACAD,EACAP,EACAD,EACAE,CACF,EAEA,MAAO,CACL,QAASY,EAAO,QAAQ,EACxB,SAAUC,EAAkBD,EAAO,YAAY,CAAC,EAChD,UAAWC,EAAkBD,EAAO,aAAa,CAAC,EAClD,WAAYC,EAAkBD,EAAO,cAAc,CAAC,EACpD,QAASC,EAAkBD,EAAO,WAAW,CAAC,EAC9C,cAAeE,EAAeF,EAAO,0BAA0B,CAAC,EAChE,GAAIE,EAAeF,EAAO,MAAM,CAAC,EACjC,OAAQG,EAAiBH,EAAO,UAAU,CAAC,EAC3C,OAAQG,EAAiBH,EAAO,UAAU,CAAC,CAC7C,CACF,CClEO,SAASI,GACdC,EACAC,EACAC,EAAiB,GACjBC,EACAC,EACU,CACV,IAAMC,EAAIL,EAAO,OACXM,EAAkBH,IAAY,OAE9BI,EAAS,IAAI,MAAMF,CAAC,EAAE,KAAK,CAAC,EAElC,QAASG,EAAI,EAAGA,EAAIH,EAAGG,IAAK,CAC1B,IAAIC,EAAM,EACNC,EAAY,EACZC,EAAiB,GAEfC,EAAKX,EAAUO,CAAC,EAEtB,QAASK,EAAI,EAAGA,EAAID,EAAG,OAAQC,IAAK,CAElC,GAAIL,IAAMI,EAAGC,CAAC,EAAG,CACfF,EAAiB,GACjB,SAEEL,GACFG,GAAOT,EAAOY,EAAGC,CAAC,CAAC,EACnBH,GAAa,IAEbD,GAAOT,EAAOY,EAAGC,CAAC,CAAC,EAAIV,EAAQK,CAAC,EAAEK,CAAC,EACnCH,GAAaP,EAAQK,CAAC,EAAEK,CAAC,GAIzBP,GAEEF,IACFK,GAAOT,EAAOQ,CAAC,EACfE,GAAa,GAEXR,IACFO,EAAMC,EAAY,EAAID,EAAMC,EAAY,KAItCR,IACFO,EAAMC,EAAY,EAAID,EAAMC,EAAY,GAGtCN,IAEEO,EAEFF,GAAOT,EAAOQ,CAAC,EAAIL,EAAQK,CAAC,EAAEI,EAAG,MAAM,EAEvCH,GAAOT,EAAOQ,CAAC,IAIrBD,EAAOC,CAAC,EAAIC,EAEd,OAAOF,CACT,CAQO,SAASO,GAAiBd,EAAkBC,EAAiC,CAClF,IAAM,EAAID,EAAO,OAEXO,EAAS,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,EAElC,QAASC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IAAMI,EAAKX,EAAUO,CAAC,EAAE,OAAOK,GAAKA,IAAML,CAAC,EACrCO,EAAOH,EAAG,IAAIC,GAAKb,EAAOa,CAAC,CAAC,EAClCE,EAAK,KAAK,CAACC,EAAGC,IAAMD,EAAIC,CAAC,EAIzB,IAAMC,EAAM,KAAK,MAAMN,EAAG,OAAS,CAAC,EAChCA,EAAG,OAAS,IAAM,EACpBL,EAAOC,CAAC,GAAKO,EAAKG,EAAM,CAAC,EAAIH,EAAKG,CAAG,GAAK,EAE1CX,EAAOC,CAAC,EAAIO,EAAKG,CAAG,EAGxB,OAAOX,CACT,CCrGO,IAAKY,QACVA,EAAA,SAAW,YACXA,EAAA,WAAa,cACbA,EAAA,cAAgB,iBAChBA,EAAA,aAAe,gBACfA,EAAA,sBAAwB,0BACxBA,EAAA,sBAAwB,0BANdA,QAAA,IAgBL,SAASC,GAAe,CAC7B,YAAAC,EACA,WAAAC,EACA,OAAAC,EACA,UAAAC,CACF,EAAkC,CAChC,OAAQD,EAAQ,CACd,IAAK,YACH,OAAOE,GAASH,EAAYD,CAAW,EACzC,IAAK,cACH,OAAOK,GAAWJ,EAAYD,CAAW,EAC3C,IAAK,iBACH,OAAOM,GAAeL,EAAYD,CAAW,EAC/C,IAAK,gBACH,OAAOG,EAAYI,GAAaN,EAAYD,EAAaG,CAAS,EAAI,CAAC,EACzE,IAAK,0BACH,OAAOA,EAAYK,GAAsBP,EAAYD,EAAaG,CAAS,EAAI,CAAC,EAClF,IAAK,0BACH,OAAOM,GAAkBR,EAAYD,CAAW,EAClD,QACE,MAAO,CAAC,CACZ,CACF,CAUO,SAASI,GAASH,EAAsBD,EAAiC,CAC9E,IAAM,EAAIC,EAAW,OACfS,EAAQ,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,EAEjC,QAASC,EAAI,EAAGA,EAAI,EAAGA,IACjBV,EAAWU,CAAC,EAAI,EAClBD,EAAMC,CAAC,EAAIX,EAAYW,CAAC,EAAIV,EAAWU,CAAC,EAExCD,EAAMC,CAAC,EAAI,EAGf,OAAOD,CACT,CAUO,SAASL,GAAWJ,EAAsBD,EAAiC,CAChF,IAAM,EAAIC,EAAW,OACfW,EAAQ,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,EAE7BC,EAAK,EACLC,EAAK,EAET,QAASH,EAAI,EAAGA,EAAI,EAAGA,IACrBE,GAAMZ,EAAWU,CAAC,EAClBG,GAAMd,EAAYW,CAAC,EAGrB,IAAII,EAAS,EACTF,EAAK,IACPE,EAASD,EAAKD,GAGhB,QAASF,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMK,EAAOf,EAAWU,CAAC,EAAII,EACzBC,EAAO,EACTJ,EAAMD,CAAC,EAAIX,EAAYW,CAAC,EAAIK,EAE5BJ,EAAMD,CAAC,EAAI,EAIf,OAAOC,CACT,CAUO,SAASN,GAAeL,EAAsBD,EAAiC,CACpF,IAAM,EAAIC,EAAW,OACfgB,EAAU,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,EAC7BC,EAAQ,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,EAC7BL,EAAK,EACLC,EAAK,EAET,QAASH,EAAI,EAAGA,EAAI,EAAGA,IACrBE,GAAMZ,EAAWU,CAAC,EAClBG,GAAMd,EAAYW,CAAC,EACfV,EAAWU,CAAC,EAAI,IAClBO,EAAMP,CAAC,EAAIX,EAAYW,CAAC,EAAIV,EAAWU,CAAC,GAI5C,IAAMQ,EAASN,EAAK,EAAIC,EAAKD,EAAK,EAC5BO,EAAOP,EAAK,EACdQ,EAAK,EACLC,EAAI,EAER,QAASX,EAAI,EAAGA,EAAI,EAAGA,IACrBU,GAAM,KAAK,IAAIH,EAAMP,CAAC,EAAIQ,EAAQ,CAAC,EAAIlB,EAAWU,CAAC,EAErD,IAAIY,EAASF,EAAKR,EAAKM,EAASC,EAE5BG,EAAS,IACXA,EAAS,GAGX,QAASZ,EAAI,EAAGA,EAAI,EAAGA,IACrBU,EAAKE,EAASJ,EAASlB,EAAWU,CAAC,EACnCW,EAAID,EAAK,EAAIE,EAASF,EAAK,EAC3BJ,EAAQN,CAAC,EAAIW,EAAIJ,EAAMP,CAAC,GAAK,EAAIW,GAAKH,EAGxC,OAAOF,CACT,CAYO,SAAST,GACdP,EACAD,EACAG,EACU,CACV,IAAMqB,EAAIvB,EAAW,OACfgB,EAAU,IAAI,MAAMO,CAAC,EAAE,KAAK,CAAC,EAC7BN,EAAQ,IAAI,MAAMM,CAAC,EAAE,KAAK,CAAC,EAEjC,QAASb,EAAI,EAAGA,EAAIa,EAAGb,IACrBO,EAAMP,CAAC,EAAIV,EAAWU,CAAC,EAAI,EAAIX,EAAYW,CAAC,EAAIV,EAAWU,CAAC,EAAI,EAGlE,QAASA,EAAI,EAAGA,EAAIa,EAAGb,IAAK,CAC1B,IAAIE,EAAKZ,EAAWU,CAAC,EACjBG,EAAKd,EAAYW,CAAC,EAChBc,EAAKtB,EAAUQ,CAAC,EAEtB,QAASe,EAAI,EAAGA,EAAID,EAAG,OAAQC,IAC7Bb,GAAMZ,EAAWwB,EAAGC,CAAC,CAAC,EACtBZ,GAAMd,EAAYyB,EAAGC,CAAC,CAAC,EAGzB,IAAMP,EAASN,EAAK,EAAIC,EAAKD,EAAK,EAElC,GAAIY,EAAG,OAAS,EAAG,CACjB,IAAML,EAAOP,GAAMY,EAAG,OAAS,GAC3BJ,EAAK,KAAK,IAAIH,EAAMP,CAAC,EAAIQ,EAAQ,CAAC,EAAIlB,EAAWU,CAAC,EAEtD,QAASe,EAAI,EAAGA,EAAID,EAAG,OAAQC,IAC7BL,GAAM,KAAK,IAAIH,EAAMO,EAAGC,CAAC,CAAC,EAAIP,EAAQ,CAAC,EAAIlB,EAAWwB,EAAGC,CAAC,CAAC,EAG7D,IAAIH,EAASF,EAAKR,EAAKM,EAASC,EAE5BG,EAAS,IACXA,EAAS,GAGXF,EAAKE,EAASJ,EAASlB,EAAWU,CAAC,EACnC,IAAMW,EAAID,EAAK,EAAIE,EAASF,EAAK,EACjCJ,EAAQN,CAAC,EAAIW,EAAIJ,EAAMP,CAAC,GAAK,EAAIW,GAAKH,GAI1C,OAAOF,CACT,CAWO,SAASV,GACdN,EACAD,EACAG,EACU,CACV,IAAMqB,EAAIvB,EAAW,OACfS,EAAQ,IAAI,MAAMc,CAAC,EAAE,KAAK,CAAC,EAEjC,QAASb,EAAI,EAAGA,EAAIa,EAAGb,IAAK,CAC1B,IAAIE,EAAKZ,EAAWU,CAAC,EACjBG,EAAKd,EAAYW,CAAC,EAChBc,EAAKtB,EAAUQ,CAAC,EAEtB,QAASe,EAAI,EAAGA,EAAID,EAAG,OAAQC,IAC7Bb,GAAMZ,EAAWwB,EAAGC,CAAC,CAAC,EACtBZ,GAAMd,EAAYyB,EAAGC,CAAC,CAAC,EAGrBzB,EAAWU,CAAC,EAAIE,EAAK,IACvBH,EAAMC,CAAC,GAAKX,EAAYW,CAAC,EAAIG,IAAOb,EAAWU,CAAC,EAAIE,IAIxD,OAAOH,CACT,CAEO,SAASD,GAAkBR,EAAsBD,EAAiC,CACvF,IAAM,EAAIC,EAAW,OACfgB,EAAU,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,EAC7BC,EAAQ,IAAI,MAAM,CAAC,EAAE,KAAK,CAAC,EAC7BL,EAAK,EACLC,EAAK,EAGT,QAASH,EAAI,EAAGA,EAAI,EAAGA,IACrBE,GAAMZ,EAAWU,CAAC,EAClBG,GAAMd,EAAYW,CAAC,EACfV,EAAWU,CAAC,EAAI,IAClBO,EAAMP,CAAC,EAAIX,EAAYW,CAAC,EAAIV,EAAWU,CAAC,GAI5C,GAAIE,IAAO,EACT,OAAOI,EAGT,IAAMU,EAAOb,EAAKD,EAGde,EAAQ,EACZ,QAASjB,EAAI,EAAGA,EAAI,EAAGA,IACrBiB,GAAS,KAAK,IAAIV,EAAMP,CAAC,EAAIgB,EAAM,CAAC,EAAI1B,EAAWU,CAAC,EAGtD,IAAMkB,EAAID,EAAQf,EAAKc,GAAQd,EAAK,GAC9BiB,EAAOD,EAAI,EAAIA,EAAI,EAEzB,QAASlB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMoB,EAAK9B,EAAWU,CAAC,EAAI,EAAI,KAAK,KAAKmB,EAAOH,EAAO1B,EAAWU,CAAC,CAAC,EAAI,EACxEM,EAAQN,CAAC,EAAIoB,EAAK,GAAKb,EAAMP,CAAC,EAAIgB,GAAQI,EAAK,EAGjD,OAAOd,CACT,CC1QA,eAAsBe,GAAeC,EAAWC,EAAkD,CAChG,IAAMC,EAAO,MAAMC,EAAS,EAEtBC,EAAIH,EAAK,OAETI,EAAa,IAAIH,EAAK,WAC5BG,EAAW,OAAOD,EAAG,CAAC,EAEtB,IAAME,EAAW,IAAIJ,EAAK,aAC1BI,EAAS,OAAOF,EAAG,CAAC,EACpB,QAASG,EAAI,EAAGA,EAAIH,EAAG,EAAEG,EACvBD,EAAS,IAAIC,EAAGN,EAAKM,CAAC,CAAC,GACnBN,EAAKM,CAAC,IAAM,QAAaN,EAAKM,CAAC,IAAM,OACvCF,EAAW,IAAIE,EAAG,CAAC,EAIvB,IAAMC,EAASN,EAAK,eAAeF,EAAGM,EAAUD,CAAU,EAE1D,OAAOI,EAAkBD,CAAM,CACjC,CCnBA,eAAsBE,GAAcC,EAAWC,EAAkD,CAC/F,IAAMC,EAAO,MAAMC,EAAS,EAEtBC,EAAIH,EAAK,OAETI,EAAa,IAAIH,EAAK,UAC5BG,EAAW,OAAOD,EAAG,CAAC,EAEtB,IAAME,EAAW,IAAIJ,EAAK,aAC1BI,EAAS,OAAOF,EAAG,CAAC,EACpB,QAASG,EAAI,EAAGA,EAAIH,EAAG,EAAEG,EACvBD,EAAS,IAAIC,EAAGN,EAAKM,CAAC,CAAC,GACnBN,EAAKM,CAAC,IAAM,QAAaN,EAAKM,CAAC,IAAM,OACvCF,EAAW,IAAIE,EAAG,CAAC,EAIvB,IAAMC,EAASN,EAAK,cAAcF,EAAGM,EAAUD,CAAU,EAEzD,OAAOI,EAAkBD,CAAM,CACjC,CCpBA,eAAsBE,GACpBC,EACAC,EACmB,CACnB,IAAMC,EAAO,MAAMC,EAAS,EAEtBC,EAAIH,EAAK,OAETI,EAAa,IAAIH,EAAK,UAC5BG,EAAW,OAAOD,EAAG,CAAC,EAEtB,IAAME,EAAW,IAAIJ,EAAK,aAC1BI,EAAS,OAAOF,EAAG,CAAC,EACpB,QAASG,EAAI,EAAGA,EAAIH,EAAG,EAAEG,EACvBD,EAAS,IAAIC,EAAGN,EAAKM,CAAC,CAAC,GACnBN,EAAKM,CAAC,IAAM,QAAaN,EAAKM,CAAC,IAAM,OACvCF,EAAW,IAAIE,EAAG,CAAC,EAIvB,IAAMC,EAASN,EAAK,oBAAoBF,EAAGM,EAAUD,CAAU,EAE/D,OAAOI,EAAkBD,CAAM,CACjC,CCvBA,eAAsBE,GAAiBC,EAAkD,CACvF,IAAMC,EAAO,MAAMC,EAAS,EAEtB,EAAIF,EAAK,OAETG,EAAa,IAAIF,EAAK,UAC5BE,EAAW,OAAO,EAAG,CAAC,EAEtB,IAAMC,EAAW,IAAIH,EAAK,aAC1BG,EAAS,OAAO,EAAG,CAAC,EACpB,QAASC,EAAI,EAAGA,EAAI,EAAG,EAAEA,EACvBD,EAAS,IAAIC,EAAGL,EAAKK,CAAC,CAAC,GACnBL,EAAKK,CAAC,IAAM,QAAaL,EAAKK,CAAC,IAAM,OACvCF,EAAW,IAAIE,EAAG,CAAC,EAIvB,IAAMC,EAASL,EAAK,iBAAiBG,EAAUD,CAAU,EAEzD,OAAOI,EAAkBD,CAAM,CACjC,CC3BA,eAAeE,GAAUC,EAA+BC,EAAwC,CAC9F,IAAMC,EAAO,MAAMC,EAAS,EAEtBC,EAAIJ,EAAK,OAETK,EAAa,IAAIH,EAAK,UAC5BG,EAAW,OAAOD,EAAG,CAAC,EAEtB,IAAME,EAAW,IAAIJ,EAAK,aAC1BI,EAAS,OAAOF,EAAG,CAAC,EACpB,QAASG,EAAI,EAAGA,EAAIH,EAAG,EAAEG,EACvBD,EAAS,IAAIC,EAAGP,EAAKO,CAAC,CAAC,GACnBP,EAAKO,CAAC,IAAM,QAAaP,EAAKO,CAAC,IAAM,OACvCF,EAAW,IAAIE,EAAG,CAAC,EAIvB,IAAMC,EAASN,EAAK,UAAUI,EAAUD,EAAYJ,CAAW,EAE/D,OAAOQ,EAAkBD,CAAM,CACjC,CASA,eAAsBE,GAAcV,EAAkD,CAGpF,OADe,MAAMD,GAAUC,EAAM,GAAW,CAElD,CASA,eAAsBW,GAAcX,EAAkD,CAGpF,OADe,MAAMD,GAAUC,EAAM,CAAW,CAElD,CCvCA,eAAsBY,GAAwBC,EAAkD,CAC9F,IAAMC,EAAO,MAAMC,EAAS,EAEtB,EAAIF,EAAK,OAETG,EAAa,IAAIF,EAAK,UAC5BE,EAAW,OAAO,EAAG,CAAC,EAEtB,IAAMC,EAAW,IAAIH,EAAK,aAC1BG,EAAS,OAAO,EAAG,CAAC,EACpB,QAASC,EAAI,EAAGA,EAAI,EAAG,EAAEA,EACvBD,EAAS,IAAIC,EAAGL,EAAKK,CAAC,CAAC,GACnBL,EAAKK,CAAC,IAAM,QAAaL,EAAKK,CAAC,IAAM,OACvCF,EAAW,IAAIE,EAAG,CAAC,EAIvB,IAAMC,EAASL,EAAK,wBAAwBG,EAAUD,CAAU,EAEhE,OAAOI,EAAkBD,CAAM,CACjC,CCoGA,eAAsBE,GAAiB,CACrC,EAAAC,EACA,EAAAC,EACA,UAAAC,EACA,QAAAC,EACA,OAAAC,EACA,MAAAC,EACA,YAAAC,EACA,QAAAC,EACA,QAAAC,CACF,EAA2D,CACzD,IAAMC,EAAe,MAAMC,EAAS,EAE9BC,EAAQ,IAAIF,EAAa,aAC/B,QAASG,EAAI,EAAGA,EAAIX,EAAE,OAAQ,EAAEW,EAC9BD,EAAM,UAAUV,EAAEW,CAAC,CAAC,EAGtB,IAAMC,EAAQ,IAAIJ,EAAa,aAC/B,QAASG,EAAI,EAAGA,EAAIZ,EAAE,OAAQ,EAAEY,EAAG,CACjC,IAAME,EAAO,IAAIL,EAAa,aAC9B,QAASM,EAAI,EAAGA,EAAIf,EAAEY,CAAC,EAAE,OAAQ,EAAEG,EACjCD,EAAK,UAAUd,EAAEY,CAAC,EAAEG,CAAC,CAAC,EAExBF,EAAM,UAAUC,CAAI,EAGtB,IAAME,EAAc,IAAIP,EAAa,WACrC,GAAIN,EACF,QAASS,EAAI,EAAGA,EAAIT,EAAQ,OAAQ,EAAES,EAAG,CACvC,IAAME,EAAO,IAAIL,EAAa,WAC9B,QAASM,EAAI,EAAGA,EAAIZ,EAAQS,CAAC,EAAE,OAAQ,EAAEG,EACvCD,EAAK,UAAUX,EAAQS,CAAC,EAAEG,CAAC,CAAC,EAE9BC,EAAY,UAAUF,CAAI,EAI9B,IAAMG,EAAa,IAAIR,EAAa,aACpC,QAASG,EAAI,EAAGA,EAAIR,EAAO,OAAQ,EAAEQ,EACnCK,EAAW,UAAUb,EAAOQ,CAAC,CAAC,EAGhC,IAAMM,EAAc,IAAIT,EAAa,WACrC,GAAID,EACF,QAASI,EAAI,EAAGA,EAAIJ,EAAQ,OAAQ,EAAEI,EACpCM,EAAY,UAAUV,EAAQI,CAAC,CAAC,EAIpC,IAAMO,EAAc,IAAIV,EAAa,WACrC,GAAIF,EACF,QAASK,EAAI,EAAGA,EAAIL,EAAQ,OAAQ,EAAEK,EAAG,CACvC,IAAME,EAAO,IAAIL,EAAa,WAC9B,QAASM,EAAI,EAAGA,EAAIR,EAAQK,CAAC,EAAE,OAAQ,EAAEG,EACvCD,EAAK,UAAUP,EAAQK,CAAC,EAAEG,CAAC,CAAC,EAE9BI,EAAY,UAAUL,CAAI,EAI9B,IAAMM,EAAYX,EAAa,iBAC7BE,EACAE,EACAG,EACAX,EACAY,EACAX,EACAY,EACAC,CACF,EAEME,EAAe,CAAC,EACtB,QAAST,EAAI,EAAGA,EAAIR,EAAO,OAAS,EAAG,EAAEQ,EACvCS,EAAa,KAAK,CAChB,SAAUD,EAAU,YAAYR,CAAC,EACjC,YAAaQ,EAAU,eAAeR,CAAC,EACvC,YAAaQ,EAAU,YAAYR,CAAC,EACpC,cAAeQ,EAAU,UAAUR,CAAC,EACpC,YAAaQ,EAAU,eAAeR,CAAC,CACzC,CAAC,EA2FH,MAxFe,CACb,KAAM,mBACN,kBAAmBP,EACnB,qBAAsBD,EACtB,MAAO,oCACP,YAAAE,EACA,UAAAJ,EACA,yBAA0BkB,EAAU,iBAAiB,EACrD,qBAAsBA,EAAU,SAAS,EACzC,sBAAuBhB,EAAO,OAAS,EACvC,mBAAoBgB,EAAU,SAAS,EACvC,qBAAsBA,EAAU,iBAAiB,EAAIhB,EAAO,OAAS,EACrE,YAAagB,EAAU,MAAM,EAC7B,qBAAsBA,EAAU,aAAa,EAC7C,cAAeA,EAAU,SAAS,EAClC,oBAAqBA,EAAU,aAAa,EAC5C,uBAAwBA,EAAU,OAAO,EACzC,iBAAkBA,EAAU,OAAO,EACnC,eAAgBA,EAAU,UAAU,EACpC,wBAAyBA,EAAU,OAAO,EAC1C,mBAAoB,KAAK,KAAKA,EAAU,UAAU,CAAC,EACnD,oBAAqBA,EAAU,UAAU,EACzC,kBAAmBA,EAAU,YAAY,EACzC,sBAAuB,KAAK,KAAKA,EAAU,YAAY,CAAC,EACxD,wBAAyBC,EACzB,yBAA0B,CACxB,qCAAsCD,EAAU,mBAAmB,EACnE,8BAA+B,CAC7B,KAAM,cACN,iBAAkBA,EAAU,UAAU,CAAC,EACvC,oBAAqBA,EAAU,UAAU,CAAC,EAC1C,0BAA2BA,EAAU,UAAU,CAAC,CAClD,CACF,EACA,qCAAsC,CACpC,qBAAsB,CACpB,KAAM,gBACN,mBAAoBA,EAAU,UAAU,CAAC,EACzC,sBAAuBA,EAAU,UAAU,CAAC,EAC5C,4BAA6BA,EAAU,UAAU,CAAC,CACpD,EACA,uBAAwB,CACtB,KAAM,kBACN,qBAAsBA,EAAU,UAAU,CAAC,EAC3C,wBAAyBA,EAAU,UAAU,CAAC,EAC9C,8BAA+BA,EAAU,UAAU,CAAC,CACtD,CACF,EACA,qCAAsC,CACpC,oBAAqB,CACnB,KAAM,oBACN,oBAAqBA,EAAU,UAAU,CAAC,EAC1C,2BAAuBA,EAAU,UAAU,CAAC,EAC5C,qCAAiCA,EAAU,UAAU,CAAC,CACxD,EACA,4BAA6B,CAC3B,KAAM,4BACN,+BAAgCA,EAAU,SAAS,CAAC,EACpD,kCAAmCA,EAAU,SAAS,CAAC,EACvD,wCAAyCA,EAAU,SAAS,CAAC,CAC/D,EACA,kBAAmB,CACjB,KAAM,kBACN,qBAAsBA,EAAU,YAAY,CAAC,EAC7C,wBAAyBA,EAAU,YAAY,CAAC,EAChD,8BAA+BA,EAAU,YAAY,CAAC,CACxD,EACA,8BAA+B,CAC7B,KAAM,8BACN,iCAAkCA,EAAU,SAAS,CAAC,EACtD,oCAAqCA,EAAU,SAAS,CAAC,EACzD,0CAA2CA,EAAU,SAAS,CAAC,CACjE,EACA,oBAAqB,CACnB,KAAM,oBACN,uBAAwBA,EAAU,YAAY,CAAC,EAC/C,0BAA2BA,EAAU,YAAY,CAAC,EAClD,gCAAiCA,EAAU,YAAY,CAAC,CAC1D,EACA,8BAA+B,CAC7B,KAAM,8BACN,iCAAkCA,EAAU,WAAW,CAAC,EACxD,oCAAqCA,EAAU,WAAW,CAAC,EAC3D,0CAA2CA,EAAU,WAAW,CAAC,CACnE,CACF,CACF,CAGF,CAGO,SAASE,GAA4BC,EAAkD,CAE5F,IAAIC,EAAS,GACbA,GAAU,YAAYD,EAAiB;AAAA,EACvCC,GAAU,GAAGD,EAAiB,UAAY,YAAYA,EAAiB;AAAA,EAAgB,KACvFC,GAAU,uBAAuBD,EAAiB;AAAA,EAClDC,GAAU,uBAAuBD,EAAiB,oBAAoB;AAAA,EACtEC,GAAU,qBAAqBD,EAAiB,kBAAkB;AAAA,EAClEC,GAAU,qBAAqBD,EAAiB,wBAAwB;AAAA,EACxEC,GAAU,uBAAuBD,EAAiB,oBAAoB;AAAA,EACtEC,GAAU,cAAcD,EAAiB,WAAW;AAAA,EACpDC,GAAU,mBAAmBD,EAAiB,oBAAoB;AAAA,EAClEC,GAAU,gBAAgBD,EAAiB,aAAa;AAAA,EACxDC,GAAU,sBAAsBD,EAAiB,mBAAmB;AAAA,EACpEC,GAAU,mBAAmBD,EAAiB,gBAAgB;AAAA,EAC9DC,GAAU,0BAA0BD,EAAiB,uBAAuB;AAAA,EAC5EC,GAAU,sBAAsBD,EAAiB,mBAAmB;AAAA,EACpEC,GAAU,yBAAyBD,EAAiB,sBAAsB;AAAA,EAC1EC,GAAU,iBAAiBD,EAAiB,cAAc;AAAA,EAC1DC,GAAU,qBAAqBD,EAAiB,kBAAkB;AAAA,EAClEC,GAAU,oBAAoBD,EAAiB,iBAAiB;AAAA,EAChEC,GAAU,0BAA0B,KAAK,KAAKD,EAAiB,iBAAiB,CAAC;AAAA,EACjFC,GAAU;AAAA,EACVA,GAAU;AAAA,EACV,QAAWC,KAAeF,EAAiB,uBAAuB,EAChEC,GAAU,GAAGC,EAAY,YAAaA,EAAY,eAAgBA,EAAY,WAAW,KAAMA,EAAY,aAAa,KAAMA,EAAY;AAAA,EAE5ID,GAAU;AAAA;AAAA;AAAA,EACVA,GAAU,uCAAuCD,EAAiB,wBAAwB,EAAE,oCAAoC;AAAA,EAChIC,GAAU;AAAA,EACVA,GAAU;AAAA,EACV,IAAME,EAAgBH,EAAiB,wBAAwB,EAAE,6BAA6B,EAC9FC,GAAU,GAAGE,EAAc,QAASA,EAAc,gBAAgB,KAAMA,EAAc,mBAAmB,KAAMA,EAAc,yBAAyB;AAAA;AAAA,EACtJF,GAAU;AAAA,EACVA,GAAU;AAAA,EACVA,GAAU;AAAA,EACV,IAAMG,EAASJ,EAAiB,oCAAoC,EAAE,oBAAoB,EAC1FC,GAAU,GAAGG,EAAO,QAASA,EAAO,kBAAkB,KAAMA,EAAO,qBAAqB,KAAMA,EAAO,2BAA2B;AAAA,EAChIH,GAAU;AAAA,EACVA,GAAU;AAAA,EACV,IAAMI,EAASL,EAAiB,oCAAoC,EAAE,sBAAsB,EAE5F,GADAC,GAAU,GAAGI,EAAO,QAASA,EAAO,oBAAoB,KAAMA,EAAO,uBAAuB,KAAMA,EAAO,6BAA6B;AAAA;AAAA,EAClIL,EAAiB,UAAW,CAC9BC,GAAU;AAAA,EACVA,GAAU;AAAA,EACVA,GAAU;AAAA,EACV,IAAMK,EAASN,EAAiB,oCAAoC,EAAE,mBAAmB,EACzFC,GAAU,GAAGK,EAAO,QAASA,EAAO,mBAAmB,KAAMA,EAAO,0BAAqB,KAAMA,EAAO,oCAA+B;AAAA,EACrIL,GAAU;AAAA,EACVA,GAAU;AAAA,EACV,IAAMM,EACJP,EAAiB,oCAAoC,EAAE,2BAA2B,EACpFC,GAAU,GAAGM,EAAM,QAASA,EAAM,8BAA8B,KAAMA,EAAM,iCAAiC,KAAMA,EAAM,uCAAuC;AAAA,EAChKN,GAAU;AAAA,EACVA,GAAU;AAAA,EACV,IAAMO,EAAWR,EAAiB,oCAAoC,EAAE,iBAAiB,EACzFC,GAAU,GAAGO,EAAS,QAASA,EAAS,oBAAoB,KAAMA,EAAS,uBAAuB,KAAMA,EAAS,6BAA6B;AAAA,EAC9IP,GAAU;AAAA,EACVA,GAAU;AAAA,EACV,IAAMQ,EACJT,EAAiB,oCAAoC,EAAE,6BAA6B,EACtFC,GAAU,GAAGQ,EAAQ,QAASA,EAAQ,gCAAgC,KAAMA,EAAQ,mCAAmC,KAAMA,EAAQ,yCAAyC;AAAA,EAC9KR,GAAU;AAAA,EACVA,GAAU;AAAA,EACV,IAAMS,EAAaV,EAAiB,oCAAoC,EAAE,mBAAmB,EAC7FC,GAAU,GAAGS,EAAW,QAASA,EAAW,sBAAsB,KAAMA,EAAW,yBAAyB,KAAMA,EAAW,+BAA+B;AAAA,EAC5JT,GAAU;AAAA,EACVA,GAAU;AAAA,EACV,IAAMU,EACJX,EAAiB,oCAAoC,EAAE,6BAA6B,EACtFC,GAAU,GAAGU,EAAQ,QAASA,EAAQ,gCAAgC,KAAMA,EAAQ,mCAAmC,KAAMA,EAAQ,yCAAyC;AAAA,EAC9KV,GAAU,+DAA+DW,GACvEZ,CACF;AAAA,EAEF,OAAOC,CACT,CAGA,SAASY,EAAYC,EAAqB,CAExC,IAAMC,EAASD,EAAI,SAAS,EAC5B,OAAIC,EAAO,SAAS,GAAG,GACCA,EAAO,MAAM,GAAG,EAAE,CAAC,EAAE,OACvB,EACXD,EAAI,QAAQ,CAAC,EAGjBA,EAAI,SAAS,CACtB,CAGO,SAASE,GACdhB,EACQ,CAER,IAAIC,EAAS,GACbA,GAAU,YAAYD,EAAiB;AAAA,EACvCC,GAAU,GAAGD,EAAiB,UAAY,YAAYA,EAAiB;AAAA,EAAgB,KACvFC,GAAU;AAAA,EACVA,GAAU;AAAA,EACVA,GAAU,wBACRD,EAAiB,wCACIa,EAAYb,EAAiB,wBAAwB,CAAC;AAAA,EAC7EC,GAAU,yBAAyBY,EACjCb,EAAiB,oBAAoB,CACvC,4BAA4BA,EAAiB,qBAAqB;AAAA,EAClEC,GAAU,wBAAwBY,EAChCb,EAAiB,kBAAkB,CACrC,2BAA2BA,EAAiB,oBAAoB;AAAA,EAEhEC,GAAU;AAAA,EACVA,GAAU;AAAA,EACVA,GAAU,eAAeY,EAAYb,EAAiB,WAAW,CAAC,oBAAoBa,EACpFb,EAAiB,aAAa,CAChC;AAAA,EACAC,GAAU,oBAAoBY,EAC5Bb,EAAiB,oBAAoB,CACvC,yBAAyBa,EAAYb,EAAiB,mBAAmB,CAAC;AAAA,EAC1EC,GAAU,0BAA0BY,EAClCb,EAAiB,sBAAsB,CACzC,qBAAqBa,EAAYb,EAAiB,gBAAgB,CAAC;AAAA,EACnEC,GAAU,kBAAkBY,EAAYb,EAAiB,cAAc,CAAC,UAAUa,EAChFb,EAAiB,uBAAuB,CAC1C;AAAA,EACAC,GAAU,wBAAwBY,EAChCb,EAAiB,kBAAkB,CACrC,wBAAwBa,EAAYb,EAAiB,mBAAmB,CAAC;AAAA,EACzEC,GAAU,qBAAqBY,EAAY,KAAK,KAAKb,EAAiB,iBAAiB,CAAC,CAAC;AAAA,EACzFC,GAAU,2BAA2BY,EACnC,KAAK,KAAKb,EAAiB,iBAAiB,CAAC,CAC/C;AAAA,EAEAC,GAAU;AAAA,EACVA,GAAU;AAAA;AAAA,EACVA,GAAU;AAAA,EACVA,GAAU;AAAA,EACV,QAAWC,KAAeF,EAAiB,uBAAuB,EAChEC,GAAU,GAAGC,EAAY,cAAcW,EAAYX,EAAY,WAAW,OAAOW,EAC/EX,EAAY,WAAW,CACzB,OAAOW,EAAYX,EAAY,aAAa,CAAC,OAAOW,EAAYX,EAAY,WAAW;AAAA,EAEzFD,GAAU;AAAA,EACVA,GAAU;AAAA;AAAA,EACVA,GAAU;AAAA,EACVA,GAAU;AAAA,EACVA,GAAU,uCAAuCY,EAC/Cb,EAAiB,wBAAwB,EAAE,oCAAoC,CACjF;AAAA;AAAA,EACAC,GAAU;AAAA;AAAA,EACVA,GAAU;AAAA,EACVA,GAAU;AAAA,EACV,IAAME,EAAgBH,EAAiB,wBAAwB,EAAE,6BAA6B,EAC9FC,GAAU,GAAGE,EAAc,UAAUU,EACnCV,EAAc,gBAAgB,CAChC,OAAOU,EAAYV,EAAc,mBAAmB,CAAC,OAAOU,EAC1DV,EAAc,yBAAyB,CACzC;AAAA;AAAA,EACAF,GAAU;AAAA,EACVA,GAAU;AAAA,EACVA,GAAU,qCACVA,GAAU;AAAA,EACVA,GAAU;AAAA;AAAA,EACVA,GAAU;AAAA,EACVA,GAAU;AAAA,EACV,IAAMG,EAASJ,EAAiB,oCAAoC,EAAE,oBAAoB,EAC1FC,GAAU,IAAIG,EAAO,SAASS,EAAYT,EAAO,kBAAkB,CAAC,OAAOS,EACzET,EAAO,qBAAqB,CAC9B,OAAOS,EAAYT,EAAO,2BAA2B,CAAC;AAAA,EACtD,IAAMC,EAASL,EAAiB,oCAAoC,EAAE,sBAAsB,EAK5F,GAJAC,GAAU,IAAII,EAAO,SAASQ,EAAYR,EAAO,oBAAoB,CAAC,OAAOQ,EAC3ER,EAAO,uBAAuB,CAChC,OAAOQ,EAAYR,EAAO,6BAA6B,CAAC;AAAA,EAEpDL,EAAiB,UAAW,CAC9BC,GAAU;AAAA,EACVA,GAAU;AAAA,EACVA,GAAU;AAAA;AAAA,EACVA,GAAU;AAAA,EACVA,GAAU;AAAA,EAEV,IAAMK,EAASN,EAAiB,oCAAoC,EAAE,mBAAmB,EACzFC,GAAU,GAAGK,EAAO,UAAUO,EAAYP,EAAO,mBAAmB,CAAC,OAAOO,EAC1EP,EAAO,0BAAqB,CAC9B,OAAOO,EAAYP,EAAO,oCAA+B,CAAC;AAAA,EAE1D,IAAMC,EACJP,EAAiB,oCAAoC,EAAE,2BAA2B,EACpFC,GAAU,GAAGM,EAAM,UAAUM,EAC3BN,EAAM,8BAA8B,CACtC,OAAOM,EAAYN,EAAM,iCAAiC,CAAC,OAAOM,EAChEN,EAAM,uCAAuC,CAC/C;AAAA,EAEA,IAAMC,EAAWR,EAAiB,oCAAoC,EAAE,iBAAiB,EACzFC,GAAU,GAAGO,EAAS,UAAUK,EAAYL,EAAS,oBAAoB,CAAC,OAAOK,EAC/EL,EAAS,uBAAuB,CAClC,OAAOK,EAAYL,EAAS,6BAA6B,CAAC;AAAA,EAE1D,IAAMC,EACJT,EAAiB,oCAAoC,EAAE,6BAA6B,EACtFC,GAAU,GAAGQ,EAAQ,UAAUI,EAC7BJ,EAAQ,gCAAgC,CAC1C,OAAOI,EAAYJ,EAAQ,mCAAmC,CAAC,OAAOI,EACpEJ,EAAQ,yCAAyC,CACnD;AAAA,EAEA,IAAMC,EAAaV,EAAiB,oCAAoC,EAAE,mBAAmB,EAC7FC,GAAU,GAAGS,EAAW,UAAUG,EAChCH,EAAW,sBAAsB,CACnC,OAAOG,EAAYH,EAAW,yBAAyB,CAAC,OAAOG,EAC7DH,EAAW,+BAA+B,CAC5C;AAAA,EAEA,IAAMC,EACJX,EAAiB,oCAAoC,EAAE,6BAA6B,EACtFC,GAAU,GAAGU,EAAQ,UAAUE,EAC7BF,EAAQ,gCAAgC,CAC1C,OAAOE,EAAYF,EAAQ,mCAAmC,CAAC,OAAOE,EACpEF,EAAQ,yCAAyC,CACnD;AAAA,EAEAV,GAAU;AAAA,EACVA,GAAU;AAAA,EACVA,GAAU,+DAA+DW,GACvEZ,CACF;AAAA,EAGF,OAAOC,CACT,CAMO,SAASW,GAAmBZ,EAAkD,CACnF,IAAIiB,EAAQ,YACZ,GAAIjB,EAAiB,UAAW,CAE9B,IAAMO,EACJP,EAAiB,oCAAoC,EAAE,2BAA2B,EAC9ES,EACJT,EAAiB,oCAAoC,EAAE,6BAA6B,EAGtF,GACEO,EAAM,uCAAuC,GAAK,KAClDE,EAAQ,yCAAyC,GAAK,IACtD,CACA,IAAMD,EAAWR,EAAiB,oCAAoC,EAAE,iBAAiB,EACnFU,EACJV,EAAiB,oCAAoC,EAAE,mBAAmB,EAE1EQ,EAAS,6BAA6B,GAAK,KAC3CE,EAAW,+BAA+B,GAAK,IAK7CH,EAAM,uCAAuC,EAC7CE,EAAQ,yCAAyC,EAEjDQ,EAAQ,oBAERA,EAAQ,sBAEDT,EAAS,6BAA6B,GAAK,IACpDS,EAAQ,oBACCP,EAAW,+BAA+B,GAAK,IACxDO,EAAQ,sBAKNV,EAAM,uCAAuC,EAC7CE,EAAQ,yCAAyC,EAEjDQ,EAAQ,oBAERA,EAAQ,2BAGHV,EAAM,uCAAuC,GAAK,IAE3DU,EAAQ,oBACCR,EAAQ,yCAAyC,GAAK,IAC/DQ,EAAQ,sBAGRA,EAAQ,YAGZ,OAAOA,CACT",
  "names": ["require_wasm", "__commonJSMin", "exports", "module", "geoda", "_scriptDir", "Module", "readyPromiseResolve", "readyPromiseReject", "resolve", "reject", "moduleOverrides", "arguments_", "thisProgram", "quit_", "status", "toThrow", "ENVIRONMENT_IS_WEB", "ENVIRONMENT_IS_WORKER", "ENVIRONMENT_IS_NODE", "ENVIRONMENT_IS_SHELL", "scriptDirectory", "locateFile", "path", "read_", "readAsync", "readBinary", "setWindowTitle", "fs", "nodePath", "filename", "binary", "isFileURI", "ret", "onload", "onerror", "err", "data", "url", "xhr", "title", "out", "wasmBinary", "noExitRuntime", "abort", "wasmMemory", "ABORT", "EXITSTATUS", "assert", "condition", "text", "HEAP", "HEAP8", "HEAPU8", "HEAP16", "HEAPU16", "HEAP32", "HEAPU32", "HEAPF32", "HEAPF64", "updateMemoryViews", "b", "wasmTable", "__ATPRERUN__", "__ATINIT__", "__ATEXIT__", "__ATPOSTRUN__", "runtimeInitialized", "runtimeKeepaliveCounter", "keepRuntimeAlive", "preRun", "addOnPreRun", "callRuntimeCallbacks", "initRuntime", "postRun", "addOnPostRun", "cb", "addOnInit", "addOnExit", "runDependencies", "runDependencyWatcher", "dependenciesFulfilled", "getUniqueRunDependency", "id", "addRunDependency", "removeRunDependency", "callback", "what", "e", "dataURIPrefix", "isDataURI", "wasmBinaryFile", "getBinary", "file", "getBinaryPromise", "binaryFile", "response", "instantiateArrayBuffer", "imports", "receiver", "instance", "reason", "instantiateAsync", "result", "createWasm", "info", "wasmImports", "receiveInstance", "receiveInstantiationResult", "tempDouble", "tempI64", "ExitStatus", "callbacks", "getValue", "ptr", "type", "setValue", "value", "exceptionCaught", "exceptionLast", "uncaughtExceptionCount", "___cxa_rethrow", "ExceptionInfo", "excPtr", "destructor", "caught", "rethrown", "adjustedPtr", "isPointer", "___cxa_is_pointer_type", "adjusted", "___cxa_throw", "UTF8Decoder", "UTF8ArrayToString", "heapOrArray", "idx", "maxBytesToRead", "endIdx", "endPtr", "str", "u0", "u1", "u2", "ch", "UTF8ToString", "SYSCALLS", "___syscall_dup3", "fd", "suggestFD", "flags", "___syscall_faccessat", "dirfd", "amode", "setErrNo", "___errno_location", "___syscall_fcntl64", "cmd", "varargs", "___syscall_fstat64", "buf", "convertI32PairToI53Checked", "lo", "hi", "___syscall_ftruncate64", "length_low", "length_high", "___syscall_ioctl", "op", "___syscall_lstat64", "___syscall_newfstatat", "___syscall_openat", "___syscall_stat64", "___syscall_unlinkat", "__embind_register_bigint", "primitiveType", "name", "size", "minRange", "maxRange", "getShiftFromSize", "embind_init_charCodes", "codes", "i", "embind_charCodes", "readLatin1String", "c", "awaitingDependencies", "registeredTypes", "typeDependencies", "char_0", "char_9", "makeLegalFunctionName", "f", "createNamedFunction", "body", "extendError", "baseErrorType", "errorName", "errorClass", "message", "stack", "BindingError", "throwBindingError", "InternalError", "throwInternalError", "whenDependentTypesAreResolved", "myTypes", "dependentTypes", "getTypeConverters", "onComplete", "typeConverters", "myTypeConverters", "registerType", "unregisteredTypes", "registered", "dt", "rawType", "registeredInstance", "options", "__embind_register_bool", "trueValue", "falseValue", "shift", "wt", "destructors", "o", "pointer", "heap", "ClassHandle_isAliasOf", "other", "ClassHandle", "leftClass", "left", "rightClass", "right", "shallowCopyInternalPointer", "throwInstanceAlreadyDeleted", "obj", "getInstanceTypeName", "handle", "finalizationRegistry", "detachFinalizer", "runDestructor", "$$", "releaseClassHandle", "toDelete", "downcastPointer", "ptrClass", "desiredClass", "rv", "registeredPointers", "getInheritedInstanceCount", "registeredInstances", "getLiveInheritedInstances", "k", "deletionQueue", "flushPendingDeletes", "delayFunction", "setDelayFunction", "fn", "init_embind", "getBasestPointer", "class_", "getInheritedInstance", "makeClassHandle", "prototype", "record", "hasSmartPtrType", "hasSmartPtr", "attachFinalizer", "RegisteredPointer_fromWireType", "rawPointer", "makeDefaultHandle", "actualType", "registeredPointerRecord", "toType", "dp", "ClassHandle_clone", "clone", "ClassHandle_delete", "ClassHandle_isDeleted", "ClassHandle_deleteLater", "init_ClassHandle", "ensureOverloadTable", "proto", "methodName", "humanName", "prevFunc", "exposePublicSymbol", "numArguments", "RegisteredClass", "constructor", "instancePrototype", "rawDestructor", "baseClass", "getActualType", "upcast", "downcast", "upcastPointer", "constNoSmartPtrRawPointerToWireType", "embindRepr", "handleClass", "genericPointerToWireType", "clonedHandle", "Emval", "nonConstNoSmartPtrRawPointerToWireType", "simpleReadValueFromPointer", "RegisteredPointer_getPointee", "RegisteredPointer_destructor", "RegisteredPointer_deleteObject", "init_RegisteredPointer", "RegisteredPointer", "registeredClass", "isReference", "isConst", "isSmartPointer", "pointeeType", "sharingPolicy", "rawGetPointee", "rawConstructor", "rawShare", "replacePublicSymbol", "dynCallLegacy", "sig", "args", "wasmTableMirror", "getWasmTableEntry", "funcPtr", "func", "dynCall", "rtn", "getDynCaller", "argCache", "embind__requireFunction", "signature", "rawFunction", "makeDynCaller", "fp", "UnboundTypeError", "getTypeName", "___getTypeName", "_free", "throwUnboundTypeError", "types", "unboundTypes", "seen", "visit", "__embind_register_class", "rawPointerType", "rawConstPointerType", "baseClassRawType", "getActualTypeSignature", "upcastSignature", "downcastSignature", "destructorSignature", "legalFunctionName", "base", "basePrototype", "referenceConverter", "pointerConverter", "constPointerConverter", "heap32VectorToArray", "count", "firstElement", "array", "runDestructors", "del", "newFunc", "argumentList", "dummy", "r", "craftInvokerFunction", "argTypes", "classType", "cppInvokerFunc", "cppTargetFunc", "isAsync", "argCount", "isClassMethodFunc", "needsDestructorStack", "returns", "argsList", "argsListWired", "invokerFnBody", "dtorStack", "args1", "args2", "paramName", "__embind_register_class_constructor", "rawClassType", "rawArgTypesAddr", "invokerSignature", "invoker", "rawArgTypes", "__embind_register_class_function", "rawInvoker", "context", "isPureVirtual", "unboundTypesHandler", "method", "memberFunction", "HandleAllocator", "emval_handles", "__emval_decref", "count_emval_handles", "init_emval", "__embind_register_emval", "v", "floatReadValueFromPointer", "__embind_register_float", "__embind_register_function", "invokerArgsArray", "integerReadValueFromPointer", "signed", "__embind_register_integer", "fromWireType", "bitshift", "isUnsignedType", "checkAssertions", "toTypeName", "toWireType", "__embind_register_memory_view", "dataTypeIndex", "typeMapping", "TA", "decodeMemoryView", "stringToUTF8Array", "outIdx", "maxBytesToWrite", "startIdx", "u", "stringToUTF8", "outPtr", "lengthBytesUTF8", "len", "__embind_register_std_string", "stdStringIsUTF8", "length", "payload", "decodeStartPtr", "currentBytePtr", "maxRead", "stringSegment", "a", "valueIsOfTypeString", "_malloc", "charCode", "UTF16Decoder", "UTF16ToString", "maxIdx", "codeUnit", "stringToUTF16", "startPtr", "numCharsToWrite", "lengthBytesUTF16", "UTF32ToString", "utf32", "stringToUTF32", "trailSurrogate", "lengthBytesUTF32", "__embind_register_std_wstring", "charSize", "decodeString", "encodeString", "getHeap", "lengthBytesUTF", "maxReadBytes", "__embind_register_void", "nowIsMonotonic", "__emscripten_get_now_is_monotonic", "__emval_incref", "requireRegisteredType", "impl", "__emval_take_value", "arg", "_abort", "_emscripten_date_now", "_emscripten_get_now", "t", "_emscripten_memcpy_big", "dest", "src", "num", "getHeapMax", "emscripten_realloc_buffer", "_emscripten_resize_heap", "requestedSize", "oldSize", "maxHeapSize", "alignUp", "x", "multiple", "cutDown", "overGrownHeapSize", "newSize", "replacement", "ENV", "getExecutableName", "getEnvStrings", "lang", "env", "strings", "stringToAscii", "buffer", "_environ_get", "__environ", "environ_buf", "bufSize", "string", "_environ_sizes_get", "penviron_count", "penviron_buf_size", "_proc_exit", "code", "exitJS", "implicit", "_exit", "_fd_close", "_fd_fdstat_get", "pbuf", "rightsBase", "rightsInheriting", "_fd_read", "iov", "iovcnt", "pnum", "_fd_seek", "offset_low", "offset_high", "whence", "newOffset", "printCharBuffers", "printChar", "stream", "curr", "flush_NO_FILESYSTEM", "_fd_write", "j", "isLeapYear", "year", "arraySum", "index", "sum", "MONTH_DAYS_LEAP", "MONTH_DAYS_REGULAR", "addDays", "date", "days", "newDate", "leap", "currentMonth", "daysInCurrentMonth", "intArrayFromString", "stringy", "dontAddNull", "u8array", "numBytesWritten", "writeArrayToMemory", "_strftime", "s", "maxsize", "format", "tm", "tm_zone", "pattern", "EXPANSION_RULES_1", "rule", "WEEKDAYS", "MONTHS", "leadingSomething", "digits", "character", "leadingNulls", "compareByDay", "date1", "date2", "sgn", "compare", "getFirstWeekStartDate", "janFourth", "getWeekBasedYear", "thisDate", "janFourthThisYear", "janFourthNextYear", "firstWeekStartThisYear", "firstWeekStartNextYear", "EXPANSION_RULES_2", "twelveHour", "val", "jan1", "dec31", "off", "ahead", "bytes", "_strftime_l", "loc", "asm", "___wasm_call_ctors", "__embind_initialize_bindings", "stackSave", "stackRestore", "stackAlloc", "dynCall_viiij", "dynCall_viiiij", "dynCall_ji", "dynCall_vij", "dynCall_jiii", "dynCall_jiji", "dynCall_viijii", "dynCall_iiiiij", "dynCall_iiiiijj", "dynCall_iiiiiijj", "calledRun", "runCaller", "run", "doRun", "import_wasm", "geoda", "geodaAny", "wasmInstancePromise", "initWASM", "resetWASM", "wasmInstance", "instance", "setWASM", "getWASM", "getGeometryCollectionFromBinaryGeometries", "geometryType", "binaryFeaturesChunks", "wasm", "pointsArray", "chunk", "createPointCollectionFromBinaryFeatures", "linesArray", "createLineCollectionFromBinaryFeatures", "polygonsArray", "createPolygonCollectionFromBinaryFeatures", "xs", "ys", "parts", "sizes", "convertToUTM", "chunkIndex", "points", "coords", "i", "index", "lineIndex", "lines", "geomOffsets", "numParts", "startPointIndex", "holes", "fixPolygon", "polygons", "polygonIndices", "primitivePolygonIndices", "primitiveIndex", "startIdx", "endIdx", "getDistanceNeighborsFromBinaryGeometries", "distanceThreshold", "isMile", "binaryGeometryType", "binaryGeometries", "neighbors", "wasmInstance", "initWASM", "geomCollection", "getGeometryCollectionFromBinaryGeometries", "result", "i", "nbrs", "nbrIndices", "j", "nbrSize", "getDistanceThresholds", "thresValues", "getNearestNeighborsFromBinaryGeometries", "k", "binaryGeometryType", "binaryGeometries", "neighbors", "wasmInstance", "initWASM", "geomCollection", "getGeometryCollectionFromBinaryGeometries", "result", "i", "nbrs", "nbrIndices", "j", "nbrSize", "getContiguityNeighborsFromBinaryGeometries", "binaryGeometryType", "binaryGeometries", "isQueen", "useCentroids", "precisionThreshold", "orderOfContiguity", "includeLowerOrder", "neighbors", "wasmInstance", "initWASM", "geomCollection", "getGeometryCollectionFromBinaryGeometries", "result", "i", "nbrs", "nbrIndices", "j", "nbrSize", "getMetaFromWeights", "weights", "isDistanceWeights", "minNeighbors", "w", "maxNeighbors", "meanNeighbors", "acc", "medianNeighbors", "a", "b", "sumofNeighbors", "pctNoneZero", "vecDoubleToNumber", "data", "result", "i", "vecIntToNumber", "vecStringToArray", "localMoran", "data", "neighbors", "permutation", "significanceCutoff", "seed", "wasm", "initWASM", "n", "wasmData", "i", "wasmNeighbors", "wasmUndefs", "nbrs", "wasmNeighborIndices", "j", "numNbrs", "result", "vecDoubleToNumber", "vecIntToNumber", "vecStringToArray", "bivariateLocalMoran", "data1", "data2", "wasmData1", "wasmData2", "localG", "data", "neighbors", "permutation", "significanceCutoff", "seed", "isGStar", "wasm", "initWASM", "n", "wasmData", "i", "wasmUndefs", "wasmNeighbors", "nbrs", "wasmNeighborIndices", "j", "numNbrs", "result", "vecDoubleToNumber", "vecIntToNumber", "vecStringToArray", "localGeary", "data", "neighbors", "permutation", "significanceCutoff", "seed", "wasm", "initWASM", "n", "wasmData", "i", "wasmNeighbors", "wasmUndefs", "nbrs", "wasmNeighborIndices", "j", "numNbrs", "result", "vecDoubleToNumber", "vecIntToNumber", "vecStringToArray", "multivariateLocalGeary", "vals", "quantileLisa", "k", "quantile", "data", "neighbors", "permutation", "significanceCutoff", "seed", "wasm", "initWASM", "n", "wasmData", "i", "wasmUndefs", "wasmNeighbors", "nbrs", "wasmNeighborIndices", "j", "numNbrs", "result", "vecDoubleToNumber", "vecIntToNumber", "vecStringToArray", "spatialLag", "values", "neighbors", "rowStandardize", "weights", "useSelfNeighbor", "n", "isBinaryWeights", "result", "i", "lag", "numOfNbrs", "isSelfIncluded", "nn", "j", "spatialLagMedian", "vals", "a", "b", "mid", "RatesOptions", "calculateRates", "eventValues", "baseValues", "method", "neighbors", "rawRates", "excessRisk", "empiricalBayes", "spatialRates", "spatialEmpiricalBayes", "rateStandardizeEB", "rates", "i", "risks", "SP", "SE", "lambda", "eHat", "results", "piRaw", "theta1", "pBar", "q1", "w", "theta2", "n", "nn", "j", "bHat", "gamma", "a", "aHat", "se", "quantileBreaks", "k", "data", "wasm", "initWASM", "n", "wasmUndefs", "wasmData", "i", "result", "vecDoubleToNumber", "naturalBreaks", "k", "data", "wasm", "initWASM", "n", "wasmUndefs", "wasmData", "i", "result", "vecDoubleToNumber", "equalIntervalBreaks", "k", "data", "wasm", "initWASM", "n", "wasmUndefs", "wasmData", "i", "result", "vecDoubleToNumber", "percentileBreaks", "data", "wasm", "initWASM", "wasmUndefs", "wasmData", "i", "result", "vecDoubleToNumber", "boxBreaks", "data", "hingeFactor", "wasm", "initWASM", "n", "wasmUndefs", "wasmData", "i", "result", "vecDoubleToNumber", "hinge15Breaks", "hinge30Breaks", "standardDeviationBreaks", "data", "wasm", "initWASM", "wasmUndefs", "wasmData", "i", "result", "vecDoubleToNumber", "linearRegression", "x", "y", "weightsId", "weights", "xNames", "yName", "datasetName", "xUndefs", "yUndefs", "wasmInstance", "initWASM", "wasmY", "i", "wasmX", "vals", "j", "wasmWeights", "wasmXNames", "wasmYUndefs", "wasmXUndefs", "regReport", "coefficients", "printLinearRegressionResult", "regressionReport", "output", "coefficient", "normalityTest", "bpTest", "kbTest", "moranI", "lmLag", "lmLagRob", "lmError", "lmErrorRob", "lmSarma", "selectSpatialModel", "printNumber", "num", "numStr", "printLinearRegressionResultUsingMarkdown", "model"]
}
