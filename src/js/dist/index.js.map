{
  "version": 3,
  "sources": ["../wasm/index.cjs", "../src/init.ts", "../src/geometry/binary-geometry.ts", "../src/weights/distance-neighbors.ts", "../src/weights/nearest-neighbors.ts", "../src/weights/contiguity-neighbors.ts", "../src/weights/weights-stats.ts", "../src/utils.ts", "../src/sa/local-moran.ts", "../src/sa/local-g.ts", "../src/sa/local-geary.ts", "../src/sa/quantile-lisa.ts", "../src/sa/spatial-lag.ts", "../src/sa/rates.ts", "../src/mapping/quantile.ts", "../src/mapping/natural-breaks.ts", "../src/mapping/equal-interval-breaks.ts", "../src/mapping/percentile-breaks.ts", "../src/mapping/box-breaks.ts", "../src/mapping/stddev-breaks.ts", "../src/regression/linear-regression.ts", "../src/regression/spatial-lag.ts", "../src/regression/spatial-error.ts"],
  "sourcesContent": ["\nvar geoda = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir ||= __filename;\n  return (\nfunction(moduleArg = {}) {\n\nvar Module = moduleArg;\n\nvar readyPromiseResolve, readyPromiseReject;\n\nModule[\"ready\"] = new Promise((resolve, reject) => {\n readyPromiseResolve = resolve;\n readyPromiseReject = reject;\n});\n\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\n\nvar thisProgram = \"./this.program\";\n\nvar quit_ = (status, toThrow) => {\n throw toThrow;\n};\n\nvar ENVIRONMENT_IS_WEB = typeof window == \"object\";\n\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == \"function\";\n\nvar ENVIRONMENT_IS_NODE = typeof process == \"object\" && typeof process.versions == \"object\" && typeof process.versions.node == \"string\";\n\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nvar scriptDirectory = \"\";\n\nfunction locateFile(path) {\n if (Module[\"locateFile\"]) {\n  return Module[\"locateFile\"](path, scriptDirectory);\n }\n return scriptDirectory + path;\n}\n\nvar read_, readAsync, readBinary;\n\nif (ENVIRONMENT_IS_NODE) {\n var fs = require(\"fs\");\n var nodePath = require(\"path\");\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = nodePath.dirname(scriptDirectory) + \"/\";\n } else {\n  scriptDirectory = __dirname + \"/\";\n }\n read_ = (filename, binary) => {\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  return fs.readFileSync(filename, binary ? undefined : \"utf8\");\n };\n readBinary = filename => {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n   ret = new Uint8Array(ret);\n  }\n  return ret;\n };\n readAsync = (filename, onload, onerror, binary = true) => {\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  fs.readFile(filename, binary ? undefined : \"utf8\", (err, data) => {\n   if (err) onerror(err); else onload(binary ? data.buffer : data);\n  });\n };\n if (!Module[\"thisProgram\"] && process.argv.length > 1) {\n  thisProgram = process.argv[1].replace(/\\\\/g, \"/\");\n }\n arguments_ = process.argv.slice(2);\n quit_ = (status, toThrow) => {\n  process.exitCode = status;\n  throw toThrow;\n };\n} else  if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = self.location.href;\n } else if (typeof document != \"undefined\" && document.currentScript) {\n  scriptDirectory = document.currentScript.src;\n }\n if (_scriptDir) {\n  scriptDirectory = _scriptDir;\n }\n if (scriptDirectory.startsWith(\"blob:\")) {\n  scriptDirectory = \"\";\n } else {\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n }\n {\n  read_ = url => {\n   var xhr = new XMLHttpRequest;\n   xhr.open(\"GET\", url, false);\n   xhr.send(null);\n   return xhr.responseText;\n  };\n  if (ENVIRONMENT_IS_WORKER) {\n   readBinary = url => {\n    var xhr = new XMLHttpRequest;\n    xhr.open(\"GET\", url, false);\n    xhr.responseType = \"arraybuffer\";\n    xhr.send(null);\n    return new Uint8Array(/** @type{!ArrayBuffer} */ (xhr.response));\n   };\n  }\n  readAsync = (url, onload, onerror) => {\n   var xhr = new XMLHttpRequest;\n   xhr.open(\"GET\", url, true);\n   xhr.responseType = \"arraybuffer\";\n   xhr.onload = () => {\n    if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n     onload(xhr.response);\n     return;\n    }\n    onerror();\n   };\n   xhr.onerror = onerror;\n   xhr.send(null);\n  };\n }\n} else  {}\n\nvar out = Module[\"print\"] || console.log.bind(console);\n\nvar err = Module[\"printErr\"] || console.error.bind(console);\n\nObject.assign(Module, moduleOverrides);\n\nmoduleOverrides = null;\n\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\n\nvar wasmBinary;\n\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n\nif (typeof WebAssembly != \"object\") {\n abort(\"no native wasm support detected\");\n}\n\nvar wasmMemory;\n\nvar ABORT = false;\n\nvar EXITSTATUS;\n\n/** @type {function(*, string=)} */ function assert(condition, text) {\n if (!condition) {\n  abort(text);\n }\n}\n\nvar HEAP, /** @type {!Int8Array} */ HEAP8, /** @type {!Uint8Array} */ HEAPU8, /** @type {!Int16Array} */ HEAP16, /** @type {!Uint16Array} */ HEAPU16, /** @type {!Int32Array} */ HEAP32, /** @type {!Uint32Array} */ HEAPU32, /** @type {!Float32Array} */ HEAPF32, /** @type {!Float64Array} */ HEAPF64;\n\nfunction updateMemoryViews() {\n var b = wasmMemory.buffer;\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(b);\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(b);\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(b);\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(b);\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(b);\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(b);\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(b);\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(b);\n}\n\nvar __ATPRERUN__ = [];\n\nvar __ATINIT__ = [];\n\nvar __ATEXIT__ = [];\n\nvar __ATPOSTRUN__ = [];\n\nvar runtimeInitialized = false;\n\nfunction preRun() {\n if (Module[\"preRun\"]) {\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\n  while (Module[\"preRun\"].length) {\n   addOnPreRun(Module[\"preRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n runtimeInitialized = true;\n callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n if (Module[\"postRun\"]) {\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\n  while (Module[\"postRun\"].length) {\n   addOnPostRun(Module[\"postRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n __ATINIT__.unshift(cb);\n}\n\nfunction addOnExit(cb) {}\n\nfunction addOnPostRun(cb) {\n __ATPOSTRUN__.unshift(cb);\n}\n\nvar runDependencies = 0;\n\nvar runDependencyWatcher = null;\n\nvar dependenciesFulfilled = null;\n\nfunction getUniqueRunDependency(id) {\n return id;\n}\n\nfunction addRunDependency(id) {\n runDependencies++;\n Module[\"monitorRunDependencies\"]?.(runDependencies);\n}\n\nfunction removeRunDependency(id) {\n runDependencies--;\n Module[\"monitorRunDependencies\"]?.(runDependencies);\n if (runDependencies == 0) {\n  if (runDependencyWatcher !== null) {\n   clearInterval(runDependencyWatcher);\n   runDependencyWatcher = null;\n  }\n  if (dependenciesFulfilled) {\n   var callback = dependenciesFulfilled;\n   dependenciesFulfilled = null;\n   callback();\n  }\n }\n}\n\n/** @param {string|number=} what */ function abort(what) {\n Module[\"onAbort\"]?.(what);\n what = \"Aborted(\" + what + \")\";\n err(what);\n ABORT = true;\n EXITSTATUS = 1;\n what += \". Build with -sASSERTIONS for more info.\";\n /** @suppress {checkTypes} */ var e = new WebAssembly.RuntimeError(what);\n readyPromiseReject(e);\n throw e;\n}\n\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\n/**\n * Indicates whether filename is a base64 data URI.\n * @noinline\n */ var isDataURI = filename => filename.startsWith(dataURIPrefix);\n\n/**\n * Indicates whether filename is delivered via file protocol (as opposed to http/https)\n * @noinline\n */ var isFileURI = filename => filename.startsWith(\"file://\");\n\nvar wasmBinaryFile;\n\nwasmBinaryFile = \"geoda.wasm\";\n\nif (!isDataURI(wasmBinaryFile)) {\n wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinarySync(file) {\n if (file == wasmBinaryFile && wasmBinary) {\n  return new Uint8Array(wasmBinary);\n }\n if (readBinary) {\n  return readBinary(file);\n }\n throw \"both async and sync fetching of the wasm failed\";\n}\n\nfunction getBinaryPromise(binaryFile) {\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n  if (typeof fetch == \"function\" && !isFileURI(binaryFile)) {\n   return fetch(binaryFile, {\n    credentials: \"same-origin\"\n   }).then(response => {\n    if (!response[\"ok\"]) {\n     throw `failed to load wasm binary file at '${binaryFile}'`;\n    }\n    return response[\"arrayBuffer\"]();\n   }).catch(() => getBinarySync(binaryFile));\n  } else if (readAsync) {\n   return new Promise((resolve, reject) => {\n    readAsync(binaryFile, response => resolve(new Uint8Array(/** @type{!ArrayBuffer} */ (response))), reject);\n   });\n  }\n }\n return Promise.resolve().then(() => getBinarySync(binaryFile));\n}\n\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\n return getBinaryPromise(binaryFile).then(binary => WebAssembly.instantiate(binary, imports)).then(receiver, reason => {\n  err(`failed to asynchronously prepare wasm: ${reason}`);\n  abort(reason);\n });\n}\n\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\n if (!binary && typeof WebAssembly.instantiateStreaming == \"function\" && !isDataURI(binaryFile) &&  !isFileURI(binaryFile) &&  !ENVIRONMENT_IS_NODE && typeof fetch == \"function\") {\n  return fetch(binaryFile, {\n   credentials: \"same-origin\"\n  }).then(response => {\n   /** @suppress {checkTypes} */ var result = WebAssembly.instantiateStreaming(response, imports);\n   return result.then(callback, function(reason) {\n    err(`wasm streaming compile failed: ${reason}`);\n    err(\"falling back to ArrayBuffer instantiation\");\n    return instantiateArrayBuffer(binaryFile, imports, callback);\n   });\n  });\n }\n return instantiateArrayBuffer(binaryFile, imports, callback);\n}\n\nfunction createWasm() {\n var info = {\n  \"env\": wasmImports,\n  \"wasi_snapshot_preview1\": wasmImports\n };\n /** @param {WebAssembly.Module=} module*/ function receiveInstance(instance, module) {\n  wasmExports = instance.exports;\n  wasmExports = applySignatureConversions(wasmExports);\n  wasmMemory = wasmExports[\"memory\"];\n  updateMemoryViews();\n  wasmTable = wasmExports[\"__indirect_function_table\"];\n  addOnInit(wasmExports[\"__wasm_call_ctors\"]);\n  removeRunDependency(\"wasm-instantiate\");\n  return wasmExports;\n }\n addRunDependency(\"wasm-instantiate\");\n function receiveInstantiationResult(result) {\n  receiveInstance(result[\"instance\"]);\n }\n if (Module[\"instantiateWasm\"]) {\n  try {\n   return Module[\"instantiateWasm\"](info, receiveInstance);\n  } catch (e) {\n   err(`Module.instantiateWasm callback failed with error: ${e}`);\n   readyPromiseReject(e);\n  }\n }\n instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n return {};\n}\n\nvar tempDouble;\n\nvar tempI64;\n\n/** @constructor */ function ExitStatus(status) {\n this.name = \"ExitStatus\";\n this.message = `Program terminated with exit(${status})`;\n this.status = status;\n}\n\nvar callRuntimeCallbacks = callbacks => {\n while (callbacks.length > 0) {\n  callbacks.shift()(Module);\n }\n};\n\n/**\n     * @param {number} ptr\n     * @param {string} type\n     */ function getValue(ptr, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  return HEAP8[ptr >>> 0];\n\n case \"i8\":\n  return HEAP8[ptr >>> 0];\n\n case \"i16\":\n  return HEAP16[((ptr) >>> 1) >>> 0];\n\n case \"i32\":\n  return HEAP32[((ptr) >>> 2) >>> 0];\n\n case \"i64\":\n  abort(\"to do getValue(i64) use WASM_BIGINT\");\n\n case \"float\":\n  return HEAPF32[((ptr) >>> 2) >>> 0];\n\n case \"double\":\n  return HEAPF64[((ptr) >>> 3) >>> 0];\n\n case \"*\":\n  return HEAPU32[((ptr) >>> 2) >>> 0];\n\n default:\n  abort(`invalid type for getValue: ${type}`);\n }\n}\n\nvar noExitRuntime = Module[\"noExitRuntime\"] || true;\n\n/**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */ function setValue(ptr, value, type = \"i8\") {\n if (type.endsWith(\"*\")) type = \"*\";\n switch (type) {\n case \"i1\":\n  HEAP8[ptr >>> 0] = value;\n  break;\n\n case \"i8\":\n  HEAP8[ptr >>> 0] = value;\n  break;\n\n case \"i16\":\n  HEAP16[((ptr) >>> 1) >>> 0] = value;\n  break;\n\n case \"i32\":\n  HEAP32[((ptr) >>> 2) >>> 0] = value;\n  break;\n\n case \"i64\":\n  abort(\"to do setValue(i64) use WASM_BIGINT\");\n\n case \"float\":\n  HEAPF32[((ptr) >>> 2) >>> 0] = value;\n  break;\n\n case \"double\":\n  HEAPF64[((ptr) >>> 3) >>> 0] = value;\n  break;\n\n case \"*\":\n  HEAPU32[((ptr) >>> 2) >>> 0] = value;\n  break;\n\n default:\n  abort(`invalid type for setValue: ${type}`);\n }\n}\n\nvar exceptionCaught = [];\n\nvar exceptionLast = 0;\n\nvar uncaughtExceptionCount = 0;\n\nvar ___cxa_rethrow = () => {\n var info = exceptionCaught.pop();\n if (!info) {\n  abort(\"no exception to throw\");\n }\n var ptr = info.excPtr;\n if (!info.get_rethrown()) {\n  exceptionCaught.push(info);\n  info.set_rethrown(true);\n  info.set_caught(false);\n  uncaughtExceptionCount++;\n }\n exceptionLast = ptr;\n throw exceptionLast;\n};\n\nclass ExceptionInfo {\n constructor(excPtr) {\n  this.excPtr = excPtr;\n  this.ptr = excPtr - 24;\n }\n set_type(type) {\n  HEAPU32[(((this.ptr) + (4)) >>> 2) >>> 0] = type;\n }\n get_type() {\n  return HEAPU32[(((this.ptr) + (4)) >>> 2) >>> 0];\n }\n set_destructor(destructor) {\n  HEAPU32[(((this.ptr) + (8)) >>> 2) >>> 0] = destructor;\n }\n get_destructor() {\n  return HEAPU32[(((this.ptr) + (8)) >>> 2) >>> 0];\n }\n set_caught(caught) {\n  caught = caught ? 1 : 0;\n  HEAP8[(this.ptr) + (12) >>> 0] = caught;\n }\n get_caught() {\n  return HEAP8[(this.ptr) + (12) >>> 0] != 0;\n }\n set_rethrown(rethrown) {\n  rethrown = rethrown ? 1 : 0;\n  HEAP8[(this.ptr) + (13) >>> 0] = rethrown;\n }\n get_rethrown() {\n  return HEAP8[(this.ptr) + (13) >>> 0] != 0;\n }\n init(type, destructor) {\n  this.set_adjusted_ptr(0);\n  this.set_type(type);\n  this.set_destructor(destructor);\n }\n set_adjusted_ptr(adjustedPtr) {\n  HEAPU32[(((this.ptr) + (16)) >>> 2) >>> 0] = adjustedPtr;\n }\n get_adjusted_ptr() {\n  return HEAPU32[(((this.ptr) + (16)) >>> 2) >>> 0];\n }\n get_exception_ptr() {\n  var isPointer = ___cxa_is_pointer_type(this.get_type());\n  if (isPointer) {\n   return HEAPU32[((this.excPtr) >>> 2) >>> 0];\n  }\n  var adjusted = this.get_adjusted_ptr();\n  if (adjusted !== 0) return adjusted;\n  return this.excPtr;\n }\n}\n\nvar convertI32PairToI53Checked = (lo, hi) => ((hi + 2097152) >>> 0 < 4194305 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\n\nfunction ___cxa_throw(ptr, type, destructor) {\n ptr >>>= 0;\n type >>>= 0;\n destructor >>>= 0;\n var info = new ExceptionInfo(ptr);\n info.init(type, destructor);\n exceptionLast = ptr;\n uncaughtExceptionCount++;\n throw exceptionLast;\n}\n\nvar ___syscall_dup3 = (fd, newfd, flags) => {};\n\nfunction ___syscall_faccessat(dirfd, path, amode, flags) {\n path >>>= 0;\n}\n\nvar UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\n/**\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n     * array that contains uint8 values, returns a copy of that string as a\n     * Javascript String object.\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\n     * @param {number} idx\n     * @param {number=} maxBytesToRead\n     * @return {string}\n     */ var UTF8ArrayToString = (heapOrArray, idx, maxBytesToRead) => {\n idx >>>= 0;\n var endIdx = idx + maxBytesToRead;\n var endPtr = idx;\n while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n  return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n }\n var str = \"\";\n while (idx < endPtr) {\n  var u0 = heapOrArray[idx++];\n  if (!(u0 & 128)) {\n   str += String.fromCharCode(u0);\n   continue;\n  }\n  var u1 = heapOrArray[idx++] & 63;\n  if ((u0 & 224) == 192) {\n   str += String.fromCharCode(((u0 & 31) << 6) | u1);\n   continue;\n  }\n  var u2 = heapOrArray[idx++] & 63;\n  if ((u0 & 240) == 224) {\n   u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n  } else {\n   u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n  }\n  if (u0 < 65536) {\n   str += String.fromCharCode(u0);\n  } else {\n   var ch = u0 - 65536;\n   str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n  }\n }\n return str;\n};\n\n/**\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\n     *\n     * @param {number} ptr\n     * @param {number=} maxBytesToRead - An optional length that specifies the\n     *   maximum number of bytes to read. You can omit this parameter to scan the\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\n     * @return {string}\n     */ var UTF8ToString = (ptr, maxBytesToRead) => {\n ptr >>>= 0;\n return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n};\n\nvar SYSCALLS = {\n varargs: undefined,\n get() {\n  var ret = HEAP32[((+SYSCALLS.varargs) >>> 2) >>> 0];\n  SYSCALLS.varargs += 4;\n  return ret;\n },\n getp() {\n  return SYSCALLS.get();\n },\n getStr(ptr) {\n  var ret = UTF8ToString(ptr);\n  return ret;\n }\n};\n\nfunction ___syscall_fcntl64(fd, cmd, varargs) {\n varargs >>>= 0;\n SYSCALLS.varargs = varargs;\n return 0;\n}\n\nfunction ___syscall_fstat64(fd, buf) {\n buf >>>= 0;\n}\n\nfunction ___syscall_ftruncate64(fd, length_low, length_high) {\n var length = convertI32PairToI53Checked(length_low, length_high);\n}\n\nfunction ___syscall_ioctl(fd, op, varargs) {\n varargs >>>= 0;\n SYSCALLS.varargs = varargs;\n return 0;\n}\n\nfunction ___syscall_lstat64(path, buf) {\n path >>>= 0;\n buf >>>= 0;\n}\n\nfunction ___syscall_newfstatat(dirfd, path, buf, flags) {\n path >>>= 0;\n buf >>>= 0;\n}\n\nfunction ___syscall_openat(dirfd, path, flags, varargs) {\n path >>>= 0;\n varargs >>>= 0;\n SYSCALLS.varargs = varargs;\n}\n\nfunction ___syscall_stat64(path, buf) {\n path >>>= 0;\n buf >>>= 0;\n}\n\nfunction ___syscall_unlinkat(dirfd, path, flags) {\n path >>>= 0;\n}\n\nfunction __embind_register_bigint(primitiveType, name, size, minRange, maxRange) {\n primitiveType >>>= 0;\n name >>>= 0;\n size >>>= 0;\n}\n\nvar embind_init_charCodes = () => {\n var codes = new Array(256);\n for (var i = 0; i < 256; ++i) {\n  codes[i] = String.fromCharCode(i);\n }\n embind_charCodes = codes;\n};\n\nvar embind_charCodes;\n\nvar readLatin1String = ptr => {\n var ret = \"\";\n var c = ptr;\n while (HEAPU8[c >>> 0]) {\n  ret += embind_charCodes[HEAPU8[c++ >>> 0]];\n }\n return ret;\n};\n\nvar awaitingDependencies = {};\n\nvar registeredTypes = {};\n\nvar typeDependencies = {};\n\nvar BindingError;\n\nvar throwBindingError = message => {\n throw new BindingError(message);\n};\n\nvar InternalError;\n\nvar throwInternalError = message => {\n throw new InternalError(message);\n};\n\nvar whenDependentTypesAreResolved = (myTypes, dependentTypes, getTypeConverters) => {\n myTypes.forEach(function(type) {\n  typeDependencies[type] = dependentTypes;\n });\n function onComplete(typeConverters) {\n  var myTypeConverters = getTypeConverters(typeConverters);\n  if (myTypeConverters.length !== myTypes.length) {\n   throwInternalError(\"Mismatched type converter count\");\n  }\n  for (var i = 0; i < myTypes.length; ++i) {\n   registerType(myTypes[i], myTypeConverters[i]);\n  }\n }\n var typeConverters = new Array(dependentTypes.length);\n var unregisteredTypes = [];\n var registered = 0;\n dependentTypes.forEach((dt, i) => {\n  if (registeredTypes.hasOwnProperty(dt)) {\n   typeConverters[i] = registeredTypes[dt];\n  } else {\n   unregisteredTypes.push(dt);\n   if (!awaitingDependencies.hasOwnProperty(dt)) {\n    awaitingDependencies[dt] = [];\n   }\n   awaitingDependencies[dt].push(() => {\n    typeConverters[i] = registeredTypes[dt];\n    ++registered;\n    if (registered === unregisteredTypes.length) {\n     onComplete(typeConverters);\n    }\n   });\n  }\n });\n if (0 === unregisteredTypes.length) {\n  onComplete(typeConverters);\n }\n};\n\n/** @param {Object=} options */ function sharedRegisterType(rawType, registeredInstance, options = {}) {\n var name = registeredInstance.name;\n if (!rawType) {\n  throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`);\n }\n if (registeredTypes.hasOwnProperty(rawType)) {\n  if (options.ignoreDuplicateRegistrations) {\n   return;\n  } else {\n   throwBindingError(`Cannot register type '${name}' twice`);\n  }\n }\n registeredTypes[rawType] = registeredInstance;\n delete typeDependencies[rawType];\n if (awaitingDependencies.hasOwnProperty(rawType)) {\n  var callbacks = awaitingDependencies[rawType];\n  delete awaitingDependencies[rawType];\n  callbacks.forEach(cb => cb());\n }\n}\n\n/** @param {Object=} options */ function registerType(rawType, registeredInstance, options = {}) {\n if (!(\"argPackAdvance\" in registeredInstance)) {\n  throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n }\n return sharedRegisterType(rawType, registeredInstance, options);\n}\n\nvar GenericWireTypeSize = 8;\n\n/** @suppress {globalThis} */ function __embind_register_bool(rawType, name, trueValue, falseValue) {\n rawType >>>= 0;\n name >>>= 0;\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(wt) {\n   return !!wt;\n  },\n  \"toWireType\": function(destructors, o) {\n   return o ? trueValue : falseValue;\n  },\n  \"argPackAdvance\": GenericWireTypeSize,\n  \"readValueFromPointer\": function(pointer) {\n   return this[\"fromWireType\"](HEAPU8[pointer >>> 0]);\n  },\n  destructorFunction: null\n });\n}\n\nvar shallowCopyInternalPointer = o => ({\n count: o.count,\n deleteScheduled: o.deleteScheduled,\n preservePointerOnDelete: o.preservePointerOnDelete,\n ptr: o.ptr,\n ptrType: o.ptrType,\n smartPtr: o.smartPtr,\n smartPtrType: o.smartPtrType\n});\n\nvar throwInstanceAlreadyDeleted = obj => {\n function getInstanceTypeName(handle) {\n  return handle.$$.ptrType.registeredClass.name;\n }\n throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n};\n\nvar finalizationRegistry = false;\n\nvar detachFinalizer = handle => {};\n\nvar runDestructor = $$ => {\n if ($$.smartPtr) {\n  $$.smartPtrType.rawDestructor($$.smartPtr);\n } else {\n  $$.ptrType.registeredClass.rawDestructor($$.ptr);\n }\n};\n\nvar releaseClassHandle = $$ => {\n $$.count.value -= 1;\n var toDelete = 0 === $$.count.value;\n if (toDelete) {\n  runDestructor($$);\n }\n};\n\nvar downcastPointer = (ptr, ptrClass, desiredClass) => {\n if (ptrClass === desiredClass) {\n  return ptr;\n }\n if (undefined === desiredClass.baseClass) {\n  return null;\n }\n var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n if (rv === null) {\n  return null;\n }\n return desiredClass.downcast(rv);\n};\n\nvar registeredPointers = {};\n\nvar getInheritedInstanceCount = () => Object.keys(registeredInstances).length;\n\nvar getLiveInheritedInstances = () => {\n var rv = [];\n for (var k in registeredInstances) {\n  if (registeredInstances.hasOwnProperty(k)) {\n   rv.push(registeredInstances[k]);\n  }\n }\n return rv;\n};\n\nvar deletionQueue = [];\n\nvar flushPendingDeletes = () => {\n while (deletionQueue.length) {\n  var obj = deletionQueue.pop();\n  obj.$$.deleteScheduled = false;\n  obj[\"delete\"]();\n }\n};\n\nvar delayFunction;\n\nvar setDelayFunction = fn => {\n delayFunction = fn;\n if (deletionQueue.length && delayFunction) {\n  delayFunction(flushPendingDeletes);\n }\n};\n\nvar init_embind = () => {\n Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n Module[\"setDelayFunction\"] = setDelayFunction;\n};\n\nvar registeredInstances = {};\n\nvar getBasestPointer = (class_, ptr) => {\n if (ptr === undefined) {\n  throwBindingError(\"ptr should not be undefined\");\n }\n while (class_.baseClass) {\n  ptr = class_.upcast(ptr);\n  class_ = class_.baseClass;\n }\n return ptr;\n};\n\nvar getInheritedInstance = (class_, ptr) => {\n ptr = getBasestPointer(class_, ptr);\n return registeredInstances[ptr];\n};\n\nvar makeClassHandle = (prototype, record) => {\n if (!record.ptrType || !record.ptr) {\n  throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n }\n var hasSmartPtrType = !!record.smartPtrType;\n var hasSmartPtr = !!record.smartPtr;\n if (hasSmartPtrType !== hasSmartPtr) {\n  throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n }\n record.count = {\n  value: 1\n };\n return attachFinalizer(Object.create(prototype, {\n  $$: {\n   value: record,\n   writable: true\n  }\n }));\n};\n\n/** @suppress {globalThis} */ function RegisteredPointer_fromWireType(ptr) {\n var rawPointer = this.getPointee(ptr);\n if (!rawPointer) {\n  this.destructor(ptr);\n  return null;\n }\n var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n if (undefined !== registeredInstance) {\n  if (0 === registeredInstance.$$.count.value) {\n   registeredInstance.$$.ptr = rawPointer;\n   registeredInstance.$$.smartPtr = ptr;\n   return registeredInstance[\"clone\"]();\n  } else {\n   var rv = registeredInstance[\"clone\"]();\n   this.destructor(ptr);\n   return rv;\n  }\n }\n function makeDefaultHandle() {\n  if (this.isSmartPointer) {\n   return makeClassHandle(this.registeredClass.instancePrototype, {\n    ptrType: this.pointeeType,\n    ptr: rawPointer,\n    smartPtrType: this,\n    smartPtr: ptr\n   });\n  } else {\n   return makeClassHandle(this.registeredClass.instancePrototype, {\n    ptrType: this,\n    ptr: ptr\n   });\n  }\n }\n var actualType = this.registeredClass.getActualType(rawPointer);\n var registeredPointerRecord = registeredPointers[actualType];\n if (!registeredPointerRecord) {\n  return makeDefaultHandle.call(this);\n }\n var toType;\n if (this.isConst) {\n  toType = registeredPointerRecord.constPointerType;\n } else {\n  toType = registeredPointerRecord.pointerType;\n }\n var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n if (dp === null) {\n  return makeDefaultHandle.call(this);\n }\n if (this.isSmartPointer) {\n  return makeClassHandle(toType.registeredClass.instancePrototype, {\n   ptrType: toType,\n   ptr: dp,\n   smartPtrType: this,\n   smartPtr: ptr\n  });\n } else {\n  return makeClassHandle(toType.registeredClass.instancePrototype, {\n   ptrType: toType,\n   ptr: dp\n  });\n }\n}\n\nvar attachFinalizer = handle => {\n if (\"undefined\" === typeof FinalizationRegistry) {\n  attachFinalizer = handle => handle;\n  return handle;\n }\n finalizationRegistry = new FinalizationRegistry(info => {\n  releaseClassHandle(info.$$);\n });\n attachFinalizer = handle => {\n  var $$ = handle.$$;\n  var hasSmartPtr = !!$$.smartPtr;\n  if (hasSmartPtr) {\n   var info = {\n    $$: $$\n   };\n   finalizationRegistry.register(handle, info, handle);\n  }\n  return handle;\n };\n detachFinalizer = handle => finalizationRegistry.unregister(handle);\n return attachFinalizer(handle);\n};\n\nvar init_ClassHandle = () => {\n Object.assign(ClassHandle.prototype, {\n  \"isAliasOf\"(other) {\n   if (!(this instanceof ClassHandle)) {\n    return false;\n   }\n   if (!(other instanceof ClassHandle)) {\n    return false;\n   }\n   var leftClass = this.$$.ptrType.registeredClass;\n   var left = this.$$.ptr;\n   other.$$ = /** @type {Object} */ (other.$$);\n   var rightClass = other.$$.ptrType.registeredClass;\n   var right = other.$$.ptr;\n   while (leftClass.baseClass) {\n    left = leftClass.upcast(left);\n    leftClass = leftClass.baseClass;\n   }\n   while (rightClass.baseClass) {\n    right = rightClass.upcast(right);\n    rightClass = rightClass.baseClass;\n   }\n   return leftClass === rightClass && left === right;\n  },\n  \"clone\"() {\n   if (!this.$$.ptr) {\n    throwInstanceAlreadyDeleted(this);\n   }\n   if (this.$$.preservePointerOnDelete) {\n    this.$$.count.value += 1;\n    return this;\n   } else {\n    var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), {\n     $$: {\n      value: shallowCopyInternalPointer(this.$$)\n     }\n    }));\n    clone.$$.count.value += 1;\n    clone.$$.deleteScheduled = false;\n    return clone;\n   }\n  },\n  \"delete\"() {\n   if (!this.$$.ptr) {\n    throwInstanceAlreadyDeleted(this);\n   }\n   if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n    throwBindingError(\"Object already scheduled for deletion\");\n   }\n   detachFinalizer(this);\n   releaseClassHandle(this.$$);\n   if (!this.$$.preservePointerOnDelete) {\n    this.$$.smartPtr = undefined;\n    this.$$.ptr = undefined;\n   }\n  },\n  \"isDeleted\"() {\n   return !this.$$.ptr;\n  },\n  \"deleteLater\"() {\n   if (!this.$$.ptr) {\n    throwInstanceAlreadyDeleted(this);\n   }\n   if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n    throwBindingError(\"Object already scheduled for deletion\");\n   }\n   deletionQueue.push(this);\n   if (deletionQueue.length === 1 && delayFunction) {\n    delayFunction(flushPendingDeletes);\n   }\n   this.$$.deleteScheduled = true;\n   return this;\n  }\n });\n};\n\n/** @constructor */ function ClassHandle() {}\n\nvar createNamedFunction = (name, body) => Object.defineProperty(body, \"name\", {\n value: name\n});\n\nvar ensureOverloadTable = (proto, methodName, humanName) => {\n if (undefined === proto[methodName].overloadTable) {\n  var prevFunc = proto[methodName];\n  proto[methodName] = function(...args) {\n   if (!proto[methodName].overloadTable.hasOwnProperty(args.length)) {\n    throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${args.length}) - expects one of (${proto[methodName].overloadTable})!`);\n   }\n   return proto[methodName].overloadTable[args.length].apply(this, args);\n  };\n  proto[methodName].overloadTable = [];\n  proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n }\n};\n\n/** @param {number=} numArguments */ var exposePublicSymbol = (name, value, numArguments) => {\n if (Module.hasOwnProperty(name)) {\n  if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {\n   throwBindingError(`Cannot register public name '${name}' twice`);\n  }\n  ensureOverloadTable(Module, name, name);\n  if (Module.hasOwnProperty(numArguments)) {\n   throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`);\n  }\n  Module[name].overloadTable[numArguments] = value;\n } else {\n  Module[name] = value;\n  if (undefined !== numArguments) {\n   Module[name].numArguments = numArguments;\n  }\n }\n};\n\nvar char_0 = 48;\n\nvar char_9 = 57;\n\nvar makeLegalFunctionName = name => {\n if (undefined === name) {\n  return \"_unknown\";\n }\n name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n var f = name.charCodeAt(0);\n if (f >= char_0 && f <= char_9) {\n  return `_${name}`;\n }\n return name;\n};\n\n/** @constructor */ function RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n this.name = name;\n this.constructor = constructor;\n this.instancePrototype = instancePrototype;\n this.rawDestructor = rawDestructor;\n this.baseClass = baseClass;\n this.getActualType = getActualType;\n this.upcast = upcast;\n this.downcast = downcast;\n this.pureVirtualFunctions = [];\n}\n\nvar upcastPointer = (ptr, ptrClass, desiredClass) => {\n while (ptrClass !== desiredClass) {\n  if (!ptrClass.upcast) {\n   throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`);\n  }\n  ptr = ptrClass.upcast(ptr);\n  ptrClass = ptrClass.baseClass;\n }\n return ptr;\n};\n\n/** @suppress {globalThis} */ function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(`null is not a valid ${this.name}`);\n  }\n  return 0;\n }\n if (!handle.$$) {\n  throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n return ptr;\n}\n\n/** @suppress {globalThis} */ function genericPointerToWireType(destructors, handle) {\n var ptr;\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(`null is not a valid ${this.name}`);\n  }\n  if (this.isSmartPointer) {\n   ptr = this.rawConstructor();\n   if (destructors !== null) {\n    destructors.push(this.rawDestructor, ptr);\n   }\n   return ptr;\n  } else {\n   return 0;\n  }\n }\n if (!handle || !handle.$$) {\n  throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n }\n if (!this.isConst && handle.$$.ptrType.isConst) {\n  throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name)} to parameter type ${this.name}`);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n if (this.isSmartPointer) {\n  if (undefined === handle.$$.smartPtr) {\n   throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n  }\n  switch (this.sharingPolicy) {\n  case 0:\n   if (handle.$$.smartPtrType === this) {\n    ptr = handle.$$.smartPtr;\n   } else {\n    throwBindingError(`Cannot convert argument of type ${(handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name)} to parameter type ${this.name}`);\n   }\n   break;\n\n  case 1:\n   ptr = handle.$$.smartPtr;\n   break;\n\n  case 2:\n   if (handle.$$.smartPtrType === this) {\n    ptr = handle.$$.smartPtr;\n   } else {\n    var clonedHandle = handle[\"clone\"]();\n    ptr = this.rawShare(ptr, Emval.toHandle(() => clonedHandle[\"delete\"]()));\n    if (destructors !== null) {\n     destructors.push(this.rawDestructor, ptr);\n    }\n   }\n   break;\n\n  default:\n   throwBindingError(\"Unsupporting sharing policy\");\n  }\n }\n return ptr;\n}\n\n/** @suppress {globalThis} */ function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n if (handle === null) {\n  if (this.isReference) {\n   throwBindingError(`null is not a valid ${this.name}`);\n  }\n  return 0;\n }\n if (!handle.$$) {\n  throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`);\n }\n if (!handle.$$.ptr) {\n  throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`);\n }\n if (handle.$$.ptrType.isConst) {\n  throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`);\n }\n var handleClass = handle.$$.ptrType.registeredClass;\n var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n return ptr;\n}\n\n/** @suppress {globalThis} */ function readPointer(pointer) {\n return this[\"fromWireType\"](HEAPU32[((pointer) >>> 2) >>> 0]);\n}\n\nvar init_RegisteredPointer = () => {\n Object.assign(RegisteredPointer.prototype, {\n  getPointee(ptr) {\n   if (this.rawGetPointee) {\n    ptr = this.rawGetPointee(ptr);\n   }\n   return ptr;\n  },\n  destructor(ptr) {\n   this.rawDestructor?.(ptr);\n  },\n  \"argPackAdvance\": GenericWireTypeSize,\n  \"readValueFromPointer\": readPointer,\n  \"fromWireType\": RegisteredPointer_fromWireType\n });\n};\n\n/** @constructor\n      @param {*=} pointeeType,\n      @param {*=} sharingPolicy,\n      @param {*=} rawGetPointee,\n      @param {*=} rawConstructor,\n      @param {*=} rawShare,\n      @param {*=} rawDestructor,\n       */ function RegisteredPointer(name, registeredClass, isReference, isConst,  isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n this.name = name;\n this.registeredClass = registeredClass;\n this.isReference = isReference;\n this.isConst = isConst;\n this.isSmartPointer = isSmartPointer;\n this.pointeeType = pointeeType;\n this.sharingPolicy = sharingPolicy;\n this.rawGetPointee = rawGetPointee;\n this.rawConstructor = rawConstructor;\n this.rawShare = rawShare;\n this.rawDestructor = rawDestructor;\n if (!isSmartPointer && registeredClass.baseClass === undefined) {\n  if (isConst) {\n   this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n   this.destructorFunction = null;\n  } else {\n   this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n   this.destructorFunction = null;\n  }\n } else {\n  this[\"toWireType\"] = genericPointerToWireType;\n }\n}\n\n/** @param {number=} numArguments */ var replacePublicSymbol = (name, value, numArguments) => {\n if (!Module.hasOwnProperty(name)) {\n  throwInternalError(\"Replacing nonexistent public symbol\");\n }\n if (undefined !== Module[name].overloadTable && undefined !== numArguments) {\n  Module[name].overloadTable[numArguments] = value;\n } else {\n  Module[name] = value;\n  Module[name].argCount = numArguments;\n }\n};\n\nvar dynCallLegacy = (sig, ptr, args) => {\n var f = Module[\"dynCall_\" + sig];\n return f(ptr, ...args);\n};\n\nvar wasmTableMirror = [];\n\nvar wasmTable;\n\nvar getWasmTableEntry = funcPtr => {\n var func = wasmTableMirror[funcPtr];\n if (!func) {\n  if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n  wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n }\n return func;\n};\n\nvar dynCall = (sig, ptr, args = []) => {\n if (sig.includes(\"j\")) {\n  return dynCallLegacy(sig, ptr, args);\n }\n var rtn = getWasmTableEntry(ptr)(...args);\n return rtn;\n};\n\nvar getDynCaller = (sig, ptr) => (...args) => dynCall(sig, ptr, args);\n\nvar embind__requireFunction = (signature, rawFunction) => {\n signature = readLatin1String(signature);\n function makeDynCaller() {\n  if (signature.includes(\"j\")) {\n   return getDynCaller(signature, rawFunction);\n  }\n  return getWasmTableEntry(rawFunction);\n }\n var fp = makeDynCaller();\n if (typeof fp != \"function\") {\n  throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`);\n }\n return fp;\n};\n\nvar extendError = (baseErrorType, errorName) => {\n var errorClass = createNamedFunction(errorName, function(message) {\n  this.name = errorName;\n  this.message = message;\n  var stack = (new Error(message)).stack;\n  if (stack !== undefined) {\n   this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n  }\n });\n errorClass.prototype = Object.create(baseErrorType.prototype);\n errorClass.prototype.constructor = errorClass;\n errorClass.prototype.toString = function() {\n  if (this.message === undefined) {\n   return this.name;\n  } else {\n   return `${this.name}: ${this.message}`;\n  }\n };\n return errorClass;\n};\n\nvar UnboundTypeError;\n\nvar getTypeName = type => {\n var ptr = ___getTypeName(type);\n var rv = readLatin1String(ptr);\n _free(ptr);\n return rv;\n};\n\nvar throwUnboundTypeError = (message, types) => {\n var unboundTypes = [];\n var seen = {};\n function visit(type) {\n  if (seen[type]) {\n   return;\n  }\n  if (registeredTypes[type]) {\n   return;\n  }\n  if (typeDependencies[type]) {\n   typeDependencies[type].forEach(visit);\n   return;\n  }\n  unboundTypes.push(type);\n  seen[type] = true;\n }\n types.forEach(visit);\n throw new UnboundTypeError(`${message}: ` + unboundTypes.map(getTypeName).join([ \", \" ]));\n};\n\nfunction __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {\n rawType >>>= 0;\n rawPointerType >>>= 0;\n rawConstPointerType >>>= 0;\n baseClassRawType >>>= 0;\n getActualTypeSignature >>>= 0;\n getActualType >>>= 0;\n upcastSignature >>>= 0;\n upcast >>>= 0;\n downcastSignature >>>= 0;\n downcast >>>= 0;\n name >>>= 0;\n destructorSignature >>>= 0;\n rawDestructor >>>= 0;\n name = readLatin1String(name);\n getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n upcast &&= embind__requireFunction(upcastSignature, upcast);\n downcast &&= embind__requireFunction(downcastSignature, downcast);\n rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n var legalFunctionName = makeLegalFunctionName(name);\n exposePublicSymbol(legalFunctionName, function() {\n  throwUnboundTypeError(`Cannot construct ${name} due to unbound types`, [ baseClassRawType ]);\n });\n whenDependentTypesAreResolved([ rawType, rawPointerType, rawConstPointerType ], baseClassRawType ? [ baseClassRawType ] : [], base => {\n  base = base[0];\n  var baseClass;\n  var basePrototype;\n  if (baseClassRawType) {\n   baseClass = base.registeredClass;\n   basePrototype = baseClass.instancePrototype;\n  } else {\n   basePrototype = ClassHandle.prototype;\n  }\n  var constructor = createNamedFunction(name, function(...args) {\n   if (Object.getPrototypeOf(this) !== instancePrototype) {\n    throw new BindingError(\"Use 'new' to construct \" + name);\n   }\n   if (undefined === registeredClass.constructor_body) {\n    throw new BindingError(name + \" has no accessible constructor\");\n   }\n   var body = registeredClass.constructor_body[args.length];\n   if (undefined === body) {\n    throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${args.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`);\n   }\n   return body.apply(this, args);\n  });\n  var instancePrototype = Object.create(basePrototype, {\n   constructor: {\n    value: constructor\n   }\n  });\n  constructor.prototype = instancePrototype;\n  var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n  if (registeredClass.baseClass) {\n   registeredClass.baseClass.__derivedClasses ??= [];\n   registeredClass.baseClass.__derivedClasses.push(registeredClass);\n  }\n  var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);\n  var pointerConverter = new RegisteredPointer(name + \"*\", registeredClass, false, false, false);\n  var constPointerConverter = new RegisteredPointer(name + \" const*\", registeredClass, false, true, false);\n  registeredPointers[rawType] = {\n   pointerType: pointerConverter,\n   constPointerType: constPointerConverter\n  };\n  replacePublicSymbol(legalFunctionName, constructor);\n  return [ referenceConverter, pointerConverter, constPointerConverter ];\n });\n}\n\nvar heap32VectorToArray = (count, firstElement) => {\n var array = [];\n for (var i = 0; i < count; i++) {\n  array.push(HEAPU32[(((firstElement) + (i * 4)) >>> 2) >>> 0]);\n }\n return array;\n};\n\nvar runDestructors = destructors => {\n while (destructors.length) {\n  var ptr = destructors.pop();\n  var del = destructors.pop();\n  del(ptr);\n }\n};\n\nfunction usesDestructorStack(argTypes) {\n for (var i = 1; i < argTypes.length; ++i) {\n  if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {\n   return true;\n  }\n }\n return false;\n}\n\nfunction newFunc(constructor, argumentList) {\n if (!(constructor instanceof Function)) {\n  throw new TypeError(`new_ called with constructor type ${typeof (constructor)} which is not a function`);\n }\n /*\n       * Previously, the following line was just:\n       *   function dummy() {};\n       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even\n       * though at creation, the 'dummy' has the correct constructor name.  Thus,\n       * objects created with IMVU.new would show up in the debugger as 'dummy',\n       * which isn't very helpful.  Using IMVU.createNamedFunction addresses the\n       * issue.  Doubly-unfortunately, there's no way to write a test for this\n       * behavior.  -NRD 2013.02.22\n       */ var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {});\n dummy.prototype = constructor.prototype;\n var obj = new dummy;\n var r = constructor.apply(obj, argumentList);\n return (r instanceof Object) ? r : obj;\n}\n\nfunction createJsInvoker(argTypes, isClassMethodFunc, returns, isAsync) {\n var needsDestructorStack = usesDestructorStack(argTypes);\n var argCount = argTypes.length;\n var argsList = \"\";\n var argsListWired = \"\";\n for (var i = 0; i < argCount - 2; ++i) {\n  argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n  argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n }\n var invokerFnBody = `\\n        return function (${argsList}) {\\n        if (arguments.length !== ${argCount - 2}) {\\n          throwBindingError('function ' + humanName + ' called with ' + arguments.length + ' arguments, expected ${argCount - 2}');\\n        }`;\n if (needsDestructorStack) {\n  invokerFnBody += \"var destructors = [];\\n\";\n }\n var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n var args1 = [ \"humanName\", \"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\" ];\n if (isClassMethodFunc) {\n  invokerFnBody += \"var thisWired = classParam['toWireType'](\" + dtorStack + \", this);\\n\";\n }\n for (var i = 0; i < argCount - 2; ++i) {\n  invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \"['toWireType'](\" + dtorStack + \", arg\" + i + \");\\n\";\n  args1.push(\"argType\" + i);\n }\n if (isClassMethodFunc) {\n  argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n }\n invokerFnBody += (returns || isAsync ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n var returnVal = returns ? \"rv\" : \"\";\n if (needsDestructorStack) {\n  invokerFnBody += \"runDestructors(destructors);\\n\";\n } else {\n  for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n   var paramName = (i === 1 ? \"thisWired\" : (\"arg\" + (i - 2) + \"Wired\"));\n   if (argTypes[i].destructorFunction !== null) {\n    invokerFnBody += `${paramName}_dtor(${paramName});\\n`;\n    args1.push(`${paramName}_dtor`);\n   }\n  }\n }\n if (returns) {\n  invokerFnBody += \"var ret = retType['fromWireType'](rv);\\n\" + \"return ret;\\n\";\n } else {}\n invokerFnBody += \"}\\n\";\n return [ args1, invokerFnBody ];\n}\n\nfunction craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc, /** boolean= */ isAsync) {\n var argCount = argTypes.length;\n if (argCount < 2) {\n  throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n }\n var isClassMethodFunc = (argTypes[1] !== null && classType !== null);\n var needsDestructorStack = usesDestructorStack(argTypes);\n var returns = (argTypes[0].name !== \"void\");\n var closureArgs = [ humanName, throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1] ];\n for (var i = 0; i < argCount - 2; ++i) {\n  closureArgs.push(argTypes[i + 2]);\n }\n if (!needsDestructorStack) {\n  for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n   if (argTypes[i].destructorFunction !== null) {\n    closureArgs.push(argTypes[i].destructorFunction);\n   }\n  }\n }\n let [args, invokerFnBody] = createJsInvoker(argTypes, isClassMethodFunc, returns, isAsync);\n args.push(invokerFnBody);\n var invokerFn = newFunc(Function, args)(...closureArgs);\n return createNamedFunction(humanName, invokerFn);\n}\n\nvar __embind_register_class_constructor = function(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n rawClassType >>>= 0;\n rawArgTypesAddr >>>= 0;\n invokerSignature >>>= 0;\n invoker >>>= 0;\n rawConstructor >>>= 0;\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n invoker = embind__requireFunction(invokerSignature, invoker);\n var args = [ rawConstructor ];\n var destructors = [];\n whenDependentTypesAreResolved([], [ rawClassType ], classType => {\n  classType = classType[0];\n  var humanName = `constructor ${classType.name}`;\n  if (undefined === classType.registeredClass.constructor_body) {\n   classType.registeredClass.constructor_body = [];\n  }\n  if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {\n   throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount - 1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);\n  }\n  classType.registeredClass.constructor_body[argCount - 1] = () => {\n   throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`, rawArgTypes);\n  };\n  whenDependentTypesAreResolved([], rawArgTypes, argTypes => {\n   argTypes.splice(1, 0, null);\n   classType.registeredClass.constructor_body[argCount - 1] = craftInvokerFunction(humanName, argTypes, null, invoker, rawConstructor);\n   return [];\n  });\n  return [];\n });\n};\n\nvar getFunctionName = signature => {\n signature = signature.trim();\n const argsIndex = signature.indexOf(\"(\");\n if (argsIndex !== -1) {\n  return signature.substr(0, argsIndex);\n } else {\n  return signature;\n }\n};\n\nvar __embind_register_class_function = function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual, isAsync) {\n rawClassType >>>= 0;\n methodName >>>= 0;\n rawArgTypesAddr >>>= 0;\n invokerSignature >>>= 0;\n rawInvoker >>>= 0;\n context >>>= 0;\n var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n methodName = readLatin1String(methodName);\n methodName = getFunctionName(methodName);\n rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n whenDependentTypesAreResolved([], [ rawClassType ], classType => {\n  classType = classType[0];\n  var humanName = `${classType.name}.${methodName}`;\n  if (methodName.startsWith(\"@@\")) {\n   methodName = Symbol[methodName.substring(2)];\n  }\n  if (isPureVirtual) {\n   classType.registeredClass.pureVirtualFunctions.push(methodName);\n  }\n  function unboundTypesHandler() {\n   throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`, rawArgTypes);\n  }\n  var proto = classType.registeredClass.instancePrototype;\n  var method = proto[methodName];\n  if (undefined === method || (undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2)) {\n   unboundTypesHandler.argCount = argCount - 2;\n   unboundTypesHandler.className = classType.name;\n   proto[methodName] = unboundTypesHandler;\n  } else {\n   ensureOverloadTable(proto, methodName, humanName);\n   proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n  }\n  whenDependentTypesAreResolved([], rawArgTypes, argTypes => {\n   var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context, isAsync);\n   if (undefined === proto[methodName].overloadTable) {\n    memberFunction.argCount = argCount - 2;\n    proto[methodName] = memberFunction;\n   } else {\n    proto[methodName].overloadTable[argCount - 2] = memberFunction;\n   }\n   return [];\n  });\n  return [];\n });\n};\n\nvar emval_freelist = [];\n\nvar emval_handles = [];\n\nfunction __emval_decref(handle) {\n handle >>>= 0;\n if (handle > 9 && 0 === --emval_handles[handle + 1]) {\n  emval_handles[handle] = undefined;\n  emval_freelist.push(handle);\n }\n}\n\nvar count_emval_handles = () => emval_handles.length / 2 - 5 - emval_freelist.length;\n\nvar init_emval = () => {\n emval_handles.push(0, 1, undefined, 1, null, 1, true, 1, false, 1);\n Module[\"count_emval_handles\"] = count_emval_handles;\n};\n\nvar Emval = {\n toValue: handle => {\n  if (!handle) {\n   throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n  }\n  return emval_handles[handle];\n },\n toHandle: value => {\n  switch (value) {\n  case undefined:\n   return 2;\n\n  case null:\n   return 4;\n\n  case true:\n   return 6;\n\n  case false:\n   return 8;\n\n  default:\n   {\n    const handle = emval_freelist.pop() || emval_handles.length;\n    emval_handles[handle] = value;\n    emval_handles[handle + 1] = 1;\n    return handle;\n   }\n  }\n }\n};\n\nvar EmValType = {\n name: \"emscripten::val\",\n \"fromWireType\": handle => {\n  var rv = Emval.toValue(handle);\n  __emval_decref(handle);\n  return rv;\n },\n \"toWireType\": (destructors, value) => Emval.toHandle(value),\n \"argPackAdvance\": GenericWireTypeSize,\n \"readValueFromPointer\": readPointer,\n destructorFunction: null\n};\n\nfunction __embind_register_emval(rawType) {\n rawType >>>= 0;\n return registerType(rawType, EmValType);\n}\n\nvar embindRepr = v => {\n if (v === null) {\n  return \"null\";\n }\n var t = typeof v;\n if (t === \"object\" || t === \"array\" || t === \"function\") {\n  return v.toString();\n } else {\n  return \"\" + v;\n }\n};\n\nvar floatReadValueFromPointer = (name, width) => {\n switch (width) {\n case 4:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF32[((pointer) >>> 2) >>> 0]);\n  };\n\n case 8:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF64[((pointer) >>> 3) >>> 0]);\n  };\n\n default:\n  throw new TypeError(`invalid float width (${width}): ${name}`);\n }\n};\n\nvar __embind_register_float = function(rawType, name, size) {\n rawType >>>= 0;\n name >>>= 0;\n size >>>= 0;\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": value => value,\n  \"toWireType\": (destructors, value) => value,\n  \"argPackAdvance\": GenericWireTypeSize,\n  \"readValueFromPointer\": floatReadValueFromPointer(name, size),\n  destructorFunction: null\n });\n};\n\nfunction __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn, isAsync) {\n name >>>= 0;\n rawArgTypesAddr >>>= 0;\n signature >>>= 0;\n rawInvoker >>>= 0;\n fn >>>= 0;\n var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n name = readLatin1String(name);\n name = getFunctionName(name);\n rawInvoker = embind__requireFunction(signature, rawInvoker);\n exposePublicSymbol(name, function() {\n  throwUnboundTypeError(`Cannot call ${name} due to unbound types`, argTypes);\n }, argCount - 1);\n whenDependentTypesAreResolved([], argTypes, argTypes => {\n  var invokerArgsArray = [ argTypes[0], /* return value */ null ].concat(/* no class 'this'*/ argTypes.slice(1));\n  /* actual params */ replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, /* no class 'this'*/ rawInvoker, fn, isAsync), argCount - 1);\n  return [];\n });\n}\n\nvar integerReadValueFromPointer = (name, width, signed) => {\n switch (width) {\n case 1:\n  return signed ? pointer => HEAP8[pointer >>> 0] : pointer => HEAPU8[pointer >>> 0];\n\n case 2:\n  return signed ? pointer => HEAP16[((pointer) >>> 1) >>> 0] : pointer => HEAPU16[((pointer) >>> 1) >>> 0];\n\n case 4:\n  return signed ? pointer => HEAP32[((pointer) >>> 2) >>> 0] : pointer => HEAPU32[((pointer) >>> 2) >>> 0];\n\n default:\n  throw new TypeError(`invalid integer width (${width}): ${name}`);\n }\n};\n\n/** @suppress {globalThis} */ function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n primitiveType >>>= 0;\n name >>>= 0;\n size >>>= 0;\n name = readLatin1String(name);\n if (maxRange === -1) {\n  maxRange = 4294967295;\n }\n var fromWireType = value => value;\n if (minRange === 0) {\n  var bitshift = 32 - 8 * size;\n  fromWireType = value => (value << bitshift) >>> bitshift;\n }\n var isUnsignedType = (name.includes(\"unsigned\"));\n var checkAssertions = (value, toTypeName) => {};\n var toWireType;\n if (isUnsignedType) {\n  toWireType = function(destructors, value) {\n   checkAssertions(value, this.name);\n   return value >>> 0;\n  };\n } else {\n  toWireType = function(destructors, value) {\n   checkAssertions(value, this.name);\n   return value;\n  };\n }\n registerType(primitiveType, {\n  name: name,\n  \"fromWireType\": fromWireType,\n  \"toWireType\": toWireType,\n  \"argPackAdvance\": GenericWireTypeSize,\n  \"readValueFromPointer\": integerReadValueFromPointer(name, size, minRange !== 0),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_memory_view(rawType, dataTypeIndex, name) {\n rawType >>>= 0;\n name >>>= 0;\n var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];\n var TA = typeMapping[dataTypeIndex];\n function decodeMemoryView(handle) {\n  var size = HEAPU32[((handle) >>> 2) >>> 0];\n  var data = HEAPU32[(((handle) + (4)) >>> 2) >>> 0];\n  return new TA(HEAP8.buffer, data, size);\n }\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": decodeMemoryView,\n  \"argPackAdvance\": GenericWireTypeSize,\n  \"readValueFromPointer\": decodeMemoryView\n }, {\n  ignoreDuplicateRegistrations: true\n });\n}\n\nvar stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n outIdx >>>= 0;\n if (!(maxBytesToWrite > 0)) return 0;\n var startIdx = outIdx;\n var endIdx = outIdx + maxBytesToWrite - 1;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) {\n   var u1 = str.charCodeAt(++i);\n   u = 65536 + ((u & 1023) << 10) | (u1 & 1023);\n  }\n  if (u <= 127) {\n   if (outIdx >= endIdx) break;\n   heap[outIdx++ >>> 0] = u;\n  } else if (u <= 2047) {\n   if (outIdx + 1 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 192 | (u >> 6);\n   heap[outIdx++ >>> 0] = 128 | (u & 63);\n  } else if (u <= 65535) {\n   if (outIdx + 2 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 224 | (u >> 12);\n   heap[outIdx++ >>> 0] = 128 | ((u >> 6) & 63);\n   heap[outIdx++ >>> 0] = 128 | (u & 63);\n  } else {\n   if (outIdx + 3 >= endIdx) break;\n   heap[outIdx++ >>> 0] = 240 | (u >> 18);\n   heap[outIdx++ >>> 0] = 128 | ((u >> 12) & 63);\n   heap[outIdx++ >>> 0] = 128 | ((u >> 6) & 63);\n   heap[outIdx++ >>> 0] = 128 | (u & 63);\n  }\n }\n heap[outIdx >>> 0] = 0;\n return outIdx - startIdx;\n};\n\nvar stringToUTF8 = (str, outPtr, maxBytesToWrite) => stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n\nvar lengthBytesUTF8 = str => {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var c = str.charCodeAt(i);\n  if (c <= 127) {\n   len++;\n  } else if (c <= 2047) {\n   len += 2;\n  } else if (c >= 55296 && c <= 57343) {\n   len += 4;\n   ++i;\n  } else {\n   len += 3;\n  }\n }\n return len;\n};\n\nfunction __embind_register_std_string(rawType, name) {\n rawType >>>= 0;\n name >>>= 0;\n name = readLatin1String(name);\n var stdStringIsUTF8 =  (name === \"std::string\");\n registerType(rawType, {\n  name: name,\n  \"fromWireType\"(value) {\n   var length = HEAPU32[((value) >>> 2) >>> 0];\n   var payload = value + 4;\n   var str;\n   if (stdStringIsUTF8) {\n    var decodeStartPtr = payload;\n    for (var i = 0; i <= length; ++i) {\n     var currentBytePtr = payload + i;\n     if (i == length || HEAPU8[currentBytePtr >>> 0] == 0) {\n      var maxRead = currentBytePtr - decodeStartPtr;\n      var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n      if (str === undefined) {\n       str = stringSegment;\n      } else {\n       str += String.fromCharCode(0);\n       str += stringSegment;\n      }\n      decodeStartPtr = currentBytePtr + 1;\n     }\n    }\n   } else {\n    var a = new Array(length);\n    for (var i = 0; i < length; ++i) {\n     a[i] = String.fromCharCode(HEAPU8[payload + i >>> 0]);\n    }\n    str = a.join(\"\");\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\"(destructors, value) {\n   if (value instanceof ArrayBuffer) {\n    value = new Uint8Array(value);\n   }\n   var length;\n   var valueIsOfTypeString = (typeof value == \"string\");\n   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n    throwBindingError(\"Cannot pass non-string to std::string\");\n   }\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    length = lengthBytesUTF8(value);\n   } else {\n    length = value.length;\n   }\n   var base = _malloc(4 + length + 1);\n   var ptr = base + 4;\n   HEAPU32[((base) >>> 2) >>> 0] = length;\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    stringToUTF8(value, ptr, length + 1);\n   } else {\n    if (valueIsOfTypeString) {\n     for (var i = 0; i < length; ++i) {\n      var charCode = value.charCodeAt(i);\n      if (charCode > 255) {\n       _free(ptr);\n       throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n      }\n      HEAPU8[ptr + i >>> 0] = charCode;\n     }\n    } else {\n     for (var i = 0; i < length; ++i) {\n      HEAPU8[ptr + i >>> 0] = value[i];\n     }\n    }\n   }\n   if (destructors !== null) {\n    destructors.push(_free, base);\n   }\n   return base;\n  },\n  \"argPackAdvance\": GenericWireTypeSize,\n  \"readValueFromPointer\": readPointer,\n  destructorFunction(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nvar UTF16Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\nvar UTF16ToString = (ptr, maxBytesToRead) => {\n var endPtr = ptr;\n var idx = endPtr >> 1;\n var maxIdx = idx + maxBytesToRead / 2;\n while (!(idx >= maxIdx) && HEAPU16[idx >>> 0]) ++idx;\n endPtr = idx << 1;\n if (endPtr - ptr > 32 && UTF16Decoder) return UTF16Decoder.decode(HEAPU8.subarray(ptr >>> 0, endPtr >>> 0));\n var str = \"\";\n for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n  var codeUnit = HEAP16[(((ptr) + (i * 2)) >>> 1) >>> 0];\n  if (codeUnit == 0) break;\n  str += String.fromCharCode(codeUnit);\n }\n return str;\n};\n\nvar stringToUTF16 = (str, outPtr, maxBytesToWrite) => {\n maxBytesToWrite ??= 2147483647;\n if (maxBytesToWrite < 2) return 0;\n maxBytesToWrite -= 2;\n var startPtr = outPtr;\n var numCharsToWrite = (maxBytesToWrite < str.length * 2) ? (maxBytesToWrite / 2) : str.length;\n for (var i = 0; i < numCharsToWrite; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  HEAP16[((outPtr) >>> 1) >>> 0] = codeUnit;\n  outPtr += 2;\n }\n HEAP16[((outPtr) >>> 1) >>> 0] = 0;\n return outPtr - startPtr;\n};\n\nvar lengthBytesUTF16 = str => str.length * 2;\n\nvar UTF32ToString = (ptr, maxBytesToRead) => {\n var i = 0;\n var str = \"\";\n while (!(i >= maxBytesToRead / 4)) {\n  var utf32 = HEAP32[(((ptr) + (i * 4)) >>> 2) >>> 0];\n  if (utf32 == 0) break;\n  ++i;\n  if (utf32 >= 65536) {\n   var ch = utf32 - 65536;\n   str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n  } else {\n   str += String.fromCharCode(utf32);\n  }\n }\n return str;\n};\n\nvar stringToUTF32 = (str, outPtr, maxBytesToWrite) => {\n outPtr >>>= 0;\n maxBytesToWrite ??= 2147483647;\n if (maxBytesToWrite < 4) return 0;\n var startPtr = outPtr;\n var endPtr = startPtr + maxBytesToWrite - 4;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) {\n   var trailSurrogate = str.charCodeAt(++i);\n   codeUnit = 65536 + ((codeUnit & 1023) << 10) | (trailSurrogate & 1023);\n  }\n  HEAP32[((outPtr) >>> 2) >>> 0] = codeUnit;\n  outPtr += 4;\n  if (outPtr + 4 > endPtr) break;\n }\n HEAP32[((outPtr) >>> 2) >>> 0] = 0;\n return outPtr - startPtr;\n};\n\nvar lengthBytesUTF32 = str => {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n  len += 4;\n }\n return len;\n};\n\nvar __embind_register_std_wstring = function(rawType, charSize, name) {\n rawType >>>= 0;\n charSize >>>= 0;\n name >>>= 0;\n name = readLatin1String(name);\n var decodeString, encodeString, readCharAt, lengthBytesUTF;\n if (charSize === 2) {\n  decodeString = UTF16ToString;\n  encodeString = stringToUTF16;\n  lengthBytesUTF = lengthBytesUTF16;\n  readCharAt = pointer => HEAPU16[((pointer) >>> 1) >>> 0];\n } else if (charSize === 4) {\n  decodeString = UTF32ToString;\n  encodeString = stringToUTF32;\n  lengthBytesUTF = lengthBytesUTF32;\n  readCharAt = pointer => HEAPU32[((pointer) >>> 2) >>> 0];\n }\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": value => {\n   var length = HEAPU32[((value) >>> 2) >>> 0];\n   var str;\n   var decodeStartPtr = value + 4;\n   for (var i = 0; i <= length; ++i) {\n    var currentBytePtr = value + 4 + i * charSize;\n    if (i == length || readCharAt(currentBytePtr) == 0) {\n     var maxReadBytes = currentBytePtr - decodeStartPtr;\n     var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n     if (str === undefined) {\n      str = stringSegment;\n     } else {\n      str += String.fromCharCode(0);\n      str += stringSegment;\n     }\n     decodeStartPtr = currentBytePtr + charSize;\n    }\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": (destructors, value) => {\n   if (!(typeof value == \"string\")) {\n    throwBindingError(`Cannot pass non-string to C++ string type ${name}`);\n   }\n   var length = lengthBytesUTF(value);\n   var ptr = _malloc(4 + length + charSize);\n   HEAPU32[((ptr) >>> 2) >>> 0] = length / charSize;\n   encodeString(value, ptr + 4, length + charSize);\n   if (destructors !== null) {\n    destructors.push(_free, ptr);\n   }\n   return ptr;\n  },\n  \"argPackAdvance\": GenericWireTypeSize,\n  \"readValueFromPointer\": readPointer,\n  destructorFunction(ptr) {\n   _free(ptr);\n  }\n });\n};\n\nvar __embind_register_void = function(rawType, name) {\n rawType >>>= 0;\n name >>>= 0;\n name = readLatin1String(name);\n registerType(rawType, {\n  isVoid: true,\n  name: name,\n  \"argPackAdvance\": 0,\n  \"fromWireType\": () => undefined,\n  \"toWireType\": (destructors, o) => undefined\n });\n};\n\nvar nowIsMonotonic = 1;\n\nvar __emscripten_get_now_is_monotonic = () => nowIsMonotonic;\n\nvar requireRegisteredType = (rawType, humanName) => {\n var impl = registeredTypes[rawType];\n if (undefined === impl) {\n  throwBindingError(`${humanName} has unknown type ${getTypeName(rawType)}`);\n }\n return impl;\n};\n\nfunction __emval_take_value(type, arg) {\n type >>>= 0;\n arg >>>= 0;\n type = requireRegisteredType(type, \"_emval_take_value\");\n var v = type[\"readValueFromPointer\"](arg);\n return Emval.toHandle(v);\n}\n\nvar _abort = () => {\n abort(\"\");\n};\n\nvar _emscripten_date_now = () => Date.now();\n\nvar _emscripten_get_now;\n\n_emscripten_get_now = () => performance.now();\n\nfunction _emscripten_memcpy_js(dest, src, num) {\n dest >>>= 0;\n src >>>= 0;\n num >>>= 0;\n return HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n}\n\nvar getHeapMax = () =>  3221225472;\n\nvar growMemory = size => {\n var b = wasmMemory.buffer;\n var pages = (size - b.byteLength + 65535) / 65536;\n try {\n  wasmMemory.grow(pages);\n  updateMemoryViews();\n  return 1;\n } /*success*/ catch (e) {}\n};\n\nfunction _emscripten_resize_heap(requestedSize) {\n requestedSize >>>= 0;\n var oldSize = HEAPU8.length;\n var maxHeapSize = getHeapMax();\n if (requestedSize > maxHeapSize) {\n  return false;\n }\n var alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\n for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n  var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n  var replacement = growMemory(newSize);\n  if (replacement) {\n   return true;\n  }\n }\n return false;\n}\n\nvar ENV = {};\n\nvar getExecutableName = () => thisProgram || \"./this.program\";\n\nvar getEnvStrings = () => {\n if (!getEnvStrings.strings) {\n  var lang = ((typeof navigator == \"object\" && navigator.languages && navigator.languages[0]) || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n  var env = {\n   \"USER\": \"web_user\",\n   \"LOGNAME\": \"web_user\",\n   \"PATH\": \"/\",\n   \"PWD\": \"/\",\n   \"HOME\": \"/home/web_user\",\n   \"LANG\": lang,\n   \"_\": getExecutableName()\n  };\n  for (var x in ENV) {\n   if (ENV[x] === undefined) delete env[x]; else env[x] = ENV[x];\n  }\n  var strings = [];\n  for (var x in env) {\n   strings.push(`${x}=${env[x]}`);\n  }\n  getEnvStrings.strings = strings;\n }\n return getEnvStrings.strings;\n};\n\nvar stringToAscii = (str, buffer) => {\n for (var i = 0; i < str.length; ++i) {\n  HEAP8[buffer++ >>> 0] = str.charCodeAt(i);\n }\n HEAP8[buffer >>> 0] = 0;\n};\n\nvar _environ_get = function(__environ, environ_buf) {\n __environ >>>= 0;\n environ_buf >>>= 0;\n var bufSize = 0;\n getEnvStrings().forEach((string, i) => {\n  var ptr = environ_buf + bufSize;\n  HEAPU32[(((__environ) + (i * 4)) >>> 2) >>> 0] = ptr;\n  stringToAscii(string, ptr);\n  bufSize += string.length + 1;\n });\n return 0;\n};\n\nvar _environ_sizes_get = function(penviron_count, penviron_buf_size) {\n penviron_count >>>= 0;\n penviron_buf_size >>>= 0;\n var strings = getEnvStrings();\n HEAPU32[((penviron_count) >>> 2) >>> 0] = strings.length;\n var bufSize = 0;\n strings.forEach(string => bufSize += string.length + 1);\n HEAPU32[((penviron_buf_size) >>> 2) >>> 0] = bufSize;\n return 0;\n};\n\nvar runtimeKeepaliveCounter = 0;\n\nvar keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;\n\nvar _proc_exit = code => {\n EXITSTATUS = code;\n if (!keepRuntimeAlive()) {\n  Module[\"onExit\"]?.(code);\n  ABORT = true;\n }\n quit_(code, new ExitStatus(code));\n};\n\n/** @param {boolean|number=} implicit */ var exitJS = (status, implicit) => {\n EXITSTATUS = status;\n _proc_exit(status);\n};\n\nvar _exit = exitJS;\n\nvar _fd_close = fd => 52;\n\nfunction _fd_fdstat_get(fd, pbuf) {\n pbuf >>>= 0;\n var rightsBase = 0;\n var rightsInheriting = 0;\n var flags = 0;\n {\n  var type = 2;\n  if (fd == 0) {\n   rightsBase = 2;\n  } else if (fd == 1 || fd == 2) {\n   rightsBase = 64;\n  }\n  flags = 1;\n }\n HEAP8[pbuf >>> 0] = type;\n HEAP16[(((pbuf) + (2)) >>> 1) >>> 0] = flags;\n (tempI64 = [ rightsBase >>> 0, (tempDouble = rightsBase, (+(Math.abs(tempDouble))) >= 1 ? (tempDouble > 0 ? (+(Math.floor((tempDouble) / 4294967296))) >>> 0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble))) >>> 0)) / 4294967296))))) >>> 0) : 0) ], \n HEAP32[(((pbuf) + (8)) >>> 2) >>> 0] = tempI64[0], HEAP32[(((pbuf) + (12)) >>> 2) >>> 0] = tempI64[1]);\n (tempI64 = [ rightsInheriting >>> 0, (tempDouble = rightsInheriting, (+(Math.abs(tempDouble))) >= 1 ? (tempDouble > 0 ? (+(Math.floor((tempDouble) / 4294967296))) >>> 0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble))) >>> 0)) / 4294967296))))) >>> 0) : 0) ], \n HEAP32[(((pbuf) + (16)) >>> 2) >>> 0] = tempI64[0], HEAP32[(((pbuf) + (20)) >>> 2) >>> 0] = tempI64[1]);\n return 0;\n}\n\nfunction _fd_read(fd, iov, iovcnt, pnum) {\n iov >>>= 0;\n iovcnt >>>= 0;\n pnum >>>= 0;\n return 52;\n}\n\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n var offset = convertI32PairToI53Checked(offset_low, offset_high);\n newOffset >>>= 0;\n return 70;\n}\n\nvar printCharBuffers = [ null, [], [] ];\n\nvar printChar = (stream, curr) => {\n var buffer = printCharBuffers[stream];\n if (curr === 0 || curr === 10) {\n  (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n  buffer.length = 0;\n } else {\n  buffer.push(curr);\n }\n};\n\nvar flush_NO_FILESYSTEM = () => {\n if (printCharBuffers[1].length) printChar(1, 10);\n if (printCharBuffers[2].length) printChar(2, 10);\n};\n\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n iov >>>= 0;\n iovcnt >>>= 0;\n pnum >>>= 0;\n var num = 0;\n for (var i = 0; i < iovcnt; i++) {\n  var ptr = HEAPU32[((iov) >>> 2) >>> 0];\n  var len = HEAPU32[(((iov) + (4)) >>> 2) >>> 0];\n  iov += 8;\n  for (var j = 0; j < len; j++) {\n   printChar(fd, HEAPU8[ptr + j >>> 0]);\n  }\n  num += len;\n }\n HEAPU32[((pnum) >>> 2) >>> 0] = num;\n return 0;\n}\n\nvar isLeapYear = year => year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n\nvar arraySum = (array, index) => {\n var sum = 0;\n for (var i = 0; i <= index; sum += array[i++]) {}\n return sum;\n};\n\nvar MONTH_DAYS_LEAP = [ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\n\nvar MONTH_DAYS_REGULAR = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\n\nvar addDays = (date, days) => {\n var newDate = new Date(date.getTime());\n while (days > 0) {\n  var leap = isLeapYear(newDate.getFullYear());\n  var currentMonth = newDate.getMonth();\n  var daysInCurrentMonth = (leap ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR)[currentMonth];\n  if (days > daysInCurrentMonth - newDate.getDate()) {\n   days -= (daysInCurrentMonth - newDate.getDate() + 1);\n   newDate.setDate(1);\n   if (currentMonth < 11) {\n    newDate.setMonth(currentMonth + 1);\n   } else {\n    newDate.setMonth(0);\n    newDate.setFullYear(newDate.getFullYear() + 1);\n   }\n  } else {\n   newDate.setDate(newDate.getDate() + days);\n   return newDate;\n  }\n }\n return newDate;\n};\n\n/** @type {function(string, boolean=, number=)} */ function intArrayFromString(stringy, dontAddNull, length) {\n var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n var u8array = new Array(len);\n var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n if (dontAddNull) u8array.length = numBytesWritten;\n return u8array;\n}\n\nvar writeArrayToMemory = (array, buffer) => {\n HEAP8.set(array, buffer >>> 0);\n};\n\nfunction _strftime(s, maxsize, format, tm) {\n s >>>= 0;\n maxsize >>>= 0;\n format >>>= 0;\n tm >>>= 0;\n var tm_zone = HEAPU32[(((tm) + (40)) >>> 2) >>> 0];\n var date = {\n  tm_sec: HEAP32[((tm) >>> 2) >>> 0],\n  tm_min: HEAP32[(((tm) + (4)) >>> 2) >>> 0],\n  tm_hour: HEAP32[(((tm) + (8)) >>> 2) >>> 0],\n  tm_mday: HEAP32[(((tm) + (12)) >>> 2) >>> 0],\n  tm_mon: HEAP32[(((tm) + (16)) >>> 2) >>> 0],\n  tm_year: HEAP32[(((tm) + (20)) >>> 2) >>> 0],\n  tm_wday: HEAP32[(((tm) + (24)) >>> 2) >>> 0],\n  tm_yday: HEAP32[(((tm) + (28)) >>> 2) >>> 0],\n  tm_isdst: HEAP32[(((tm) + (32)) >>> 2) >>> 0],\n  tm_gmtoff: HEAP32[(((tm) + (36)) >>> 2) >>> 0],\n  tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n };\n var pattern = UTF8ToString(format);\n var EXPANSION_RULES_1 = {\n  \"%c\": \"%a %b %d %H:%M:%S %Y\",\n  \"%D\": \"%m/%d/%y\",\n  \"%F\": \"%Y-%m-%d\",\n  \"%h\": \"%b\",\n  \"%r\": \"%I:%M:%S %p\",\n  \"%R\": \"%H:%M\",\n  \"%T\": \"%H:%M:%S\",\n  \"%x\": \"%m/%d/%y\",\n  \"%X\": \"%H:%M:%S\",\n  \"%Ec\": \"%c\",\n  \"%EC\": \"%C\",\n  \"%Ex\": \"%m/%d/%y\",\n  \"%EX\": \"%H:%M:%S\",\n  \"%Ey\": \"%y\",\n  \"%EY\": \"%Y\",\n  \"%Od\": \"%d\",\n  \"%Oe\": \"%e\",\n  \"%OH\": \"%H\",\n  \"%OI\": \"%I\",\n  \"%Om\": \"%m\",\n  \"%OM\": \"%M\",\n  \"%OS\": \"%S\",\n  \"%Ou\": \"%u\",\n  \"%OU\": \"%U\",\n  \"%OV\": \"%V\",\n  \"%Ow\": \"%w\",\n  \"%OW\": \"%W\",\n  \"%Oy\": \"%y\"\n };\n for (var rule in EXPANSION_RULES_1) {\n  pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n }\n var WEEKDAYS = [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ];\n var MONTHS = [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ];\n function leadingSomething(value, digits, character) {\n  var str = typeof value == \"number\" ? value.toString() : (value || \"\");\n  while (str.length < digits) {\n   str = character[0] + str;\n  }\n  return str;\n }\n function leadingNulls(value, digits) {\n  return leadingSomething(value, digits, \"0\");\n }\n function compareByDay(date1, date2) {\n  function sgn(value) {\n   return value < 0 ? -1 : (value > 0 ? 1 : 0);\n  }\n  var compare;\n  if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n   if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n    compare = sgn(date1.getDate() - date2.getDate());\n   }\n  }\n  return compare;\n }\n function getFirstWeekStartDate(janFourth) {\n  switch (janFourth.getDay()) {\n  case 0:\n   return new Date(janFourth.getFullYear() - 1, 11, 29);\n\n  case 1:\n   return janFourth;\n\n  case 2:\n   return new Date(janFourth.getFullYear(), 0, 3);\n\n  case 3:\n   return new Date(janFourth.getFullYear(), 0, 2);\n\n  case 4:\n   return new Date(janFourth.getFullYear(), 0, 1);\n\n  case 5:\n   return new Date(janFourth.getFullYear() - 1, 11, 31);\n\n  case 6:\n   return new Date(janFourth.getFullYear() - 1, 11, 30);\n  }\n }\n function getWeekBasedYear(date) {\n  var thisDate = addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n  var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n  var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n  var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n  var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n  if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n   if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n    return thisDate.getFullYear() + 1;\n   }\n   return thisDate.getFullYear();\n  }\n  return thisDate.getFullYear() - 1;\n }\n var EXPANSION_RULES_2 = {\n  \"%a\": date => WEEKDAYS[date.tm_wday].substring(0, 3),\n  \"%A\": date => WEEKDAYS[date.tm_wday],\n  \"%b\": date => MONTHS[date.tm_mon].substring(0, 3),\n  \"%B\": date => MONTHS[date.tm_mon],\n  \"%C\": date => {\n   var year = date.tm_year + 1900;\n   return leadingNulls((year / 100) | 0, 2);\n  },\n  \"%d\": date => leadingNulls(date.tm_mday, 2),\n  \"%e\": date => leadingSomething(date.tm_mday, 2, \" \"),\n  \"%g\": date => getWeekBasedYear(date).toString().substring(2),\n  \"%G\": getWeekBasedYear,\n  \"%H\": date => leadingNulls(date.tm_hour, 2),\n  \"%I\": date => {\n   var twelveHour = date.tm_hour;\n   if (twelveHour == 0) twelveHour = 12; else if (twelveHour > 12) twelveHour -= 12;\n   return leadingNulls(twelveHour, 2);\n  },\n  \"%j\": date => leadingNulls(date.tm_mday + arraySum(isLeapYear(date.tm_year + 1900) ? MONTH_DAYS_LEAP : MONTH_DAYS_REGULAR, date.tm_mon - 1), 3),\n  \"%m\": date => leadingNulls(date.tm_mon + 1, 2),\n  \"%M\": date => leadingNulls(date.tm_min, 2),\n  \"%n\": () => \"\\n\",\n  \"%p\": date => {\n   if (date.tm_hour >= 0 && date.tm_hour < 12) {\n    return \"AM\";\n   }\n   return \"PM\";\n  },\n  \"%S\": date => leadingNulls(date.tm_sec, 2),\n  \"%t\": () => \"\\t\",\n  \"%u\": date => date.tm_wday || 7,\n  \"%U\": date => {\n   var days = date.tm_yday + 7 - date.tm_wday;\n   return leadingNulls(Math.floor(days / 7), 2);\n  },\n  \"%V\": date => {\n   var val = Math.floor((date.tm_yday + 7 - (date.tm_wday + 6) % 7) / 7);\n   if ((date.tm_wday + 371 - date.tm_yday - 2) % 7 <= 2) {\n    val++;\n   }\n   if (!val) {\n    val = 52;\n    var dec31 = (date.tm_wday + 7 - date.tm_yday - 1) % 7;\n    if (dec31 == 4 || (dec31 == 5 && isLeapYear(date.tm_year % 400 - 1))) {\n     val++;\n    }\n   } else if (val == 53) {\n    var jan1 = (date.tm_wday + 371 - date.tm_yday) % 7;\n    if (jan1 != 4 && (jan1 != 3 || !isLeapYear(date.tm_year))) val = 1;\n   }\n   return leadingNulls(val, 2);\n  },\n  \"%w\": date => date.tm_wday,\n  \"%W\": date => {\n   var days = date.tm_yday + 7 - ((date.tm_wday + 6) % 7);\n   return leadingNulls(Math.floor(days / 7), 2);\n  },\n  \"%y\": date => (date.tm_year + 1900).toString().substring(2),\n  \"%Y\": date => date.tm_year + 1900,\n  \"%z\": date => {\n   var off = date.tm_gmtoff;\n   var ahead = off >= 0;\n   off = Math.abs(off) / 60;\n   off = (off / 60) * 100 + (off % 60);\n   return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n  },\n  \"%Z\": date => date.tm_zone,\n  \"%%\": () => \"%\"\n };\n pattern = pattern.replace(/%%/g, \"\\0\\0\");\n for (var rule in EXPANSION_RULES_2) {\n  if (pattern.includes(rule)) {\n   pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n  }\n }\n pattern = pattern.replace(/\\0\\0/g, \"%\");\n var bytes = intArrayFromString(pattern, false);\n if (bytes.length > maxsize) {\n  return 0;\n }\n writeArrayToMemory(bytes, s);\n return bytes.length - 1;\n}\n\nfunction _strftime_l(s, maxsize, format, tm, loc) {\n s >>>= 0;\n maxsize >>>= 0;\n format >>>= 0;\n tm >>>= 0;\n loc >>>= 0;\n return _strftime(s, maxsize, format, tm);\n}\n\nembind_init_charCodes();\n\nBindingError = Module[\"BindingError\"] = class BindingError extends Error {\n constructor(message) {\n  super(message);\n  this.name = \"BindingError\";\n }\n};\n\nInternalError = Module[\"InternalError\"] = class InternalError extends Error {\n constructor(message) {\n  super(message);\n  this.name = \"InternalError\";\n }\n};\n\ninit_ClassHandle();\n\ninit_embind();\n\ninit_RegisteredPointer();\n\nUnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n\ninit_emval();\n\nvar wasmImports = {\n /** @export */ __cxa_rethrow: ___cxa_rethrow,\n /** @export */ __cxa_throw: ___cxa_throw,\n /** @export */ __syscall_dup3: ___syscall_dup3,\n /** @export */ __syscall_faccessat: ___syscall_faccessat,\n /** @export */ __syscall_fcntl64: ___syscall_fcntl64,\n /** @export */ __syscall_fstat64: ___syscall_fstat64,\n /** @export */ __syscall_ftruncate64: ___syscall_ftruncate64,\n /** @export */ __syscall_ioctl: ___syscall_ioctl,\n /** @export */ __syscall_lstat64: ___syscall_lstat64,\n /** @export */ __syscall_newfstatat: ___syscall_newfstatat,\n /** @export */ __syscall_openat: ___syscall_openat,\n /** @export */ __syscall_stat64: ___syscall_stat64,\n /** @export */ __syscall_unlinkat: ___syscall_unlinkat,\n /** @export */ _embind_register_bigint: __embind_register_bigint,\n /** @export */ _embind_register_bool: __embind_register_bool,\n /** @export */ _embind_register_class: __embind_register_class,\n /** @export */ _embind_register_class_constructor: __embind_register_class_constructor,\n /** @export */ _embind_register_class_function: __embind_register_class_function,\n /** @export */ _embind_register_emval: __embind_register_emval,\n /** @export */ _embind_register_float: __embind_register_float,\n /** @export */ _embind_register_function: __embind_register_function,\n /** @export */ _embind_register_integer: __embind_register_integer,\n /** @export */ _embind_register_memory_view: __embind_register_memory_view,\n /** @export */ _embind_register_std_string: __embind_register_std_string,\n /** @export */ _embind_register_std_wstring: __embind_register_std_wstring,\n /** @export */ _embind_register_void: __embind_register_void,\n /** @export */ _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n /** @export */ _emval_take_value: __emval_take_value,\n /** @export */ abort: _abort,\n /** @export */ emscripten_date_now: _emscripten_date_now,\n /** @export */ emscripten_get_now: _emscripten_get_now,\n /** @export */ emscripten_memcpy_js: _emscripten_memcpy_js,\n /** @export */ emscripten_resize_heap: _emscripten_resize_heap,\n /** @export */ environ_get: _environ_get,\n /** @export */ environ_sizes_get: _environ_sizes_get,\n /** @export */ exit: _exit,\n /** @export */ fd_close: _fd_close,\n /** @export */ fd_fdstat_get: _fd_fdstat_get,\n /** @export */ fd_read: _fd_read,\n /** @export */ fd_seek: _fd_seek,\n /** @export */ fd_write: _fd_write,\n /** @export */ strftime_l: _strftime_l\n};\n\nvar wasmExports = createWasm();\n\nvar ___wasm_call_ctors = () => (___wasm_call_ctors = wasmExports[\"__wasm_call_ctors\"])();\n\nvar _malloc = a0 => (_malloc = wasmExports[\"malloc\"])(a0);\n\nvar _free = a0 => (_free = wasmExports[\"free\"])(a0);\n\nvar ___getTypeName = a0 => (___getTypeName = wasmExports[\"__getTypeName\"])(a0);\n\nvar stackSave = () => (stackSave = wasmExports[\"stackSave\"])();\n\nvar stackRestore = a0 => (stackRestore = wasmExports[\"stackRestore\"])(a0);\n\nvar stackAlloc = a0 => (stackAlloc = wasmExports[\"stackAlloc\"])(a0);\n\nvar ___cxa_is_pointer_type = a0 => (___cxa_is_pointer_type = wasmExports[\"__cxa_is_pointer_type\"])(a0);\n\nvar dynCall_viiij = Module[\"dynCall_viiij\"] = (a0, a1, a2, a3, a4, a5) => (dynCall_viiij = Module[\"dynCall_viiij\"] = wasmExports[\"dynCall_viiij\"])(a0, a1, a2, a3, a4, a5);\n\nvar dynCall_viiiij = Module[\"dynCall_viiiij\"] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_viiiij = Module[\"dynCall_viiiij\"] = wasmExports[\"dynCall_viiiij\"])(a0, a1, a2, a3, a4, a5, a6);\n\nvar dynCall_ji = Module[\"dynCall_ji\"] = (a0, a1) => (dynCall_ji = Module[\"dynCall_ji\"] = wasmExports[\"dynCall_ji\"])(a0, a1);\n\nvar dynCall_vij = Module[\"dynCall_vij\"] = (a0, a1, a2, a3) => (dynCall_vij = Module[\"dynCall_vij\"] = wasmExports[\"dynCall_vij\"])(a0, a1, a2, a3);\n\nvar dynCall_jiii = Module[\"dynCall_jiii\"] = (a0, a1, a2, a3) => (dynCall_jiii = Module[\"dynCall_jiii\"] = wasmExports[\"dynCall_jiii\"])(a0, a1, a2, a3);\n\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = (a0, a1, a2, a3, a4) => (dynCall_jiji = Module[\"dynCall_jiji\"] = wasmExports[\"dynCall_jiji\"])(a0, a1, a2, a3, a4);\n\nvar dynCall_viijii = Module[\"dynCall_viijii\"] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_viijii = Module[\"dynCall_viijii\"] = wasmExports[\"dynCall_viijii\"])(a0, a1, a2, a3, a4, a5, a6);\n\nvar dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = (a0, a1, a2, a3, a4, a5, a6) => (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = wasmExports[\"dynCall_iiiiij\"])(a0, a1, a2, a3, a4, a5, a6);\n\nvar dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8) => (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = wasmExports[\"dynCall_iiiiijj\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n\nvar dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) => (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = wasmExports[\"dynCall_iiiiiijj\"])(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n\nfunction applySignatureConversions(wasmExports) {\n wasmExports = Object.assign({}, wasmExports);\n var makeWrapper_pp = f => a0 => f(a0) >>> 0;\n var makeWrapper_p = f => () => f() >>> 0;\n wasmExports[\"malloc\"] = makeWrapper_pp(wasmExports[\"malloc\"]);\n wasmExports[\"__getTypeName\"] = makeWrapper_pp(wasmExports[\"__getTypeName\"]);\n wasmExports[\"stackSave\"] = makeWrapper_p(wasmExports[\"stackSave\"]);\n wasmExports[\"stackAlloc\"] = makeWrapper_pp(wasmExports[\"stackAlloc\"]);\n return wasmExports;\n}\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n if (!calledRun) run();\n if (!calledRun) dependenciesFulfilled = runCaller;\n};\n\nfunction run() {\n if (runDependencies > 0) {\n  return;\n }\n preRun();\n if (runDependencies > 0) {\n  return;\n }\n function doRun() {\n  if (calledRun) return;\n  calledRun = true;\n  Module[\"calledRun\"] = true;\n  if (ABORT) return;\n  initRuntime();\n  readyPromiseResolve(Module);\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n  postRun();\n }\n if (Module[\"setStatus\"]) {\n  Module[\"setStatus\"](\"Running...\");\n  setTimeout(function() {\n   setTimeout(function() {\n    Module[\"setStatus\"](\"\");\n   }, 1);\n   doRun();\n  }, 1);\n } else {\n  doRun();\n }\n}\n\nif (Module[\"preInit\"]) {\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\n while (Module[\"preInit\"].length > 0) {\n  Module[\"preInit\"].pop()();\n }\n}\n\nrun();\n\n\n  return moduleArg.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = geoda;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => geoda);\n", "import type {GeoDaModule} from '../wasm';\n// @ts-expect-error - geodaAny is not used\nimport geodaAny from '../wasm/index.cjs';\n\nconst geoda: () => Promise<GeoDaModule> = geodaAny;\n\n// Singlton wasmInstance promise\nlet wasmInstancePromise: Promise<GeoDaModule> | null = null;\n\n// Initialize geoda WASM instance\nexport async function initWASM(): Promise<GeoDaModule> {\n  if (wasmInstancePromise === null) {\n    wasmInstancePromise = geoda();\n  }\n  return wasmInstancePromise;\n}\n\n// Reset WASM instance\nexport function resetWASM(): void {\n  wasmInstancePromise = null;\n  wasmInstance = null;\n  geoda().then(instance => {\n    wasmInstance = instance;\n  });\n}\n\n// Global nonPromise instance of GeoDa WASM module\nlet wasmInstance: GeoDaModule | null = null;\n\n// Set the global instance of GeoDa WASM module\nexport function setWASM(instance: GeoDaModule): void {\n  wasmInstance = instance;\n}\n\n// Get the global instance of GeoDa WASM module\nexport function getWASM(): GeoDaModule | null {\n  return wasmInstance;\n}\n", "import {BinaryFeatureCollection} from '@loaders.gl/schema';\n\nimport {\n  GeoDaModule,\n  PolygonCollection,\n  PointCollection,\n  LineCollection,\n  GeometryCollection\n} from '../../wasm';\n\n/**\n * BinaryGeometryType, it is the same as DeckGlGeoTypes in kepler.gl/layers\n * @typedef {Object} BinaryGeometryType\n */\nexport type BinaryGeometryType = {\n  point: boolean;\n  line: boolean;\n  polygon: boolean;\n};\n\n/**\n * create geoda.GeometryCollection from dataToFeatures[] in GeojsonLayer\n *\n */\nexport async function getGeometryCollectionFromBinaryGeometries(\n  geometryType: BinaryGeometryType,\n  binaryFeaturesChunks: BinaryFeatureCollection[],\n  wasm: GeoDaModule\n): Promise<GeometryCollection | null> {\n  if (!wasm) return null;\n\n  if (geometryType.point) {\n    const pointsArray = binaryFeaturesChunks.map(chunk => chunk.points);\n    return createPointCollectionFromBinaryFeatures(pointsArray, wasm);\n  } else if (geometryType.line) {\n    const linesArray = binaryFeaturesChunks.map(chunk => chunk.lines);\n    return createLineCollectionFromBinaryFeatures(linesArray, wasm);\n  } else if (geometryType.polygon) {\n    const polygonsArray = binaryFeaturesChunks.map(chunk => chunk.polygons);\n    return createPolygonCollectionFromBinaryFeatures(polygonsArray, wasm);\n  }\n  return null;\n}\n\n/**\n * create geoda pointCollection from dataToFeatures[] in GeojsonLayer\n * @param pointsArray BinaryFeatureCollection['points'] An array of binary point features from chunks of geoarrow\n * @returns pointCollection | null\n */\nexport function createPointCollectionFromBinaryFeatures(\n  pointsArray: Array<BinaryFeatureCollection['points']>,\n  wasm: GeoDaModule\n): PointCollection {\n  // create PointCollection from binaryFeatures\n  const xs = new wasm.VectorDouble();\n  const ys = new wasm.VectorDouble();\n  const parts = new wasm.VectorUInt();\n  const sizes = new wasm.VectorUInt();\n  const convertToUTM = false;\n\n  for (let chunkIndex = 0; chunkIndex < pointsArray.length; chunkIndex++) {\n    const points = pointsArray[chunkIndex];\n    if (points) {\n      const coords = points.positions.value;\n      for (let i = 0; i < coords.length; i += 2) {\n        xs.push_back(coords[i]);\n        ys.push_back(coords[i + 1]);\n      }\n      // get index as the start of each part when points.featureIds.value[i] changed\n      let index = 0;\n      for (let i = 0; i < points.featureIds.value.length; i++) {\n        // eslint-disable-next-line max-depth\n        if (i === 0) {\n          parts.push_back(index);\n        } else if (points.featureIds.value[i] !== points.featureIds.value[i - 1]) {\n          parts.push_back(index);\n        }\n        index++;\n      }\n      // get sizes from parts\n      for (let i = 1; i < parts.size(); i++) {\n        sizes.push_back(parts.get(i) - parts.get(i - 1));\n      }\n      // add the last size\n      if (parts.size() > 0) {\n        sizes.push_back(index - parts.get(parts.size() - 1));\n      }\n    }\n  }\n  const pointCollection = new wasm.PointCollection(xs, ys, parts, sizes, convertToUTM);\n  return pointCollection;\n}\n\n/**\n * create geoda lineCollection from dataToFeatures[] in GeojsonLayer\n * @param linesArray BinaryFeatureCollection['lines'][] An array of binary line features from chunks of geoarrow\n * @returns LineCollection | null\n */\nexport function createLineCollectionFromBinaryFeatures(\n  linesArray: Array<BinaryFeatureCollection['lines']>,\n  wasm: GeoDaModule\n): LineCollection {\n  // create LineCollection from array of binaryFeatures\n  const xs = new wasm.VectorDouble();\n  const ys = new wasm.VectorDouble();\n  const parts = new wasm.VectorUInt();\n  const sizes = new wasm.VectorUInt();\n  const convertToUTM = false;\n\n  for (let lineIndex = 0; lineIndex < linesArray.length; lineIndex++) {\n    const lines = linesArray[lineIndex];\n    if (lines) {\n      const coords = lines.positions.value;\n      const geomOffsets = lines.pathIndices.value;\n\n      // get xs, ys, parts, sizes\n      for (let i = 0; i < coords.length; i += 2) {\n        xs.push_back(coords[i]);\n        ys.push_back(coords[i + 1]);\n      }\n      // parts is geomOffsets: store the point index of each part\n      // get sizes from featureIds: store number of parts for each line/multiline\n      let numParts = 0;\n      for (let i = 0; i < geomOffsets.length - 1; i++) {\n        const startPointIndex = geomOffsets[i];\n        parts.push_back(startPointIndex);\n        // eslint-disable-next-line max-depth\n        if (\n          i > 0 &&\n          lines.featureIds.value[startPointIndex] !== lines.featureIds.value[startPointIndex - 1]\n        ) {\n          sizes.push_back(numParts);\n          numParts = 0;\n        }\n        numParts += 1;\n      }\n      // add the last size\n      sizes.push_back(numParts);\n    }\n  }\n\n  const lineCollection = new wasm.LineCollection(xs, ys, parts, sizes, convertToUTM);\n  return lineCollection;\n}\n\n/**\n * create geoda polygonCollection from dataToFeatures[] in GeojsonLayer\n * @param polygonsArray BinaryFeatureCollection['polygons'][] An array of binary polygon features from chunks of geoarrow\n * @returns PolygonCollection | null\n */\n// eslint-disable-next-line max-statements\nexport function createPolygonCollectionFromBinaryFeatures(\n  polygonsArray: Array<BinaryFeatureCollection['polygons']>,\n  wasm: GeoDaModule\n): PolygonCollection {\n  // create PolygonCollection from array of binaryFeatures\n  const xs = new wasm.VectorDouble();\n  const ys = new wasm.VectorDouble();\n  const parts = new wasm.VectorUInt();\n  const holes = new wasm.VectorUInt();\n  const sizes = new wasm.VectorUInt();\n  const fixPolygon = true;\n  const convertToUTM = false;\n\n  for (let chunkIndex = 0; chunkIndex < polygonsArray.length; chunkIndex++) {\n    const polygons = polygonsArray[chunkIndex];\n    if (polygons) {\n      const coords = polygons.positions.value;\n      const polygonIndices = polygons.polygonIndices.value;\n      const primitivePolygonIndices = polygons.primitivePolygonIndices.value;\n\n      // get xs, ys, parts, sizes\n      for (let i = 0; i < coords.length; i += 2) {\n        xs.push_back(coords[i]);\n        ys.push_back(coords[i + 1]);\n      }\n      let primitiveIndex = 0;\n      let numParts = 0;\n      for (let i = 0; i < polygonIndices.length - 1; i++) {\n        const startIdx = polygonIndices[i];\n        const endIdx = polygonIndices[i + 1];\n        // eslint-disable-next-line max-depth\n        while (primitivePolygonIndices[primitiveIndex] < endIdx) {\n          // parts: start index of each part\n          // holes: true if the part is a hole\n          // eslint-disable-next-line max-depth\n          if (primitivePolygonIndices[primitiveIndex] > startIdx) {\n            // holeIndices.push(primitivePolygonIndices[primitiveIndex] - startIdx);\n            holes.push_back(1);\n          } else {\n            holes.push_back(0);\n          }\n          parts.push_back(primitivePolygonIndices[primitiveIndex]);\n          primitiveIndex++;\n          numParts += 1;\n        }\n        // eslint-disable-next-line max-depth\n        if (polygons.featureIds.value[endIdx] !== polygons.featureIds.value[endIdx - 1]) {\n          sizes.push_back(numParts);\n          numParts = 0;\n        }\n      }\n    }\n  }\n\n  const polygonCollection = new wasm.PolygonCollection(\n    xs,\n    ys,\n    parts,\n    holes,\n    sizes,\n    fixPolygon,\n    convertToUTM\n  );\n  return polygonCollection;\n}\n", "import {BinaryFeatureCollection} from '@loaders.gl/schema';\n\nimport {\n  BinaryGeometryType,\n  getGeometryCollectionFromBinaryGeometries\n} from '../geometry/binary-geometry';\nimport {initWASM} from '../init';\n\n/**\n * Type of Distance based Neighbors from binary geometries arguments.\n */\ntype DistanceNeighborsFromBinaryGeometriesProps = {\n  distanceThreshold: number;\n  isMile?: boolean;\n  binaryGeometryType: BinaryGeometryType;\n  binaryGeometries: BinaryFeatureCollection[];\n};\n\n/**\n * Calculates the neighbors within a distance band for a given set of geometries or latitude/longitude arrays.\n * @param {NearestNeighborsFromBinaryGeometriesProps} input - The input parameters.\n * @returns {Promise<number[][]>} - The nearest neighbors as an array of indices.\n */\nexport async function getDistanceNeighborsFromBinaryGeometries({\n  distanceThreshold,\n  isMile = false,\n  binaryGeometryType,\n  binaryGeometries\n}: DistanceNeighborsFromBinaryGeometriesProps): Promise<number[][]> {\n  if (!binaryGeometries || binaryGeometries.length === 0) {\n    return [];\n  }\n\n  const neighbors: number[][] = [];\n\n  const wasmInstance = await initWASM();\n  const geomCollection = await getGeometryCollectionFromBinaryGeometries(\n    binaryGeometryType,\n    binaryGeometries,\n    wasmInstance\n  );\n\n  if (geomCollection) {\n    const result = wasmInstance.getDistanceWeights(geomCollection, distanceThreshold, isMile);\n    for (let i = 0; i < result.size(); ++i) {\n      const nbrs = result.get(i);\n      const nbrIndices: number[] = Array(nbrs.size());\n      for (let j = 0, nbrSize = nbrs.size(); j < nbrSize; ++j) {\n        nbrIndices[j] = nbrs.get(j);\n      }\n      neighbors[i] = nbrIndices;\n    }\n  }\n\n  return neighbors;\n}\n\nexport type DistanceThresholds = {\n  minDistance: number;\n  maxDistance: number;\n  maxPairDistance: number;\n};\n\nexport type DistanceThresholdsProps = {\n  isMile?: boolean;\n  binaryGeometryType: BinaryGeometryType;\n  binaryGeometries: BinaryFeatureCollection[];\n};\n\n/**\n * Get the distance thresholds for a given set of geometries or latitude/longitude arrays:\n * The thresholds are calculated based on the minimum, maximum, and maximum pair distances.\n * the minimum threshold is the minimum distance that guarantees that at least one geometry has one neighbor.\n * the maximum threshold is the maximum distance that guarantees that every geometry has at least one neighbor.\n * the maximum pair threshold is the maximum distance between any two geometries.\n *\n * The distances are calculated as the haversine distance between the centroids of the geometries.\n * The units of the thresholds are in kilometers or miles.\n */\nexport async function getDistanceThresholds({\n  isMile = false,\n  binaryGeometryType,\n  binaryGeometries\n}: DistanceThresholdsProps): Promise<DistanceThresholds> {\n  const wasmInstance = await initWASM();\n  const geomCollection = await getGeometryCollectionFromBinaryGeometries(\n    binaryGeometryType,\n    binaryGeometries,\n    wasmInstance\n  );\n  if (geomCollection) {\n    const thresValues = wasmInstance.getDistanceThresholds(geomCollection, isMile);\n    return {\n      minDistance: thresValues.get(0),\n      maxDistance: thresValues.get(1),\n      maxPairDistance: thresValues.get(2)\n    };\n  }\n  return {\n    minDistance: 0,\n    maxDistance: 0,\n    maxPairDistance: 0\n  };\n}\n", "import {BinaryFeatureCollection} from '@loaders.gl/schema';\n\nimport {\n  BinaryGeometryType,\n  getGeometryCollectionFromBinaryGeometries\n} from '../geometry/binary-geometry';\nimport {initWASM} from '../init';\n\n/**\n * Type of Nearest Neighbors from binary geometries arguments.\n */\ntype NearestNeighborsFromBinaryGeometriesProps = {\n  k: number;\n  binaryGeometryType: BinaryGeometryType;\n  binaryGeometries: BinaryFeatureCollection[];\n};\n\n/**\n * Calculates the nearest neighbors for a given set of geometries or latitude/longitude arrays.\n * @param {NearestNeighborsFromBinaryGeometriesProps} input - The input parameters.\n * @returns {Promise<number[][]>} - The nearest neighbors as an array of indices.\n */\nexport async function getNearestNeighborsFromBinaryGeometries({\n  k,\n  binaryGeometryType,\n  binaryGeometries\n}: NearestNeighborsFromBinaryGeometriesProps): Promise<number[][]> {\n  if (!binaryGeometries || binaryGeometries.length === 0) {\n    return [];\n  }\n\n  const neighbors: number[][] = [];\n\n  const wasmInstance = await initWASM();\n  const geomCollection = await getGeometryCollectionFromBinaryGeometries(\n    binaryGeometryType,\n    binaryGeometries,\n    wasmInstance\n  );\n\n  if (geomCollection) {\n    const result = wasmInstance.getNearestNeighbors(geomCollection, k);\n    for (let i = 0; i < result.size(); ++i) {\n      const nbrs = result.get(i);\n      const nbrIndices: number[] = Array(nbrs.size());\n      for (let j = 0, nbrSize = nbrs.size(); j < nbrSize; ++j) {\n        nbrIndices[j] = nbrs.get(j);\n      }\n      neighbors[i] = nbrIndices;\n    }\n  }\n\n  return neighbors;\n}\n", "import {BinaryFeatureCollection} from '@loaders.gl/schema';\n\nimport {\n  BinaryGeometryType,\n  getGeometryCollectionFromBinaryGeometries\n} from '../geometry/binary-geometry';\nimport {initWASM} from '../init';\n\n/**\n * Type of Contiguity Neighbors from binary geometries arguments.\n */\ntype ContiguityNeighborsFromBinaryGeometriesProps = {\n  binaryGeometryType: BinaryGeometryType;\n  binaryGeometries: BinaryFeatureCollection[];\n  useCentroids: boolean;\n  isQueen: boolean;\n  precisionThreshold?: number;\n  orderOfContiguity?: number;\n  includeLowerOrder?: boolean;\n};\n\n/**\n * Calculates the nearest neighbors for a given set of geometries or latitude/longitude arrays.\n * @param {NearestNeighborsFromBinaryGeometriesProps} input - The input parameters.\n * @returns {Promise<number[][]>} - The nearest neighbors as an array of indices.\n */\nexport async function getContiguityNeighborsFromBinaryGeometries({\n  binaryGeometryType,\n  binaryGeometries,\n  isQueen,\n  useCentroids,\n  precisionThreshold = 0.0,\n  orderOfContiguity = 1,\n  includeLowerOrder = false\n}: ContiguityNeighborsFromBinaryGeometriesProps): Promise<number[][]> {\n  if (!binaryGeometries || binaryGeometries.length === 0) {\n    return [];\n  }\n\n  const neighbors: number[][] = [];\n\n  const wasmInstance = await initWASM();\n  const geomCollection = await getGeometryCollectionFromBinaryGeometries(\n    binaryGeometryType,\n    binaryGeometries,\n    wasmInstance\n  );\n\n  if (geomCollection) {\n    const result =\n      useCentroids || binaryGeometryType.point || binaryGeometryType.line\n        ? wasmInstance.getPointContiguityWeights(\n            geomCollection,\n            isQueen,\n            precisionThreshold,\n            orderOfContiguity,\n            includeLowerOrder\n          )\n        : wasmInstance.getPolygonContiguityWeights(\n            geomCollection,\n            isQueen,\n            precisionThreshold,\n            orderOfContiguity,\n            includeLowerOrder\n          );\n    for (let i = 0; i < result.size(); ++i) {\n      const nbrs = result.get(i);\n      const nbrIndices: number[] = Array(nbrs.size());\n      for (let j = 0, nbrSize = nbrs.size(); j < nbrSize; ++j) {\n        nbrIndices[j] = nbrs.get(j);\n      }\n      neighbors[i] = nbrIndices;\n    }\n  }\n\n  return neighbors;\n}\n", "export type WeightsMeta = {\n  [key: string]: unknown;\n  id?: string;\n  type?: 'knn' | 'threshold' | 'queen' | 'rook';\n  symmetry?: 'symmetric' | 'asymmetric';\n  numberOfObservations: number;\n  minNeighbors: number;\n  maxNeighbors: number;\n  meanNeighbors: number;\n  medianNeighbors: number;\n  pctNoneZero: number;\n  order?: number;\n  incLowerOrder?: boolean;\n  k?: number;\n  threshold?: number;\n  distanceMetric?: 'euclidean' | 'manhattan' | 'arc' | 'projected';\n  distanceUnit?:\n    | 'Foot_US'\n    | 'Yard_US'\n    | 'Meter'\n    | 'Kilometer'\n    | 'NauticalMile'\n    | 'Degree'\n    | 'Radian';\n};\n\n/**\n * Get the meta data from the weights structure\n * @param weights the weights structure of every observation using row index\n * @returns WeightsMeta\n */\nexport function getMetaFromWeights(weights: number[][], isDistanceWeights = false): WeightsMeta {\n  const n = weights.length;\n  let minNeighbors = Math.min(...weights.map(w => w.length));\n  let maxNeighbors = Math.max(...weights.map(w => w.length));\n  let meanNeighbors = weights.reduce((acc, w) => acc + w.length, 0) / n;\n  let medianNeighbors = weights.map(w => w.length).sort((a, b) => a - b)[Math.floor(n / 2)];\n  let sumofNeighbors = weights.reduce((acc, w) => acc + w.length, 0);\n  let pctNoneZero = sumofNeighbors / (n * n);\n\n  if (isDistanceWeights) {\n    minNeighbors = Math.min(...weights.map(w => w.length / 2));\n    maxNeighbors = Math.max(...weights.map(w => w.length / 2));\n    meanNeighbors = weights.reduce((acc, w) => acc + w.length / 2, 0) / n;\n    medianNeighbors = weights.map(w => w.length / 2).sort((a, b) => a - b)[Math.floor(n / 2)];\n    sumofNeighbors = weights.reduce((acc, w) => acc + w.length / 2, 0);\n    pctNoneZero = sumofNeighbors / (n * n);\n  }\n\n  return {\n    numberOfObservations: n,\n    minNeighbors,\n    maxNeighbors,\n    meanNeighbors,\n    medianNeighbors,\n    pctNoneZero\n  };\n}\n", "import {VectorDouble, VectorInt, VectorString} from '../wasm';\n\nexport const earthRadius = 6371008.8;\nconst mileToMeters = 1609.344;\n\n// for lat and lng, we use the great circle distance or arc distance\n// in the unit of mile or kilometer (KM)\nexport enum DistanceUnit {\n  Mile = 'Mile',\n  KM = 'KM'\n}\n\n/**\n * Calculate the distance between two points on the earth in the unit of degree\n * @param distance The distance in the unit of mile or kilometer (KM)\n * @param unit The unit of the distance, Mile or KM\n * @returns The distance in the unit of degree\n */\nexport function lengthToDegrees(distance: number, unit: DistanceUnit): number {\n  // length to radians\n  const factor = unit === DistanceUnit.KM ? earthRadius / 1000 : earthRadius / mileToMeters;\n  const radians = distance / factor;\n  // radians to degrees\n  const degrees = radians % (2 * Math.PI);\n  return degrees;\n}\n\n/**\n * Calculate the distance between two points on the earth in the unit of meters\n * @param distance The distance in the unit of mile or kilometer (KM)\n * @param unit The unit of the distance, Mile or KM\n * @returns The distance in the unit of meters\n */\nexport function lengthToMeters(distance: number, unit: DistanceUnit): number {\n  return unit === DistanceUnit.Mile ? distance * mileToMeters : distance * 1000;\n}\n\n/**\n * Convert the std::vector<double> data to number[]\n * @param data The std::vector<double> data\n * @returns The values in number[] format.\n */\nexport function vecDoubleToNumber(data: VectorDouble): number[] {\n  const result: number[] = [];\n\n  const n = data.size();\n  for (let i = 0; i < n; ++i) {\n    result.push(data.get(i));\n  }\n\n  return result;\n}\n\n/**\n * Convert the std::vector<int> data to number[]\n * @param data The std::vector<int> data\n * @returns The values in number[] format.\n */\nexport function vecIntToNumber(data: VectorInt): number[] {\n  const result: number[] = [];\n\n  const n = data.size();\n  for (let i = 0; i < n; ++i) {\n    result.push(data.get(i));\n  }\n\n  return result;\n}\n\n/**\n * Convert the std::vector<string> data to string[]\n * @param data The std::vector<string> data\n * @returns The values in string[] format.\n */\nexport function vecStringToArray(data: VectorString): string[] {\n  const result: string[] = [];\n\n  const n = data.size();\n  for (let i = 0; i < n; ++i) {\n    result.push(data.get(i));\n  }\n\n  return result;\n}\n", "import {initWASM} from '../init';\nimport {vecDoubleToNumber, vecIntToNumber, vecStringToArray} from '../utils';\n\nexport type LocalMoranResult = {\n  isValid: boolean;\n  clusters: number[];\n  lagValues: number[];\n  pValues: number[];\n  lisaValues: number[];\n  sigCategories: number[];\n  nn: number[];\n  labels: string[];\n  colors: string[];\n};\n\nexport type LocalMoranProps = {\n  data: number[] | Float32Array;\n  neighbors: number[][];\n  permutation: number;\n  significanceCutoff?: number;\n  seed?: number;\n};\n\n// Get local moran statistics\nexport async function localMoran({\n  data,\n  neighbors,\n  permutation,\n  significanceCutoff = 0.05,\n  seed = 1234567890\n}: LocalMoranProps): Promise<LocalMoranResult> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n  }\n\n  const wasmNeighbors = new wasm.VecVecUInt();\n  const wasmUndefs = new wasm.VectorUInt();\n\n  for (let i = 0; i < n; ++i) {\n    const nbrs = neighbors[i];\n    const wasmNeighborIndices = new wasm.VectorUInt();\n    for (let j = 0, numNbrs = nbrs.length; j < numNbrs; ++j) {\n      wasmNeighborIndices.push_back(nbrs[j]);\n    }\n    wasmNeighbors.push_back(wasmNeighborIndices);\n  }\n\n  const result = wasm.localMoran(\n    wasmData,\n    wasmNeighbors,\n    wasmUndefs,\n    significanceCutoff,\n    permutation,\n    seed\n  );\n\n  return {\n    isValid: result.isValid(),\n    clusters: vecDoubleToNumber(result.getClusters()),\n    lagValues: vecDoubleToNumber(result.getLagValues()),\n    lisaValues: vecDoubleToNumber(result.getLisaValues()),\n    pValues: vecDoubleToNumber(result.getPValues()),\n    sigCategories: vecIntToNumber(result.getSignificanceCategories()),\n    nn: vecIntToNumber(result.getNN()),\n    labels: vecStringToArray(result.getLabels()),\n    colors: vecStringToArray(result.getColors())\n  };\n}\n\nexport type BivariateLocalMoranProps = {\n  data1: number[] | Float32Array;\n  data2: number[] | Float32Array;\n  neighbors: number[][];\n  permutation: number;\n  significanceCutoff?: number;\n  seed?: number;\n};\n\n// Get bivariate local moran statistics\nexport async function bivariateLocalMoran({\n  data1,\n  data2,\n  neighbors,\n  permutation,\n  significanceCutoff = 0.05,\n  seed = 1234567890\n}: BivariateLocalMoranProps): Promise<LocalMoranResult> {\n  const wasm = await initWASM();\n\n  const n = data1.length;\n  const wasmData1 = new wasm.VectorDouble();\n  wasmData1.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData1.set(i, data1[i]);\n  }\n  const wasmData2 = new wasm.VectorDouble();\n  wasmData2.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData2.set(i, data2[i]);\n  }\n\n  const wasmNeighbors = new wasm.VecVecUInt();\n  const wasmUndefs = new wasm.VectorUInt();\n\n  for (let i = 0; i < n; ++i) {\n    const nbrs = neighbors[i];\n    const wasmNeighborIndices = new wasm.VectorUInt();\n    for (let j = 0, numNbrs = nbrs.length; j < numNbrs; ++j) {\n      wasmNeighborIndices.push_back(nbrs[j]);\n    }\n    wasmNeighbors.push_back(wasmNeighborIndices);\n  }\n\n  const result = wasm.bivariateLocalMoran(\n    wasmData1,\n    wasmData2,\n    wasmNeighbors,\n    wasmUndefs,\n    significanceCutoff,\n    permutation,\n    seed\n  );\n\n  return {\n    isValid: result.isValid(),\n    clusters: vecDoubleToNumber(result.getClusters()),\n    lagValues: vecDoubleToNumber(result.getLagValues()),\n    lisaValues: vecDoubleToNumber(result.getLisaValues()),\n    pValues: vecDoubleToNumber(result.getPValues()),\n    sigCategories: vecIntToNumber(result.getSignificanceCategories()),\n    nn: vecIntToNumber(result.getNN()),\n    labels: vecStringToArray(result.getLabels()),\n    colors: vecStringToArray(result.getColors())\n  };\n}\n", "import {LocalMoranResult} from './local-moran';\nimport {initWASM} from '../init';\nimport {vecDoubleToNumber, vecIntToNumber, vecStringToArray} from '../utils';\n\nexport type LocalGProps = {\n  data: number[] | Float32Array;\n  neighbors: number[][];\n  permutation: number;\n  significanceCutoff?: number;\n  seed?: number;\n  isGStar?: boolean;\n};\n// Get local Getis-Ord statistics\nexport async function localG({\n  data,\n  neighbors,\n  permutation,\n  significanceCutoff = 0.05,\n  seed = 1234567890,\n  isGStar = false\n}: LocalGProps): Promise<LocalMoranResult> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n  }\n\n  const wasmUndefs = new wasm.VectorUInt();\n  const wasmNeighbors = new wasm.VecVecUInt();\n  for (let i = 0; i < n; ++i) {\n    const nbrs = neighbors[i];\n    const wasmNeighborIndices = new wasm.VectorUInt();\n    for (let j = 0, numNbrs = nbrs.length; j < numNbrs; ++j) {\n      wasmNeighborIndices.push_back(nbrs[j]);\n    }\n    wasmNeighbors.push_back(wasmNeighborIndices);\n  }\n\n  const result = wasm.localG(\n    wasmData,\n    wasmNeighbors,\n    wasmUndefs,\n    significanceCutoff,\n    permutation,\n    seed,\n    isGStar ? 1 : 0\n  );\n\n  return {\n    isValid: result.isValid(),\n    clusters: vecDoubleToNumber(result.getClusters()),\n    lagValues: vecDoubleToNumber(result.getLagValues()),\n    lisaValues: vecDoubleToNumber(result.getLisaValues()),\n    pValues: vecDoubleToNumber(result.getPValues()),\n    sigCategories: vecIntToNumber(result.getSignificanceCategories()),\n    nn: vecIntToNumber(result.getNN()),\n    labels: vecStringToArray(result.getLabels()),\n    colors: vecStringToArray(result.getColors())\n  };\n}\n", "import {LocalMoranResult} from './local-moran';\nimport {initWASM} from '../init';\nimport {vecDoubleToNumber, vecIntToNumber, vecStringToArray} from '../utils';\n\nexport type LocalGearyProps = {\n  data: number[] | Float32Array;\n  neighbors: number[][];\n  permutation: number;\n  significanceCutoff?: number;\n  seed?: number;\n};\n\n// Get local geary statistics\nexport async function localGeary({\n  data,\n  neighbors,\n  permutation,\n  significanceCutoff = 0.05,\n  seed = 1234567890\n}: LocalGearyProps): Promise<LocalMoranResult> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n  }\n\n  const wasmNeighbors = new wasm.VecVecUInt();\n  const wasmUndefs = new wasm.VectorUInt();\n\n  for (let i = 0; i < n; ++i) {\n    const nbrs = neighbors[i];\n    const wasmNeighborIndices = new wasm.VectorUInt();\n    for (let j = 0, numNbrs = nbrs.length; j < numNbrs; ++j) {\n      wasmNeighborIndices.push_back(nbrs[j]);\n    }\n    wasmNeighbors.push_back(wasmNeighborIndices);\n  }\n\n  const result = wasm.localGeary(\n    wasmData,\n    wasmNeighbors,\n    wasmUndefs,\n    significanceCutoff,\n    permutation,\n    seed\n  );\n\n  return {\n    isValid: result.isValid(),\n    clusters: vecDoubleToNumber(result.getClusters()),\n    lagValues: vecDoubleToNumber(result.getLagValues()),\n    lisaValues: vecDoubleToNumber(result.getLisaValues()),\n    pValues: vecDoubleToNumber(result.getPValues()),\n    sigCategories: vecIntToNumber(result.getSignificanceCategories()),\n    nn: vecIntToNumber(result.getNN()),\n    labels: vecStringToArray(result.getLabels()),\n    colors: vecStringToArray(result.getColors())\n  };\n}\n\nexport type MultivariateLocalGearyProps = {\n  data: number[][];\n  neighbors: number[][];\n  permutation: number;\n  significanceCutoff?: number;\n  seed?: number;\n};\n\n// Get multivariate local geary statistics\nexport async function multivariateLocalGeary({\n  data,\n  neighbors,\n  permutation,\n  significanceCutoff = 0.05,\n  seed = 1234567890\n}: MultivariateLocalGearyProps): Promise<LocalMoranResult> {\n  const wasm = await initWASM();\n\n  const n = neighbors.length;\n  const wasmData = new wasm.VecVecDouble();\n  for (let i = 0; i < data.length; ++i) {\n    const vals = new wasm.VectorDouble();\n    for (let j = 0; j < data[i].length; ++j) {\n      vals.push_back(data[i][j]);\n    }\n    wasmData.push_back(vals);\n  }\n\n  const wasmNeighbors = new wasm.VecVecUInt();\n  const wasmUndefs = new wasm.VecVecUInt();\n\n  for (let i = 0; i < n; ++i) {\n    const nbrs = neighbors[i];\n    const wasmNeighborIndices = new wasm.VectorUInt();\n    for (let j = 0, numNbrs = nbrs.length; j < numNbrs; ++j) {\n      wasmNeighborIndices.push_back(nbrs[j]);\n    }\n    wasmNeighbors.push_back(wasmNeighborIndices);\n  }\n\n  const result = wasm.multivariateLocalGeary(\n    wasmData,\n    wasmNeighbors,\n    wasmUndefs,\n    significanceCutoff,\n    permutation,\n    seed\n  );\n\n  return {\n    isValid: result.isValid(),\n    clusters: vecDoubleToNumber(result.getClusters()),\n    lagValues: vecDoubleToNumber(result.getLagValues()),\n    lisaValues: vecDoubleToNumber(result.getLisaValues()),\n    pValues: vecDoubleToNumber(result.getPValues()),\n    sigCategories: vecIntToNumber(result.getSignificanceCategories()),\n    nn: vecIntToNumber(result.getNN()),\n    labels: vecStringToArray(result.getLabels()),\n    colors: vecStringToArray(result.getColors())\n  };\n}\n", "import {LocalMoranResult} from './local-moran';\nimport {initWASM} from '../init';\nimport {vecDoubleToNumber, vecIntToNumber, vecStringToArray} from '../utils';\n\nexport type QuantileLisaProps = {\n  k: number;\n  quantile: number;\n  data: number[] | Float32Array;\n  neighbors: number[][];\n  permutation: number;\n  significanceCutoff?: number;\n  seed?: number;\n};\n\n/**\n * Get local Quantile Lisa statistics\n * @param k The number of classes/categories\n * @param quantile The quantile value\n * @param data The numeric values to be classified.\n * @param neighbors The neighbors of each observation\n * @param permutation The number of permutations\n * @param significanceCutoff The significance cutoff\n * @param seed The seed value\n * @returns LISA result\n */\nexport async function quantileLisa({\n  k,\n  quantile,\n  data,\n  neighbors,\n  permutation,\n  significanceCutoff = 0.05,\n  seed = 1234567890\n}: QuantileLisaProps): Promise<LocalMoranResult> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n  }\n\n  const wasmUndefs = new wasm.VectorUInt();\n  const wasmNeighbors = new wasm.VecVecUInt();\n  for (let i = 0; i < n; ++i) {\n    const nbrs = neighbors[i];\n    const wasmNeighborIndices = new wasm.VectorUInt();\n    for (let j = 0, numNbrs = nbrs.length; j < numNbrs; ++j) {\n      wasmNeighborIndices.push_back(nbrs[j]);\n    }\n    wasmNeighbors.push_back(wasmNeighborIndices);\n  }\n\n  const result = wasm.quantileLisa(\n    k,\n    quantile,\n    wasmData,\n    wasmNeighbors,\n    wasmUndefs,\n    significanceCutoff,\n    permutation,\n    seed\n  );\n\n  return {\n    isValid: result.isValid(),\n    clusters: vecDoubleToNumber(result.getClusters()),\n    lagValues: vecDoubleToNumber(result.getLagValues()),\n    lisaValues: vecDoubleToNumber(result.getLisaValues()),\n    pValues: vecDoubleToNumber(result.getPValues()),\n    sigCategories: vecIntToNumber(result.getSignificanceCategories()),\n    nn: vecIntToNumber(result.getNN()),\n    labels: vecStringToArray(result.getLabels()),\n    colors: vecStringToArray(result.getColors())\n  };\n}\n", "/**\n * Compute spatial lag of a list of values based on a list of neighbors and weights.\n * @param values The numeric values to compute spatial lag for.\n * @param neighbors The list of neighbors for each value.\n * @param weights The weight values for each neighbor.\n * @param useSelfNeighbor The flag to include self as a neighbor.\n * @param rowStandardize The flag to row standardize the spatial lag.\n * @returns The spatial lag values.\n */\n// eslint-disable-next-line max-statements, complexity\nexport function spatialLag(\n  values: number[],\n  neighbors: number[][],\n  rowStandardize = true,\n  weights?: number[][],\n  useSelfNeighbor?: boolean\n): number[] {\n  const n = values.length;\n  const isBinaryWeights = weights === undefined;\n\n  const result = new Array(n).fill(0);\n  // for each observation\n  for (let i = 0; i < n; i++) {\n    let lag = 0;\n    let numOfNbrs = 0;\n    let isSelfIncluded = false;\n    // get neighbors of observation i\n    const nn = neighbors[i];\n    // for each neighbor\n    for (let j = 0; j < nn.length; j++) {\n      // skip self\n      if (i === nn[j]) {\n        isSelfIncluded = true;\n        continue;\n      }\n      if (isBinaryWeights) {\n        lag += values[nn[j]];\n        numOfNbrs += 1;\n      } else {\n        lag += values[nn[j]] * weights[i][j];\n        numOfNbrs += weights[i][j];\n      }\n    }\n    // compute spatial lag\n    if (isBinaryWeights) {\n      // contiguity weights\n      if (useSelfNeighbor) {\n        lag += values[i];\n        numOfNbrs += 1;\n      }\n      if (rowStandardize) {\n        lag = numOfNbrs > 0 ? lag / numOfNbrs : 0;\n      }\n    } else {\n      // inverse or kernel weights\n      if (rowStandardize) {\n        lag = numOfNbrs > 0 ? lag / numOfNbrs : 0;\n      }\n      // TODO why rowStandardize is before useSelfNeighbor?\n      if (useSelfNeighbor) {\n        // eslint-disable-next-line max-depth\n        if (isSelfIncluded) {\n          // only for kernel weights with diagonal elements\n          lag += values[i] * weights[i][nn.length];\n        } else {\n          lag += values[i];\n        }\n      }\n    }\n    result[i] = lag;\n  }\n  return result;\n}\n\n/**\n * Compute the median spatial lag of a list of values based on a list of neighbors and weights using the mean function.\n * @param values The numeric values to compute spatial lag for.\n * @param neighbors The list of neighbors for each value.\n * @returns The spatial lag values.\n */\nexport function spatialLagMedian(values: number[], neighbors: number[][]): number[] {\n  const n = values.length;\n\n  const result = new Array(n).fill(0);\n  // for each observation\n  for (let i = 0; i < n; i++) {\n    // exclude self i from neighbors\n    const nn = neighbors[i].filter(j => j !== i);\n    const vals = nn.map(j => values[j]);\n    vals.sort((a, b) => a - b);\n\n    // if odd number of neighbors, return the middle value\n    // if even number of neighbors, return the average of the two middle values\n    const mid = Math.floor(nn.length / 2);\n    if (nn.length % 2 === 0) {\n      result[i] = (vals[mid - 1] + vals[mid]) / 2;\n    } else {\n      result[i] = vals[mid];\n    }\n  }\n  return result;\n}\n", "export enum RatesOptions {\n  RawRates = 'Raw Rates',\n  ExcessRisk = 'Excess Risk',\n  EmpiricalRisk = 'Empirical Risk',\n  SpatialRates = 'Spatial Rates',\n  SpatialEmpiricalRates = 'Spatial Empirical Rates',\n  EBRateStandardization = 'EB Rate Standardization'\n}\n\nexport type CalculateRatesProps = {\n  eventValues: number[];\n  baseValues: number[];\n  method: string;\n  neighbors?: number[][];\n};\n\nexport function calculateRates({\n  eventValues,\n  baseValues,\n  method,\n  neighbors\n}: CalculateRatesProps): number[] {\n  switch (method) {\n    case RatesOptions.RawRates:\n      return rawRates(baseValues, eventValues);\n    case RatesOptions.ExcessRisk:\n      return excessRisk(baseValues, eventValues);\n    case RatesOptions.EmpiricalRisk:\n      return empiricalBayes(baseValues, eventValues);\n    case RatesOptions.SpatialRates:\n      return neighbors ? spatialRates(baseValues, eventValues, neighbors) : [];\n    case RatesOptions.SpatialEmpiricalRates:\n      return neighbors ? spatialEmpiricalBayes(baseValues, eventValues, neighbors) : [];\n    case RatesOptions.EBRateStandardization:\n      return rateStandardizeEB(baseValues, eventValues);\n    default:\n      return [];\n  }\n}\n\n/**\n * Compute Raw Rate or crude rate (proportion), the simple ratio of the events\n * (number of lung cancer cases) over the population at risk (the county population).\n *\n * @param baseValues The values of base variable.\n * @param eventValues The values of event variable.\n * @returns The rates values.\n */\nexport function rawRates(baseValues: number[], eventValues: number[]): number[] {\n  const n = baseValues.length;\n  const rates = new Array(n).fill(0);\n\n  for (let i = 0; i < n; i++) {\n    if (baseValues[i] > 0) {\n      rates[i] = eventValues[i] / baseValues[i];\n    } else {\n      rates[i] = 0;\n    }\n  }\n  return rates;\n}\n\n/**\n * Compute excess risk (relative risk), the ratio of the observed number of cases\n * to the expected number of cases in the population.\n *\n * @param baseValues The values of base variable.\n * @param eventValues The values of event variable.\n * @returns The rates values.\n */\nexport function excessRisk(baseValues: number[], eventValues: number[]): number[] {\n  const n = baseValues.length;\n  const risks = new Array(n).fill(0);\n\n  let SP = 0;\n  let SE = 0;\n\n  for (let i = 0; i < n; i++) {\n    SP += baseValues[i];\n    SE += eventValues[i];\n  }\n\n  let lambda = 1;\n  if (SP > 0) {\n    lambda = SE / SP;\n  }\n\n  for (let i = 0; i < n; i++) {\n    const eHat = baseValues[i] * lambda;\n    if (eHat > 0) {\n      risks[i] = eventValues[i] / eHat;\n    } else {\n      risks[i] = 0;\n    }\n  }\n\n  return risks;\n}\n\n/**\n * Compute the empirical Bayes smoothed rates, which is a weighted average of the crude rate\n * and the overall rate, where the weights are based on the variability of the crude rates.\n *\n * @param baseValues The values of base variable.\n * @param eventValues The values of event variable.\n * @returns The rates values.\n */\nexport function empiricalBayes(baseValues: number[], eventValues: number[]): number[] {\n  const n = baseValues.length;\n  const results = new Array(n).fill(0);\n  const piRaw = new Array(n).fill(0);\n  let SP = 0;\n  let SE = 0;\n\n  for (let i = 0; i < n; i++) {\n    SP += baseValues[i];\n    SE += eventValues[i];\n    if (baseValues[i] > 0) {\n      piRaw[i] = eventValues[i] / baseValues[i];\n    }\n  }\n\n  const theta1 = SP > 0 ? SE / SP : 1;\n  const pBar = SP / n;\n  let q1 = 0;\n  let w = 0;\n\n  for (let i = 0; i < n; i++) {\n    q1 += Math.pow(piRaw[i] - theta1, 2) * baseValues[i];\n  }\n  let theta2 = q1 / SP - theta1 / pBar;\n\n  if (theta2 < 0) {\n    theta2 = 0;\n  }\n\n  for (let i = 0; i < n; i++) {\n    q1 = theta2 + theta1 / baseValues[i];\n    w = q1 > 0 ? theta2 / q1 : 1;\n    results[i] = w * piRaw[i] + (1 - w) * theta1;\n  }\n\n  return results;\n}\n\n/**\n * Compute the spatial empirical Bayes smoothed rates, which is a weighted average of the crude rate\n * and the overall rate, where the weights are based on the variability of the crude rates and the\n * spatial autocorrelation of the rates.\n *\n * @param baseValues The values of base variable.\n * @param eventValues The values of event variable.\n * @param neighbors The list of neighbors for each value.\n * @returns The rates values.\n */\nexport function spatialEmpiricalBayes(\n  baseValues: number[],\n  eventValues: number[],\n  neighbors: number[][]\n): number[] {\n  const n = baseValues.length;\n  const results = new Array(n).fill(0);\n  const piRaw = new Array(n).fill(0);\n\n  for (let i = 0; i < n; i++) {\n    piRaw[i] = baseValues[i] > 0 ? eventValues[i] / baseValues[i] : 1;\n  }\n\n  for (let i = 0; i < n; i++) {\n    let SP = baseValues[i];\n    let SE = eventValues[i];\n    const nn = neighbors[i];\n\n    for (let j = 0; j < nn.length; j++) {\n      SP += baseValues[nn[j]];\n      SE += eventValues[nn[j]];\n    }\n\n    const theta1 = SP > 0 ? SE / SP : 1;\n\n    if (nn.length > 0) {\n      const pBar = SP / (nn.length + 1);\n      let q1 = Math.pow(piRaw[i] - theta1, 2) * baseValues[i];\n\n      for (let j = 0; j < nn.length; j++) {\n        q1 += Math.pow(piRaw[nn[j]] - theta1, 2) * baseValues[nn[j]];\n      }\n\n      let theta2 = q1 / SP - theta1 / pBar;\n\n      if (theta2 < 0) {\n        theta2 = 0;\n      }\n\n      q1 = theta2 + theta1 / baseValues[i];\n      const w = q1 > 0 ? theta2 / q1 : 1;\n      results[i] = w * piRaw[i] + (1 - w) * theta1;\n    }\n  }\n\n  return results;\n}\n\n/**\n * Compute the spatial rates, which is the ratio of the events (number of lung cancer cases)\n * over the population at risk (the county population) and its neighbors.\n *\n * @param baseValues The values of base variable.\n * @param eventValues The values of event variable.\n * @param neighbors The list of neighbors for each value.\n * @returns The rates values.\n */\nexport function spatialRates(\n  baseValues: number[],\n  eventValues: number[],\n  neighbors: number[][]\n): number[] {\n  const n = baseValues.length;\n  const rates = new Array(n).fill(0);\n\n  for (let i = 0; i < n; i++) {\n    let SP = baseValues[i];\n    let SE = eventValues[i];\n    const nn = neighbors[i];\n\n    for (let j = 0; j < nn.length; j++) {\n      SP += baseValues[nn[j]];\n      SE += eventValues[nn[j]];\n    }\n\n    if (baseValues[i] + SP > 0) {\n      rates[i] = (eventValues[i] + SE) / (baseValues[i] + SP);\n    }\n  }\n\n  return rates;\n}\n\nexport function rateStandardizeEB(baseValues: number[], eventValues: number[]): number[] {\n  const n = baseValues.length;\n  const results = new Array(n).fill(0);\n  const piRaw = new Array(n).fill(0);\n  let SP = 0;\n  let SE = 0;\n\n  // compute pi, the rate i, and the pop. rate b_hat\n  for (let i = 0; i < n; i++) {\n    SP += baseValues[i];\n    SE += eventValues[i];\n    if (baseValues[i] > 0) {\n      piRaw[i] = eventValues[i] / baseValues[i];\n    }\n  }\n\n  if (SP === 0) {\n    return results;\n  }\n\n  const bHat = SE / SP;\n\n  // compute a_hat, the variance\n  let gamma = 0;\n  for (let i = 0; i < n; i++) {\n    gamma += Math.pow(piRaw[i] - bHat, 2) * baseValues[i];\n  }\n\n  const a = gamma / SP - bHat / (SP / n);\n  const aHat = a > 0 ? a : 0;\n\n  for (let i = 0; i < n; i++) {\n    const se = baseValues[i] > 0 ? Math.sqrt(aHat + bHat / baseValues[i]) : 0;\n    results[i] = se > 0 ? (piRaw[i] - bHat) / se : 0;\n  }\n\n  return results;\n}\n", "import {initWASM} from '../init';\nimport {vecDoubleToNumber} from '../utils';\n\n/**\n * The quantile breaks algorithm to determine the best way to break up the data into k groups. Each group has the same number of observations.\n * @param k The number of classes/categories\n * @param data The numeric values to be classified.\n * @returns The breaks values.\n */\nexport async function quantileBreaks(k: number, data: number[] | Float32Array): Promise<number[]> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n\n  const wasmUndefs = new wasm.VectorUInt();\n  wasmUndefs.resize(n, 0);\n\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n    if (data[i] === undefined || data[i] === null) {\n      wasmUndefs.set(i, 1);\n    }\n  }\n\n  const result = wasm.quantileBreaks(k, wasmData, wasmUndefs);\n\n  return vecDoubleToNumber(result);\n}\n", "import {initWASM} from '../init';\nimport {vecDoubleToNumber} from '../utils';\n\n/**\n * The natural breaks (Jenks) algorithm to determine the best way to break up the data into k different groups.\n * The values in each group are as similar as possible to each other, and as different as possible from the values in the other groups.\n * @param k The number of classes/categories\n * @param data The numeric values to be classified.\n * @returns The breaks values.\n */\nexport async function naturalBreaks(k: number, data: number[] | Float32Array): Promise<number[]> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n\n  const wasmUndefs = new wasm.VectorInt();\n  wasmUndefs.resize(n, 0);\n\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n    if (data[i] === undefined || data[i] === null) {\n      wasmUndefs.set(i, 1);\n    }\n  }\n\n  const result = wasm.naturalBreaks(k, wasmData, wasmUndefs);\n\n  return vecDoubleToNumber(result);\n}\n", "import {initWASM} from '../init';\nimport {vecDoubleToNumber} from '../utils';\n\n/**\n * The equal interval breaks implementation.\n *\n * @param k The number of classes/categories\n * @param data The numeric values to be classified.\n * @returns The breaks values.\n */\nexport async function equalIntervalBreaks(\n  k: number,\n  data: number[] | Float32Array\n): Promise<number[]> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n\n  const wasmUndefs = new wasm.VectorInt();\n  wasmUndefs.resize(n, 0);\n\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n    if (data[i] === undefined || data[i] === null) {\n      wasmUndefs.set(i, 1);\n    }\n  }\n\n  const result = wasm.equalIntervalBreaks(k, wasmData, wasmUndefs);\n\n  return vecDoubleToNumber(result);\n}\n", "import {initWASM} from '../init';\nimport {vecDoubleToNumber} from '../utils';\n\n/**\n * The percentile breaks implementation.\n * The percentile breaks include: <= 1%, (1-10]%, (10-50]%, (50-90)%, [90-99)%, >= 99%\n *\n * @param data The numeric values to be classified.\n * @returns The breaks values.\n */\nexport async function percentileBreaks(data: number[] | Float32Array): Promise<number[]> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n\n  const wasmUndefs = new wasm.VectorInt();\n  wasmUndefs.resize(n, 0);\n\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n    if (data[i] === undefined || data[i] === null) {\n      wasmUndefs.set(i, 1);\n    }\n  }\n\n  const result = wasm.percentileBreaks(wasmData, wasmUndefs);\n\n  return vecDoubleToNumber(result);\n}\n", "import {initWASM} from '../init';\nimport {vecDoubleToNumber} from '../utils';\n\nasync function boxBreaks(data: number[] | Float32Array, hingeFactor: number): Promise<number[]> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n\n  const wasmUndefs = new wasm.VectorInt();\n  wasmUndefs.resize(n, 0);\n\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n    if (data[i] === undefined || data[i] === null) {\n      wasmUndefs.set(i, 1);\n    }\n  }\n\n  const result = wasm.boxBreaks(wasmData, wasmUndefs, hingeFactor);\n\n  return vecDoubleToNumber(result);\n}\n\n/**\n * The implementation of box breaks with hinge = 1.5\n * The categories include: Lower outlier, < 25%, [25-50)%, [50-75)%, >= 75%, Upper outlier\n *\n * @param data The numeric values to be classified.\n * @returns The breaks values.\n */\nexport async function hinge15Breaks(data: number[] | Float32Array): Promise<number[]> {\n  const hingeFactor = 1.5;\n  const result = await boxBreaks(data, hingeFactor);\n  return result;\n}\n\n/**\n * The implementation of box breaks with hinge = 3.0\n * The categories include: Lower outlier, < 25%, [25-50)%, [50-75)%, >= 75%, Upper outlier\n *\n * @param data The numeric values to be classified.\n * @returns The breaks values.\n */\nexport async function hinge30Breaks(data: number[] | Float32Array): Promise<number[]> {\n  const hingeFactor = 3.0;\n  const result = await boxBreaks(data, hingeFactor);\n  return result;\n}", "import {initWASM} from '../init';\nimport {vecDoubleToNumber} from '../utils';\n\n/**\n * The standard deviation breaks implementation.\n * The standard deviation breaks include: < -2 std dev, [-2, -1) std dev, [-1, 0) std dev, [0, 1] std dev, (1, 2] std dev, > 2 std dev\n *\n * @param data The numeric values to be classified.\n * @returns The breaks values.\n */\nexport async function standardDeviationBreaks(data: number[] | Float32Array): Promise<number[]> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n\n  const wasmUndefs = new wasm.VectorInt();\n  wasmUndefs.resize(n, 0);\n\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n    if (data[i] === undefined || data[i] === null) {\n      wasmUndefs.set(i, 1);\n    }\n  }\n\n  const result = wasm.standardDeviationBreaks(wasmData, wasmUndefs);\n\n  return vecDoubleToNumber(result);\n}\n", "import {initWASM} from '../init';\nimport {SpatialErrorResult} from './spatial-error';\nimport {SpatialLagResult} from './spatial-lag';\n\nexport async function dotProduct(x: number[], y: number[]): Promise<number> {\n  // check if x and y are of the same length\n  if (x.length !== y.length) {\n    throw new Error('x and y must be of the same length');\n  }\n  const wasmInstance = await initWASM();\n\n  // Create a new vector of doubles\n  const wasmX = new wasmInstance.VectorDouble();\n  wasmX.resize(x.length, 0);\n  for (let i = 0; i < x.length; ++i) {\n    wasmX.set(i, x[i]);\n  }\n  const wasmY = new wasmInstance.VectorDouble();\n  wasmY.resize(y.length, 0);\n  for (let i = 0; i < y.length; ++i) {\n    wasmY.set(i, y[i]);\n  }\n  const result = wasmInstance.dotProduct(wasmX, wasmY);\n  return result;\n}\n\nexport type LinearRegressionProps = {\n  x: number[][];\n  y: number[];\n  weights?: number[][];\n  weightsValues?: number[][];\n  weightsId?: string;\n  xNames: string[];\n  yName: string;\n  datasetName: string;\n  xUndefs?: number[][];\n  yUndefs?: number[];\n};\n\nexport type LinearRegressionResult = {\n  type: string;\n  dependentVariable: string;\n  independentVariables: string[];\n  title: string;\n  datasetName: string;\n  weightsId?: string;\n  'Number of Observations': number;\n  'Mean Dependent Var': number;\n  'Number of Variables': number;\n  'SD Dependent Var': number;\n  'Degrees of Freedom': number;\n  'R-squared': number;\n  'Adjusted R-squared': number;\n  'F-statistic': number;\n  'Prob(F-statistic)': number;\n  'Sum Squared Residual': number;\n  'Log Likelihood': number;\n  'Sigma-Square': number;\n  'Akaike Info Criterion': number;\n  'SE of Regression': number;\n  'Schwarz Criterion': number;\n  'Sigma-Square ML': number;\n  'Variable Coefficients': Array<{\n    Variable: string;\n    Coefficient: number;\n    'Std Error': number;\n    't-Statistic': number;\n    Probability: number;\n  }>;\n  'REGRESSION DIAGNOSTICS': {\n    'MULTICOLLINEARITY CONDITION NUMBER': number;\n    'TEST ON NORMALITY OF ERRORS': {\n      Test: string;\n      'Jarque-Bera DF': number;\n      'Jarque-Bera Value': number;\n      'Jarque-Bera Probability': number;\n    };\n  };\n  'DIAGNOSTICS FOR HETEROSKEDASTICITY': {\n    'BREUSCH-PAGAN TEST': {\n      Test: string;\n      'Breusch-Pagan DF': number;\n      'Breusch-Pagan Value': number;\n      'Breusch-Pagan Probability': number;\n    };\n    'KOENKER-Bassett TEST': {\n      Test: string;\n      'Koenker-Bassett DF': number;\n      'Koenker-Bassett Value': number;\n      'Koenker-Bassett Probability': number;\n    };\n  };\n  'DIAGNOSTICS FOR SPATIAL DEPENDENCE': {\n    \"Moran's I (error)\": {\n      Test: string;\n      \"Moran's I (error)\": number;\n      'Moran\u2019s I (error) Z': number;\n      'Moran\u2019s I (error) Probability': number;\n    };\n    'Lagrange Multiplier (lag)': {\n      Test: string;\n      'Lagrange Multiplier (lag) DF': number;\n      'Lagrange Multiplier (lag) Value': number;\n      'Lagrange Multiplier (lag) Probability': number;\n    };\n    'Robust LM (lag)': {\n      Test: string;\n      'Robust LM (lag) DF': number;\n      'Robust LM (lag) Value': number;\n      'Robust LM (lag) Probability': number;\n    };\n    'Lagrange Multiplier (error)': {\n      Test: string;\n      'Lagrange Multiplier (error) DF': number;\n      'Lagrange Multiplier (error) Value': number;\n      'Lagrange Multiplier (error) Probability': number;\n    };\n    'Robust LM (error)': {\n      Test: string;\n      'Robust LM (error) DF': number;\n      'Robust LM (error) Value': number;\n      'Robust LM (error) Probability': number;\n    };\n    'Lagrange Multiplier (SARMA)': {\n      Test: string;\n      'Lagrange Multiplier (SARMA) DF': number;\n      'Lagrange Multiplier (SARMA) Value': number;\n      'Lagrange Multiplier (SARMA) Probability': number;\n    };\n  };\n};\n\n// eslint-disable-next-line max-statements, complexity\nexport async function linearRegression({\n  x,\n  y,\n  weightsId,\n  weights,\n  weightsValues,\n  xNames,\n  yName,\n  datasetName,\n  xUndefs,\n  yUndefs\n}: LinearRegressionProps): Promise<LinearRegressionResult> {\n  const wasmInstance = await initWASM();\n  // Create a new vector of doubles\n  const wasmY = new wasmInstance.VectorDouble();\n  for (let i = 0; i < y.length; ++i) {\n    wasmY.push_back(y[i]);\n  }\n  // Create a new VecVecDouble for x\n  const wasmX = new wasmInstance.VecVecDouble();\n  for (let i = 0; i < x.length; ++i) {\n    const vals = new wasmInstance.VectorDouble();\n    for (let j = 0; j < x[i].length; ++j) {\n      vals.push_back(x[i][j]);\n    }\n    wasmX.push_back(vals);\n  }\n  // Create a new VecVecUInt for weights\n  const wasmWeights = new wasmInstance.VecVecUInt();\n  if (weights) {\n    for (let i = 0; i < weights.length; ++i) {\n      const vals = new wasmInstance.VectorUInt();\n      for (let j = 0; j < weights[i].length; ++j) {\n        vals.push_back(weights[i][j]);\n      }\n      wasmWeights.push_back(vals);\n    }\n  }\n\n  // Create a new VecVecDouble for weightsValues\n  const wasmWeightsValues = new wasmInstance.VecVecDouble();\n  if (weightsValues) {\n    for (let i = 0; i < weightsValues.length; ++i) {\n      const vals = new wasmInstance.VectorDouble();\n      for (let j = 0; j < weightsValues[i].length; ++j) {\n        vals.push_back(weightsValues[i][j]);\n      }\n      wasmWeightsValues.push_back(vals);\n    }\n  }\n\n  // Create a new vector of strings for xNames\n  const wasmXNames = new wasmInstance.VectorString();\n  for (let i = 0; i < xNames.length; ++i) {\n    wasmXNames.push_back(xNames[i]);\n  }\n  // Create a new VectorInt for yUndefs\n  const wasmYUndefs = new wasmInstance.VectorUInt();\n  if (yUndefs) {\n    for (let i = 0; i < yUndefs.length; ++i) {\n      wasmYUndefs.push_back(yUndefs[i]);\n    }\n  }\n  // Create a new VecVecInt for xUndefs\n  const wasmXUndefs = new wasmInstance.VecVecUInt();\n  if (xUndefs) {\n    for (let i = 0; i < xUndefs.length; ++i) {\n      const vals = new wasmInstance.VectorUInt();\n      for (let j = 0; j < xUndefs[i].length; ++j) {\n        vals.push_back(xUndefs[i][j]);\n      }\n      wasmXUndefs.push_back(vals);\n    }\n  }\n\n  const regReport = wasmInstance.linearRegression(\n    wasmY,\n    wasmX,\n    wasmWeights,\n    wasmWeightsValues,\n    yName,\n    wasmXNames,\n    datasetName,\n    wasmYUndefs,\n    wasmXUndefs\n  );\n\n  const coefficients = [];\n  for (let i = 0; i < xNames.length + 1; ++i) {\n    coefficients.push({\n      Variable: regReport.GetXVarName(i),\n      Coefficient: regReport.GetCoefficient(i),\n      'Std Error': regReport.GetStdError(i),\n      't-Statistic': regReport.GetZValue(i),\n      Probability: regReport.GetProbability(i)\n    });\n  }\n\n  const result = {\n    type: 'linearRegression',\n    dependentVariable: yName,\n    independentVariables: xNames,\n    title: 'ORDINARY LEAST SQUARES ESTIMATION',\n    datasetName,\n    weightsId,\n    'Number of Observations': regReport.GetNoObservation(),\n    'Mean Dependent Var': regReport.GetMeanY(),\n    'Number of Variables': xNames.length + 1,\n    'SD Dependent Var': regReport.GetSDevY(),\n    'Degrees of Freedom': regReport.GetNoObservation() - xNames.length - 1,\n    'R-squared': regReport.GetR2(),\n    'Adjusted R-squared': regReport.GetR2_adjust(),\n    'F-statistic': regReport.GetFtest(),\n    'Prob(F-statistic)': regReport.GetFtestProb(),\n    'Sum Squared Residual': regReport.GetRSS(),\n    'Log Likelihood': regReport.GetLIK(),\n    'Sigma-Square': regReport.GetSIQ_SQ(),\n    'Akaike Info Criterion': regReport.GetAIC(),\n    'SE of Regression': Math.sqrt(regReport.GetSIQ_SQ()),\n    'Schwarz Criterion': regReport.GetOLS_SC(),\n    'Sigma-Square ML': regReport.GetSIQ_SQLM(),\n    'SE of Regression ML': Math.sqrt(regReport.GetSIQ_SQLM()),\n    'Variable Coefficients': coefficients,\n    'REGRESSION DIAGNOSTICS': {\n      'MULTICOLLINEARITY CONDITION NUMBER': regReport.GetConditionNumber(),\n      'TEST ON NORMALITY OF ERRORS': {\n        Test: 'Jarque-Bera',\n        'Jarque-Bera DF': regReport.GetJBtest(0),\n        'Jarque-Bera Value': regReport.GetJBtest(1),\n        'Jarque-Bera Probability': regReport.GetJBtest(2)\n      }\n    },\n    'DIAGNOSTICS FOR HETEROSKEDASTICITY': {\n      'BREUSCH-PAGAN TEST': {\n        Test: 'Breusch-Pagan',\n        'Breusch-Pagan DF': regReport.GetBPtest(0),\n        'Breusch-Pagan Value': regReport.GetBPtest(1),\n        'Breusch-Pagan Probability': regReport.GetBPtest(2)\n      },\n      'KOENKER-Bassett TEST': {\n        Test: 'Koenker-Bassett',\n        'Koenker-Bassett DF': regReport.GetKBtest(0),\n        'Koenker-Bassett Value': regReport.GetKBtest(1),\n        'Koenker-Bassett Probability': regReport.GetKBtest(2)\n      }\n    },\n    'DIAGNOSTICS FOR SPATIAL DEPENDENCE': {\n      \"Moran's I (error)\": {\n        Test: \"Moran's I (error)\",\n        \"Moran's I (error)\": regReport.GetMoranI(0),\n        'Moran\u2019s I (error) Z': regReport.GetMoranI(1),\n        'Moran\u2019s I (error) Probability': regReport.GetMoranI(2)\n      },\n      'Lagrange Multiplier (lag)': {\n        Test: 'Lagrange Multiplier (lag)',\n        'Lagrange Multiplier (lag) DF': regReport.GetLMLAG(0),\n        'Lagrange Multiplier (lag) Value': regReport.GetLMLAG(1),\n        'Lagrange Multiplier (lag) Probability': regReport.GetLMLAG(2)\n      },\n      'Robust LM (lag)': {\n        Test: 'Robust LM (lag)',\n        'Robust LM (lag) DF': regReport.GetLMLAGRob(0),\n        'Robust LM (lag) Value': regReport.GetLMLAGRob(1),\n        'Robust LM (lag) Probability': regReport.GetLMLAGRob(2)\n      },\n      'Lagrange Multiplier (error)': {\n        Test: 'Lagrange Multiplier (error)',\n        'Lagrange Multiplier (error) DF': regReport.GetLMERR(0),\n        'Lagrange Multiplier (error) Value': regReport.GetLMERR(1),\n        'Lagrange Multiplier (error) Probability': regReport.GetLMERR(2)\n      },\n      'Robust LM (error)': {\n        Test: 'Robust LM (error)',\n        'Robust LM (error) DF': regReport.GetLMERRRob(0),\n        'Robust LM (error) Value': regReport.GetLMERRRob(1),\n        'Robust LM (error) Probability': regReport.GetLMERRRob(2)\n      },\n      'Lagrange Multiplier (SARMA)': {\n        Test: 'Lagrange Multiplier (SARMA)',\n        'Lagrange Multiplier (SARMA) DF': regReport.GetLMSarma(0),\n        'Lagrange Multiplier (SARMA) Value': regReport.GetLMSarma(1),\n        'Lagrange Multiplier (SARMA) Probability': regReport.GetLMSarma(2)\n      }\n    }\n  };\n\n  return result;\n}\n\n// eslint-disable-next-line max-statements\nexport function printLinearRegressionResult(regressionReport: LinearRegressionResult): string {\n  // print the regression report using GeoDa's format\n  let output = '';\n  output += `Dataset: ${regressionReport.datasetName}\\n`;\n  output += `${regressionReport.weightsId ? `Weights: ${regressionReport.weightsId}\\n` : ''}`;\n  output += `Dependent Variable: ${regressionReport.dependentVariable}\\n`;\n  output += `Mean Dependent Var: ${regressionReport['Mean Dependent Var']}\\n`;\n  output += `SD Dependent Var: ${regressionReport['SD Dependent Var']}\\n`;\n  output += `No. Observations: ${regressionReport['Number of Observations']}\\n`;\n  output += `Degrees of Freedom: ${regressionReport['Degrees of Freedom']}\\n`;\n  output += `R-squared: ${regressionReport['R-squared']}\\n`;\n  output += `Adj. R-squared: ${regressionReport['Adjusted R-squared']}\\n`;\n  output += `F-statistic: ${regressionReport['F-statistic']}\\n`;\n  output += `Prob(F-statistic): ${regressionReport['Prob(F-statistic)']}\\n`;\n  output += `Log-Likelihood: ${regressionReport['Log Likelihood']}\\n`;\n  output += `Akaike Info Criterion: ${regressionReport['Akaike Info Criterion']}\\n`;\n  output += `Schwarz Criterion: ${regressionReport['Schwarz Criterion']}\\n`;\n  output += `Sum squared residual: ${regressionReport['Sum Squared Residual']}\\n`;\n  output += `Sigma-square: ${regressionReport['Sigma-Square']}\\n`;\n  output += `SE of regression: ${regressionReport['SE of Regression']}\\n`;\n  output += `Sigma-Square ML: ${regressionReport['Sigma-Square ML']}\\n`;\n  output += `S.E. of regression ML: ${Math.sqrt(regressionReport['Sigma-Square ML'])}\\n`;\n  output += `Variable Coefficients:\\n`;\n  output += `Variable\\tCoefficient\\tStd. Error\\tt-Statistic\\tProbability\\n`;\n  for (const coefficient of regressionReport['Variable Coefficients']) {\n    output += `${coefficient.Variable}\\t${coefficient.Coefficient}\\t${coefficient['Std Error']}\\t${coefficient['t-Statistic']}\\t${coefficient.Probability}\\n`;\n  }\n  output += `\\n\\n#REGRESSION DIAGNOSTICS*\\n`;\n  output += `Multicollinearity Condition Number: ${regressionReport['REGRESSION DIAGNOSTICS']['MULTICOLLINEARITY CONDITION NUMBER']}\\n`;\n  output += `Test on Normality of Errors:\\n`;\n  output += `Test\\tJarque-Bera DF\\tJarque-Bera Value\\tJarque-Bera Probability\\n`;\n  const normalityTest = regressionReport['REGRESSION DIAGNOSTICS']['TEST ON NORMALITY OF ERRORS'];\n  output += `${normalityTest.Test}\\t${normalityTest['Jarque-Bera DF']}\\t${normalityTest['Jarque-Bera Value']}\\t${normalityTest['Jarque-Bera Probability']}\\n\\n`;\n  output += `DIAGNOSTICS FOR HETEROSKEDASTICITY\\n`;\n  output += `Breusch-Pagan Test:\\n`;\n  output += `Test\\tBreusch-Pagan DF\\tBreusch-Pagan Value\\tBreusch-Pagan Probability\\n`;\n  const bpTest = regressionReport['DIAGNOSTICS FOR HETEROSKEDASTICITY']['BREUSCH-PAGAN TEST'];\n  output += `${bpTest.Test}\\t${bpTest['Breusch-Pagan DF']}\\t${bpTest['Breusch-Pagan Value']}\\t${bpTest['Breusch-Pagan Probability']}\\n`;\n  output += `Koenker-Bassett Test:\\n`;\n  output += `Test\\tKoenker-Bassett DF\\tKoenker-Bassett Value\\tKoenker-Bassett Probability\\n`;\n  const kbTest = regressionReport['DIAGNOSTICS FOR HETEROSKEDASTICITY']['KOENKER-Bassett TEST'];\n  output += `${kbTest.Test}\\t${kbTest['Koenker-Bassett DF']}\\t${kbTest['Koenker-Bassett Value']}\\t${kbTest['Koenker-Bassett Probability']}\\n\\n`;\n  if (regressionReport.weightsId) {\n    output += `DIAGNOSTICS FOR SPATIAL DEPENDENCE\\n`;\n    output += `Moran's I (error):\\n`;\n    output += `Test\\tMoran's I (error)\\tMoran\u2019s I (error) Z\\tMoran\u2019s I (error) Probability\\n`;\n    const moranI = regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE'][\"Moran's I (error)\"];\n    output += `${moranI.Test}\\t${moranI[\"Moran's I (error)\"]}\\t${moranI['Moran\u2019s I (error) Z']}\\t${moranI['Moran\u2019s I (error) Probability']}\\n`;\n    output += `Lagrange Multiplier (lag):\\n`;\n    output += `Test\\tLagrange Multiplier (lag) DF\\tLagrange Multiplier (lag) Value\\tLagrange Multiplier (lag) Probability\\n`;\n    const lmLag =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (lag)'];\n    output += `${lmLag.Test}\\t${lmLag['Lagrange Multiplier (lag) DF']}\\t${lmLag['Lagrange Multiplier (lag) Value']}\\t${lmLag['Lagrange Multiplier (lag) Probability']}\\n`;\n    output += `Robust LM (lag):\\n`;\n    output += `Test\\tRobust LM (lag) DF\\tRobust LM (lag) Value\\tRobust LM (lag) Probability\\n`;\n    const lmLagRob = regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Robust LM (lag)'];\n    output += `${lmLagRob.Test}\\t${lmLagRob['Robust LM (lag) DF']}\\t${lmLagRob['Robust LM (lag) Value']}\\t${lmLagRob['Robust LM (lag) Probability']}\\n`;\n    output += `Lagrange Multiplier (error):\\n`;\n    output += `Test\\tLagrange Multiplier (error) DF\\tLagrange Multiplier (error) Value\\tLagrange Multiplier (error) Probability\\n`;\n    const lmError =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (error)'];\n    output += `${lmError.Test}\\t${lmError['Lagrange Multiplier (error) DF']}\\t${lmError['Lagrange Multiplier (error) Value']}\\t${lmError['Lagrange Multiplier (error) Probability']}\\n`;\n    output += `Robust LM (error):\\n`;\n    output += `Test\\tRobust LM (error) DF\\tRobust LM (error) Value\\tRobust LM (error) Probability\\n`;\n    const lmErrorRob = regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Robust LM (error)'];\n    output += `${lmErrorRob.Test}\\t${lmErrorRob['Robust LM (error) DF']}\\t${lmErrorRob['Robust LM (error) Value']}\\t${lmErrorRob['Robust LM (error) Probability']}\\n`;\n    output += `Lagrange Multiplier (SARMA):\\n`;\n    output += `Test\\tLagrange Multiplier (SARMA) DF\\tLagrange Multiplier (SARMA) Value\\tLagrange Multiplier (SARMA) Probability\\n`;\n    const lmSarma =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (SARMA)'];\n    output += `${lmSarma.Test}\\t${lmSarma['Lagrange Multiplier (SARMA) DF']}\\t${lmSarma['Lagrange Multiplier (SARMA) Value']}\\t${lmSarma['Lagrange Multiplier (SARMA) Probability']}\\n`;\n    output += `Based on the spatial diagnostics, the recommended model is: ${selectSpatialModel(\n      regressionReport\n    )}\\n`;\n  }\n  return output;\n}\n\n// function to print number with 4 decimal places\nexport function printNumber(num: number): string {\n  // if num is float and has more than 4 decimal places, round it to 4 decimal places; otherwise return the number as is\n  const numStr = num.toString();\n  if (numStr.includes('.')) {\n    const decimalPlaces = numStr.split('.')[1].length;\n    if (decimalPlaces > 4) {\n      return num.toFixed(4);\n    }\n  }\n  return num.toString();\n}\n\nexport function printVariableCoefficients(\n  report: LinearRegressionResult | SpatialErrorResult | SpatialLagResult\n): string {\n  let output = '';\n  output += `Variable Coefficients: \\n\\n`;\n  output += `| Variable&nbsp;&nbsp; | Coefficient&nbsp;&nbsp; | Std. Error&nbsp;&nbsp; | t-Statistic | Probability |\\n`;\n  output += `|---------|-------------|------------|-------------|-------------|\\n`;\n  for (const coefficient of report['Variable Coefficients']) {\n    output += `${coefficient.Variable} | ${printNumber(coefficient.Coefficient)} | ${printNumber(\n      coefficient['Std Error']\n    )} | ${printNumber(coefficient['t-Statistic'])} | ${printNumber(coefficient.Probability)}\\n`;\n  }\n  return output;\n}\n\n// eslint-disable-next-line max-statements\nexport function printLinearRegressionResultUsingMarkdown(\n  regressionReport: LinearRegressionResult\n): string {\n  // print the linearRegression result in GeoDa's format using Markdown\n  let output = '';\n  output += `Dataset: ${regressionReport.datasetName}\\n`;\n  output += `${regressionReport.weightsId ? `Weights: ${regressionReport.weightsId}\\n` : ''}`;\n  output += '|  |  |  |  |\\n';\n  output += '|---|---|---|---|\\n';\n  output += `|Dependent Variable |${\n    regressionReport.dependentVariable\n  }| No. Observations |${printNumber(regressionReport['Number of Observations'])}|\\n`;\n  output += `|Mean Dependent Var | ${printNumber(\n    regressionReport['Mean Dependent Var']\n  )}| Number of Variables | ${regressionReport['Number of Variables']} |\\n`;\n  output += `|S.D. dependent var| ${printNumber(\n    regressionReport['SD Dependent Var']\n  )}| Degrees of Freedom | ${regressionReport['Degrees of Freedom']} |\\n`;\n\n  output += `&nbsp;  \\n`;\n  output += '|  |  |  |  |\\n';\n  output += `|R-squared| ${printNumber(regressionReport['R-squared'])}| F-statistic | ${printNumber(\n    regressionReport['F-statistic']\n  )}|\\n`;\n  output += `|Adj. R-squared| ${printNumber(\n    regressionReport['Adjusted R-squared']\n  )}| Prob(F-statistic)| ${printNumber(regressionReport['Prob(F-statistic)'])}|\\n`;\n  output += `|Sum squared residual| ${printNumber(\n    regressionReport['Sum Squared Residual']\n  )}|Log-Likelihood| ${printNumber(regressionReport['Log Likelihood'])}|\\n`;\n  output += `|Sigma-square| ${printNumber(regressionReport['Sigma-Square'])}|AIC| ${printNumber(\n    regressionReport['Akaike Info Criterion']\n  )}|\\n`;\n  output += `|S.E. of regression| ${printNumber(\n    regressionReport['SE of Regression']\n  )}|Schwarz Criterion| ${printNumber(regressionReport['Schwarz Criterion'])}|\\n`;\n  output += `|Sigma-square ML| ${printNumber(Math.sqrt(regressionReport['Sigma-Square ML']))}|||\\n`;\n  output += `|S.E. of regression ML| ${printNumber(\n    Math.sqrt(regressionReport['Sigma-Square ML'])\n  )}|||\\n`;\n\n  output += `&nbsp;  \\n`;\n  output += printVariableCoefficients(regressionReport);\n\n  output += `&nbsp;  \\n`;\n  output += `\\nREGRESSION DIAGNOSTICS\\n`;\n  output += `&nbsp;  \\n`;\n  output += `&nbsp;  \\n`;\n  output += `Multicollinearity Condition Number: ${printNumber(\n    regressionReport['REGRESSION DIAGNOSTICS']['MULTICOLLINEARITY CONDITION NUMBER']\n  )}\\n\\n`;\n  output += `Test on Normality of Errors:\\n\\n`;\n  output += `Test&nbsp;&nbsp; | DF&nbsp;&nbsp; | Value | Probability\\n`;\n  output += `-----|----------------|-------------------| -----------------------:\\n`;\n  const normalityTest = regressionReport['REGRESSION DIAGNOSTICS']['TEST ON NORMALITY OF ERRORS'];\n  output += `${normalityTest.Test} | ${printNumber(\n    normalityTest['Jarque-Bera DF']\n  )} | ${printNumber(normalityTest['Jarque-Bera Value'])} | ${printNumber(\n    normalityTest['Jarque-Bera Probability']\n  )}\\n\\n`;\n  output += `&nbsp;  \\n`;\n  output += `&nbsp;  \\n`;\n  output += `DIAGNOSTICS FOR HETEROSKEDASTICITY`;\n  output += `&nbsp;  \\n`;\n  output += `RANDOM COEFFICIENTS\\n\\n`;\n  output += `| Test | DF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Probability|\\n`;\n  output += `|------|----|-------|------------|\\n`;\n  const bpTest = regressionReport['DIAGNOSTICS FOR HETEROSKEDASTICITY']['BREUSCH-PAGAN TEST'];\n  output += `|${bpTest.Test}| ${printNumber(bpTest['Breusch-Pagan DF'])} | ${printNumber(\n    bpTest['Breusch-Pagan Value']\n  )} | ${printNumber(bpTest['Breusch-Pagan Probability'])}|\\n`;\n  const kbTest = regressionReport['DIAGNOSTICS FOR HETEROSKEDASTICITY']['KOENKER-Bassett TEST'];\n  output += `|${kbTest.Test}| ${printNumber(kbTest['Koenker-Bassett DF'])} | ${printNumber(\n    kbTest['Koenker-Bassett Value']\n  )} | ${printNumber(kbTest['Koenker-Bassett Probability'])} |\\n`;\n\n  if (regressionReport.weightsId) {\n    output += `&nbsp;  \\n`;\n    output += `&nbsp;  \\n`;\n    output += `DIAGNOSTICS FOR SPATIAL DEPENDENCE\\n\\n`;\n    output += `Test | MI/DF&nbsp;&nbsp; | Value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Probability\\n`;\n    output += `-----|-------|-------|------------\\n`;\n\n    const moranI = regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE'][\"Moran's I (error)\"];\n    output += `${moranI.Test} | ${printNumber(moranI[\"Moran's I (error)\"])} | ${printNumber(\n      moranI['Moran\u2019s I (error) Z']\n    )} | ${printNumber(moranI['Moran\u2019s I (error) Probability'])}\\n`;\n\n    const lmLag =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (lag)'];\n    output += `${lmLag.Test} | ${printNumber(\n      lmLag['Lagrange Multiplier (lag) DF']\n    )} | ${printNumber(lmLag['Lagrange Multiplier (lag) Value'])} | ${printNumber(\n      lmLag['Lagrange Multiplier (lag) Probability']\n    )}\\n`;\n\n    const lmLagRob = regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Robust LM (lag)'];\n    output += `${lmLagRob.Test} | ${printNumber(lmLagRob['Robust LM (lag) DF'])} | ${printNumber(\n      lmLagRob['Robust LM (lag) Value']\n    )} | ${printNumber(lmLagRob['Robust LM (lag) Probability'])}\\n`;\n\n    const lmError =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (error)'];\n    output += `${lmError.Test} | ${printNumber(\n      lmError['Lagrange Multiplier (error) DF']\n    )} | ${printNumber(lmError['Lagrange Multiplier (error) Value'])} | ${printNumber(\n      lmError['Lagrange Multiplier (error) Probability']\n    )}\\n`;\n\n    const lmErrorRob = regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Robust LM (error)'];\n    output += `${lmErrorRob.Test} | ${printNumber(\n      lmErrorRob['Robust LM (error) DF']\n    )} | ${printNumber(lmErrorRob['Robust LM (error) Value'])} | ${printNumber(\n      lmErrorRob['Robust LM (error) Probability']\n    )}\\n`;\n\n    const lmSarma =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (SARMA)'];\n    output += `${lmSarma.Test} | ${printNumber(\n      lmSarma['Lagrange Multiplier (SARMA) DF']\n    )} | ${printNumber(lmSarma['Lagrange Multiplier (SARMA) Value'])} | ${printNumber(\n      lmSarma['Lagrange Multiplier (SARMA) Probability']\n    )}\\n`;\n\n    output += `&nbsp;  \\n`;\n    output += `&nbsp;  \\n`;\n    output += `Based on the spatial diagnostics, the recommended model is: ${selectSpatialModel(\n      regressionReport\n    )}\\n`;\n  }\n\n  return output;\n}\n\n/**\n * function to check which spatail model should be used based on spatial diagnostics\n */\n// eslint-disable-next-line complexity\nexport function selectSpatialModel(regressionReport: LinearRegressionResult): string {\n  let model = 'OLS Model';\n  if (regressionReport.weightsId) {\n    // check the probability of Lagrange Multiplier (lag), and Lagrange Multiplier (error)\n    const lmLag =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (lag)'];\n    const lmError =\n      regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Lagrange Multiplier (error)'];\n\n    // if both of them are significant, check the probability of Robust LM (lag) and Robust LM (error)\n    if (\n      lmLag['Lagrange Multiplier (lag) Probability'] <= 0.05 &&\n      lmError['Lagrange Multiplier (error) Probability'] <= 0.05\n    ) {\n      const lmLagRob = regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Robust LM (lag)'];\n      const lmErrorRob =\n        regressionReport['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['Robust LM (error)'];\n      if (\n        lmLagRob['Robust LM (lag) Probability'] <= 0.05 &&\n        lmErrorRob['Robust LM (error) Probability'] <= 0.05\n      ) {\n        // if both of them are significant, return the model that has the smaller probability\n        // eslint-disable-next-line max-depth\n        if (\n          lmLag['Lagrange Multiplier (lag) Probability'] <\n          lmError['Lagrange Multiplier (error) Probability']\n        ) {\n          model = 'Spatial Lag Model';\n        } else {\n          model = 'Spatial Error Model';\n        }\n      } else if (lmLagRob['Robust LM (lag) Probability'] <= 0.05) {\n        model = 'Spatial Lag Model';\n      } else if (lmErrorRob['Robust LM (error) Probability'] <= 0.05) {\n        model = 'Spatial Error Model';\n      } else {\n        // if none of them is significant, return the lmLag or lmError model which has smaller probability\n        // eslint-disable-next-line max-depth\n        if (\n          lmLag['Lagrange Multiplier (lag) Probability'] <\n          lmError['Lagrange Multiplier (error) Probability']\n        ) {\n          model = 'Spatial Lag Model';\n        } else {\n          model = 'Spatial Error Model';\n        }\n      }\n    } else if (lmLag['Lagrange Multiplier (lag) Probability'] <= 0.05) {\n      //  if one of them is significant, return the model that is significant\n      model = 'Spatial Lag Model';\n    } else if (lmError['Lagrange Multiplier (error) Probability'] <= 0.05) {\n      model = 'Spatial Error Model';\n    } else {\n      // if none of them is significant (larger than 0.05), set model to OLS and return\n      model = 'OLS Model';\n    }\n  }\n  return model;\n}\n", "import {LinearRegressionProps, printNumber, printVariableCoefficients} from './linear-regression';\nimport {initWASM} from '../init';\n\nexport type SpatialLagResult = {\n  type: string;\n  dependentVariable: string;\n  independentVariables: string[];\n  title: string;\n  datasetName: string;\n  weightsId?: string;\n  'Number of Observations': number;\n  'Mean Dependent Var': number;\n  'Number of Variables': number;\n  'SD Dependent Var': number;\n  'Degrees of Freedom': number;\n  'Lag coefficient (Rho)': number;\n  'R-squared': number;\n  'Log Likelihood': number;\n  'Akaike Info Criterion': number;\n  'Sigma-Square': number;\n  'Schwarz Criterion': number;\n  'SE of Regression': number;\n  'Variable Coefficients': Array<{\n    Variable: string;\n    Coefficient: number;\n    'Std Error': number;\n    't-Statistic': number;\n    Probability: number;\n  }>;\n  'DIAGNOSTICS FOR HETEROSKEDASTICITY': {\n    'BREUSCH-PAGAN TEST': {\n      Test: string;\n      'Breusch-Pagan DF': number;\n      'Breusch-Pagan Value': number;\n      'Breusch-Pagan Probability': number;\n    };\n  };\n  'DIAGNOSTICS FOR SPATIAL DEPENDENCE': {\n    'LIKELIHOOD RATIO TEST': {\n      Test: string;\n      'Likelihood Ratio DF': number;\n      'Likelihood Ratio Value': number;\n      'Likelihood Ratio Probability': number;\n    };\n  };\n};\n\n// eslint-disable-next-line max-statements, complexity\nexport async function spatialLag({\n  x,\n  y,\n  weightsId,\n  weights,\n  weightsValues,\n  xNames,\n  yName,\n  datasetName,\n  xUndefs,\n  yUndefs\n}: LinearRegressionProps): Promise<SpatialLagResult> {\n  const wasmInstance = await initWASM();\n  // Create a new vector of doubles\n  const wasmY = new wasmInstance.VectorDouble();\n  for (let i = 0; i < y.length; ++i) {\n    wasmY.push_back(y[i]);\n  }\n  // Create a new VecVecDouble for x\n  const wasmX = new wasmInstance.VecVecDouble();\n  for (let i = 0; i < x.length; ++i) {\n    const vals = new wasmInstance.VectorDouble();\n    for (let j = 0; j < x[i].length; ++j) {\n      vals.push_back(x[i][j]);\n    }\n    wasmX.push_back(vals);\n  }\n  // Create a new VecVecUInt for weights\n  const wasmWeights = new wasmInstance.VecVecUInt();\n  if (weights) {\n    for (let i = 0; i < weights.length; ++i) {\n      const vals = new wasmInstance.VectorUInt();\n      for (let j = 0; j < weights[i].length; ++j) {\n        vals.push_back(weights[i][j]);\n      }\n      wasmWeights.push_back(vals);\n    }\n  }\n\n  // Create a new VecVecDouble for weightsValues\n  const wasmWeightsValues = new wasmInstance.VecVecDouble();\n  if (weightsValues) {\n    for (let i = 0; i < weightsValues.length; ++i) {\n      const vals = new wasmInstance.VectorDouble();\n      for (let j = 0; j < weightsValues[i].length; ++j) {\n        vals.push_back(weightsValues[i][j]);\n      }\n      wasmWeightsValues.push_back(vals);\n    }\n  }\n\n  // Create a new vector of strings for xNames\n  const wasmXNames = new wasmInstance.VectorString();\n  for (let i = 0; i < xNames.length; ++i) {\n    wasmXNames.push_back(xNames[i]);\n  }\n  // Create a new VectorInt for yUndefs\n  const wasmYUndefs = new wasmInstance.VectorUInt();\n  if (yUndefs) {\n    for (let i = 0; i < yUndefs.length; ++i) {\n      wasmYUndefs.push_back(yUndefs[i]);\n    }\n  }\n  // Create a new VecVecInt for xUndefs\n  const wasmXUndefs = new wasmInstance.VecVecUInt();\n  if (xUndefs) {\n    for (let i = 0; i < xUndefs.length; ++i) {\n      const vals = new wasmInstance.VectorUInt();\n      for (let j = 0; j < xUndefs[i].length; ++j) {\n        vals.push_back(xUndefs[i][j]);\n      }\n      wasmXUndefs.push_back(vals);\n    }\n  }\n\n  const regReport = wasmInstance.spatialLag(\n    wasmY,\n    wasmX,\n    wasmWeights,\n    wasmWeightsValues,\n    yName,\n    wasmXNames,\n    datasetName,\n    wasmYUndefs,\n    wasmXUndefs\n  );\n\n  const coefficients = [];\n  // 2 is added to xNames.length to account for the constant and the spatial lag of Y (W_Y)\n  for (let i = 0; i < xNames.length + 2; ++i) {\n    coefficients.push({\n      Variable: regReport.GetXVarName(i),\n      Coefficient: regReport.GetCoefficient(i),\n      'Std Error': regReport.GetStdError(i),\n      't-Statistic': regReport.GetZValue(i),\n      Probability: regReport.GetProbability(i)\n    });\n  }\n\n  const result = {\n    type: 'spatialLag',\n    dependentVariable: yName,\n    independentVariables: xNames,\n    title: 'SPATIAL LAG MODEL - MAXIMUM LIKELIHOOD ESTIMATION',\n    datasetName,\n    weightsId,\n    'Number of Observations': regReport.GetNoObservation(),\n    'Mean Dependent Var': regReport.GetMeanY(),\n    'Number of Variables': xNames.length + 1,\n    'SD Dependent Var': regReport.GetSDevY(),\n    'Degrees of Freedom': regReport.GetNoObservation() - xNames.length - 1,\n    'Lag coefficient (Rho)': regReport.GetCoefficient(0),\n    'R-squared': regReport.GetR2(),\n    'Log Likelihood': regReport.GetLIK(),\n    'Akaike Info Criterion': regReport.GetAIC(),\n    'Sigma-Square': regReport.GetSIQ_SQ(),\n    'Schwarz Criterion': regReport.GetOLS_SC(),\n    'SE of Regression': Math.sqrt(regReport.GetSIQ_SQ()),\n    'Variable Coefficients': coefficients,\n    'DIAGNOSTICS FOR HETEROSKEDASTICITY': {\n      'BREUSCH-PAGAN TEST': {\n        Test: 'Breusch-Pagan test',\n        'Breusch-Pagan DF': regReport.GetBPtest(0),\n        'Breusch-Pagan Value': regReport.GetBPtest(1),\n        'Breusch-Pagan Probability': regReport.GetBPtest(2)\n      }\n    },\n    'DIAGNOSTICS FOR SPATIAL DEPENDENCE': {\n      'LIKELIHOOD RATIO TEST': {\n        Test: 'Likelihood Ratio Test',\n        'Likelihood Ratio DF': regReport.GetLRTestValue(0),\n        'Likelihood Ratio Value': regReport.GetLRTestValue(1),\n        'Likelihood Ratio Probability': regReport.GetLRTestValue(2)\n      }\n    }\n  };\n\n  return result;\n}\n\n// eslint-disable-next-line max-statements\nexport function printSpatialLagResultUsingMarkdown(report: SpatialLagResult): string {\n  let output = '';\n\n  // printSummary\n  output += `Dataset: ${report.datasetName}\\n`;\n  output += `${report.weightsId ? `Weights: ${report.weightsId}\\n` : ''}`;\n  output += '|  |  |  |  |\\n';\n  output += '|---|---|---|---|\\n';\n  output += `|Dependent Variable |${report.dependentVariable}| No. Observations |${printNumber(\n    report['Number of Observations']\n  )}|\\n`;\n  output += `|Mean Dependent Var | ${printNumber(\n    report['Mean Dependent Var']\n  )}| Number of Variables | ${report['Number of Variables']} |\\n`;\n  output += `|S.D. dependent var| ${printNumber(\n    report['SD Dependent Var']\n  )}| Degrees of Freedom | ${report['Degrees of Freedom']} |\\n`;\n\n  // printMoreSummary\n  output += `|Lag coefficient (Rho) | ${printNumber(report['Lag coefficient (Rho)'])} |||\\n`;\n\n  output += `&nbsp;  \\n`;\n  output += '|  |  |  |  |\\n';\n  output += `|R-squared | ${printNumber(report['R-squared'])} | Log Likelihood | ${printNumber(\n    report['Log Likelihood']\n  )} |\\n`;\n  output += `|Sq. Correlation|-|Akaike Info Criterion|${printNumber(\n    report['Akaike Info Criterion']\n  )}|\\n`;\n  output += `|Sigma-Square|${printNumber(\n    report['Sigma-Square']\n  )}| Schwarz Criterion | ${printNumber(report['Schwarz Criterion'])} |\\n`;\n  output += `|SE of Regression|${printNumber(report['SE of Regression'])}|||\\n`;\n\n  // printVariableCoefficients\n  output += `&nbsp;  \\n`;\n  output += printVariableCoefficients(report);\n\n  // printRegressionDiagnostics\n  output += `&nbsp;  \\n`;\n  output += `&nbsp;  \\n`;\n  output += 'REGRESSION DIAGNOSTICS\\n';\n  output += 'DIAGNOSTICS FOR HETEROSKEDASTICITY\\n';\n  output += 'RANDOM COEFFICIENTS\\n';\n  output += `| Test | DF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Probability|\\n`;\n  output += `|------|----|-------|------------|\\n`;\n  const bpTest = report['DIAGNOSTICS FOR HETEROSKEDASTICITY']['BREUSCH-PAGAN TEST'];\n  output += `|${bpTest.Test}| ${printNumber(bpTest['Breusch-Pagan DF'])} | ${printNumber(\n    bpTest['Breusch-Pagan Value']\n  )} | ${printNumber(bpTest['Breusch-Pagan Probability'])}|\\n`;\n\n  // printDiagnosticsForSpatialDependence\n  output += `&nbsp;  \\n`;\n  output += `&nbsp;  \\n`;\n  output += 'DIAGNOSTICS FOR SPATIAL DEPENDENCE\\n';\n  output += 'SPATIAL LAG DEPENDENCE FOR WEIGHT MATRIX\\n';\n\n  output += `| Test | DF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Probability|\\n`;\n  output += `|------|----|-------|------------|\\n`;\n\n  const likelihood = report['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['LIKELIHOOD RATIO TEST'];\n  output += `|${likelihood.Test}| ${printNumber(likelihood['Likelihood Ratio DF'])} | ${printNumber(\n    likelihood['Likelihood Ratio Value']\n  )} | ${printNumber(likelihood['Likelihood Ratio Probability'])}|\\n`;\n\n  return output;\n}\n", "import {LinearRegressionProps, printNumber, printVariableCoefficients} from './linear-regression';\nimport {initWASM} from '../init';\n\nexport type SpatialErrorResult = {\n  type: string;\n  dependentVariable: string;\n  independentVariables: string[];\n  title: string;\n  datasetName: string;\n  weightsId?: string;\n  'Number of Observations': number;\n  'Mean Dependent Var': number;\n  'Number of Variables': number;\n  'SD Dependent Var': number;\n  'Degrees of Freedom': number;\n  'Lag coefficient (Lambda)': number;\n  'R-squared': number;\n  'Log Likelihood': number;\n  'Akaike Info Criterion': number;\n  'Sigma-Square': number;\n  'Schwarz Criterion': number;\n  'SE of Regression': number;\n  'Variable Coefficients': Array<{\n    Variable: string;\n    Coefficient: number;\n    'Std Error': number;\n    't-Statistic': number;\n    Probability: number;\n  }>;\n  'DIAGNOSTICS FOR HETEROSKEDASTICITY': {\n    'BREUSCH-PAGAN TEST': {\n      Test: string;\n      'Breusch-Pagan DF': number;\n      'Breusch-Pagan Value': number;\n      'Breusch-Pagan Probability': number;\n    };\n  };\n  'DIAGNOSTICS FOR SPATIAL DEPENDENCE': {\n    'LIKELIHOOD RATIO TEST': {\n      Test: string;\n      'Likelihood Ratio DF': number;\n      'Likelihood Ratio Value': number;\n      'Likelihood Ratio Probability': number;\n    };\n  };\n};\n\n// eslint-disable-next-line max-statements, complexity\nexport async function spatialError({\n  x,\n  y,\n  weightsId,\n  weights,\n  weightsValues,\n  xNames,\n  yName,\n  datasetName,\n  xUndefs,\n  yUndefs\n}: LinearRegressionProps): Promise<SpatialErrorResult> {\n  const wasmInstance = await initWASM();\n  // Create a new vector of doubles\n  const wasmY = new wasmInstance.VectorDouble();\n  for (let i = 0; i < y.length; ++i) {\n    wasmY.push_back(y[i]);\n  }\n  // Create a new VecVecDouble for x\n  const wasmX = new wasmInstance.VecVecDouble();\n  for (let i = 0; i < x.length; ++i) {\n    const vals = new wasmInstance.VectorDouble();\n    for (let j = 0; j < x[i].length; ++j) {\n      vals.push_back(x[i][j]);\n    }\n    wasmX.push_back(vals);\n  }\n  // Create a new VecVecUInt for weights\n  const wasmWeights = new wasmInstance.VecVecUInt();\n  if (weights) {\n    for (let i = 0; i < weights.length; ++i) {\n      const vals = new wasmInstance.VectorUInt();\n      for (let j = 0; j < weights[i].length; ++j) {\n        vals.push_back(weights[i][j]);\n      }\n      wasmWeights.push_back(vals);\n    }\n  }\n\n  // Create a new VecVecDouble for weightsValues\n  const wasmWeightsValues = new wasmInstance.VecVecDouble();\n  if (weightsValues) {\n    for (let i = 0; i < weightsValues.length; ++i) {\n      const vals = new wasmInstance.VectorDouble();\n      for (let j = 0; j < weightsValues[i].length; ++j) {\n        vals.push_back(weightsValues[i][j]);\n      }\n      wasmWeightsValues.push_back(vals);\n    }\n  }\n\n  // Create a new vector of strings for xNames\n  const wasmXNames = new wasmInstance.VectorString();\n  for (let i = 0; i < xNames.length; ++i) {\n    wasmXNames.push_back(xNames[i]);\n  }\n  // Create a new VectorInt for yUndefs\n  const wasmYUndefs = new wasmInstance.VectorUInt();\n  if (yUndefs) {\n    for (let i = 0; i < yUndefs.length; ++i) {\n      wasmYUndefs.push_back(yUndefs[i]);\n    }\n  }\n  // Create a new VecVecInt for xUndefs\n  const wasmXUndefs = new wasmInstance.VecVecUInt();\n  if (xUndefs) {\n    for (let i = 0; i < xUndefs.length; ++i) {\n      const vals = new wasmInstance.VectorUInt();\n      for (let j = 0; j < xUndefs[i].length; ++j) {\n        vals.push_back(xUndefs[i][j]);\n      }\n      wasmXUndefs.push_back(vals);\n    }\n  }\n\n  const regReport = wasmInstance.spatialLag(\n    wasmY,\n    wasmX,\n    wasmWeights,\n    wasmWeightsValues,\n    yName,\n    wasmXNames,\n    datasetName,\n    wasmYUndefs,\n    wasmXUndefs\n  );\n\n  const coefficients = [];\n  // 2 is added to xNames.length to account for the constant and lambda\n  for (let i = 0; i < xNames.length + 2; ++i) {\n    coefficients.push({\n      Variable: regReport.GetXVarName(i),\n      Coefficient: regReport.GetCoefficient(i),\n      'Std Error': regReport.GetStdError(i),\n      't-Statistic': regReport.GetZValue(i),\n      Probability: regReport.GetProbability(i)\n    });\n  }\n\n  const result = {\n    type: 'spatialError',\n    dependentVariable: yName,\n    independentVariables: xNames,\n    title: 'SPATIAL LAG MODEL - MAXIMUM LIKELIHOOD ESTIMATION',\n    datasetName,\n    weightsId,\n    'Number of Observations': regReport.GetNoObservation(),\n    'Mean Dependent Var': regReport.GetMeanY(),\n    'Number of Variables': xNames.length + 1,\n    'SD Dependent Var': regReport.GetSDevY(),\n    'Degrees of Freedom': regReport.GetNoObservation() - xNames.length,\n    'Lag coefficient (Lambda)': regReport.GetCoefficient(xNames.length + 1),\n    'R-squared': regReport.GetR2(),\n    'Log Likelihood': regReport.GetLIK(),\n    'Akaike Info Criterion': regReport.GetAIC(),\n    'Sigma-Square': regReport.GetSIQ_SQ(),\n    'Schwarz Criterion': regReport.GetOLS_SC(),\n    'SE of Regression': Math.sqrt(regReport.GetSIQ_SQ()),\n    'Variable Coefficients': coefficients,\n    'DIAGNOSTICS FOR HETEROSKEDASTICITY': {\n      'BREUSCH-PAGAN TEST': {\n        Test: 'Breusch-Pagan test',\n        'Breusch-Pagan DF': regReport.GetBPtest(0),\n        'Breusch-Pagan Value': regReport.GetBPtest(1),\n        'Breusch-Pagan Probability': regReport.GetBPtest(2)\n      }\n    },\n    'DIAGNOSTICS FOR SPATIAL DEPENDENCE': {\n      'LIKELIHOOD RATIO TEST': {\n        Test: 'Likelihood Ratio Test',\n        'Likelihood Ratio DF': regReport.GetLRTestValue(0),\n        'Likelihood Ratio Value': regReport.GetLRTestValue(1),\n        'Likelihood Ratio Probability': regReport.GetLRTestValue(2)\n      }\n    }\n  };\n\n  return result;\n}\n\n// eslint-disable-next-line max-statements\nexport function printSpatialErrorResultUsingMarkdown(report: SpatialErrorResult): string {\n  let output = '';\n\n  // printSummary\n  output += `Dataset: ${report.datasetName}\\n`;\n  output += `${report.weightsId ? `Weights: ${report.weightsId}\\n` : ''}`;\n  output += '|  |  |  |  |\\n';\n  output += '|---|---|---|---|\\n';\n  output += `|Dependent Variable |${report.dependentVariable}| No. Observations |${printNumber(\n    report['Number of Observations']\n  )}|\\n`;\n  output += `|Mean Dependent Var | ${printNumber(\n    report['Mean Dependent Var']\n  )}| Number of Variables | ${report['Number of Variables']} |\\n`;\n  output += `|S.D. dependent var| ${printNumber(\n    report['SD Dependent Var']\n  )}| Degrees of Freedom | ${report['Degrees of Freedom']} |\\n`;\n\n  // printMoreSummary\n  output += `|Lag coefficient (Lambda) | ${printNumber(report['Lag coefficient (Lambda)'])} |||\\n`;\n\n  output += `&nbsp;  \\n`;\n  output += '|  |  |  |  |\\n';\n  output += `|R-squared | ${printNumber(report['R-squared'])} | Log Likelihood | ${printNumber(\n    report['Log Likelihood']\n  )} |\\n`;\n  output += `|Sq. Correlation|-|Akaike Info Criterion|${printNumber(\n    report['Akaike Info Criterion']\n  )}|\\n`;\n  output += `|Sigma-Square|${printNumber(\n    report['Sigma-Square']\n  )}| Schwarz Criterion | ${printNumber(report['Schwarz Criterion'])} |\\n`;\n  output += `|SE of Regression|${printNumber(report['SE of Regression'])}|||\\n`;\n\n  // printVariableCoefficients\n  output += `&nbsp;  \\n`;\n  output += printVariableCoefficients(report);\n\n  // printRegressionDiagnostics\n  output += `&nbsp;  \\n`;\n  output += `&nbsp;  \\n`;\n  output += 'REGRESSION DIAGNOSTICS\\n';\n  output += 'DIAGNOSTICS FOR HETEROSKEDASTICITY\\n';\n  output += 'RANDOM COEFFICIENTS\\n';\n  output += `| Test | DF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Probability|\\n`;\n  output += `|------|----|-------|------------|\\n`;\n  const bpTest = report['DIAGNOSTICS FOR HETEROSKEDASTICITY']['BREUSCH-PAGAN TEST'];\n  output += `|${bpTest.Test}| ${printNumber(bpTest['Breusch-Pagan DF'])} | ${printNumber(\n    bpTest['Breusch-Pagan Value']\n  )} | ${printNumber(bpTest['Breusch-Pagan Probability'])}|\\n`;\n\n  // printDiagnosticsForSpatialDependence\n  output += `&nbsp;  \\n`;\n  output += `&nbsp;  \\n`;\n  output += 'DIAGNOSTICS FOR SPATIAL DEPENDENCE\\n';\n  output += 'SPATIAL ERROR DEPENDENCE FOR WEIGHT MATRIX\\n';\n\n  output += `| Test | DF&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Value&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Probability|\\n`;\n  output += `|------|----|-------|------------|\\n`;\n\n  const likelihood = report['DIAGNOSTICS FOR SPATIAL DEPENDENCE']['LIKELIHOOD RATIO TEST'];\n  output += `|${likelihood.Test}| ${printNumber(likelihood['Likelihood Ratio DF'])} | ${printNumber(\n    likelihood['Likelihood Ratio Value']\n  )} | ${printNumber(likelihood['Likelihood Ratio Probability'])}|\\n`;\n\n  return output;\n}\n"],
  "mappings": "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",
  "names": ["require_wasm", "__commonJSMin", "exports", "module", "geoda", "_scriptDir", "moduleArg", "Module", "readyPromiseResolve", "readyPromiseReject", "resolve", "reject", "moduleOverrides", "arguments_", "thisProgram", "quit_", "status", "toThrow", "ENVIRONMENT_IS_WEB", "ENVIRONMENT_IS_WORKER", "ENVIRONMENT_IS_NODE", "ENVIRONMENT_IS_SHELL", "scriptDirectory", "locateFile", "path", "read_", "readAsync", "readBinary", "fs", "nodePath", "filename", "binary", "isFileURI", "ret", "onload", "onerror", "err", "data", "url", "xhr", "out", "wasmBinary", "abort", "wasmMemory", "ABORT", "EXITSTATUS", "assert", "condition", "text", "HEAP", "HEAP8", "HEAPU8", "HEAP16", "HEAPU16", "HEAP32", "HEAPU32", "HEAPF32", "HEAPF64", "updateMemoryViews", "b", "__ATPRERUN__", "__ATINIT__", "__ATEXIT__", "__ATPOSTRUN__", "runtimeInitialized", "preRun", "addOnPreRun", "callRuntimeCallbacks", "initRuntime", "postRun", "addOnPostRun", "cb", "addOnInit", "addOnExit", "runDependencies", "runDependencyWatcher", "dependenciesFulfilled", "getUniqueRunDependency", "id", "addRunDependency", "removeRunDependency", "callback", "what", "e", "dataURIPrefix", "isDataURI", "wasmBinaryFile", "getBinarySync", "file", "getBinaryPromise", "binaryFile", "response", "instantiateArrayBuffer", "imports", "receiver", "reason", "instantiateAsync", "result", "createWasm", "info", "wasmImports", "receiveInstance", "instance", "wasmExports", "applySignatureConversions", "wasmTable", "receiveInstantiationResult", "tempDouble", "tempI64", "ExitStatus", "callbacks", "getValue", "ptr", "type", "noExitRuntime", "setValue", "value", "exceptionCaught", "exceptionLast", "uncaughtExceptionCount", "___cxa_rethrow", "ExceptionInfo", "excPtr", "destructor", "caught", "rethrown", "adjustedPtr", "isPointer", "___cxa_is_pointer_type", "adjusted", "convertI32PairToI53Checked", "lo", "hi", "___cxa_throw", "___syscall_dup3", "fd", "newfd", "flags", "___syscall_faccessat", "dirfd", "amode", "UTF8Decoder", "UTF8ArrayToString", "heapOrArray", "idx", "maxBytesToRead", "endIdx", "endPtr", "str", "u0", "u1", "u2", "ch", "UTF8ToString", "SYSCALLS", "___syscall_fcntl64", "cmd", "varargs", "___syscall_fstat64", "buf", "___syscall_ftruncate64", "length_low", "length_high", "length", "___syscall_ioctl", "op", "___syscall_lstat64", "___syscall_newfstatat", "___syscall_openat", "___syscall_stat64", "___syscall_unlinkat", "__embind_register_bigint", "primitiveType", "name", "size", "minRange", "maxRange", "embind_init_charCodes", "codes", "i", "embind_charCodes", "readLatin1String", "c", "awaitingDependencies", "registeredTypes", "typeDependencies", "BindingError", "throwBindingError", "message", "InternalError", "throwInternalError", "whenDependentTypesAreResolved", "myTypes", "dependentTypes", "getTypeConverters", "onComplete", "typeConverters", "myTypeConverters", "registerType", "unregisteredTypes", "registered", "dt", "sharedRegisterType", "rawType", "registeredInstance", "options", "GenericWireTypeSize", "__embind_register_bool", "trueValue", "falseValue", "wt", "destructors", "o", "pointer", "shallowCopyInternalPointer", "throwInstanceAlreadyDeleted", "obj", "getInstanceTypeName", "handle", "finalizationRegistry", "detachFinalizer", "runDestructor", "$$", "releaseClassHandle", "toDelete", "downcastPointer", "ptrClass", "desiredClass", "rv", "registeredPointers", "getInheritedInstanceCount", "registeredInstances", "getLiveInheritedInstances", "k", "deletionQueue", "flushPendingDeletes", "delayFunction", "setDelayFunction", "fn", "init_embind", "getBasestPointer", "class_", "getInheritedInstance", "makeClassHandle", "prototype", "record", "hasSmartPtrType", "hasSmartPtr", "attachFinalizer", "RegisteredPointer_fromWireType", "rawPointer", "makeDefaultHandle", "actualType", "registeredPointerRecord", "toType", "dp", "init_ClassHandle", "ClassHandle", "other", "leftClass", "left", "rightClass", "right", "clone", "createNamedFunction", "body", "ensureOverloadTable", "proto", "methodName", "humanName", "prevFunc", "args", "exposePublicSymbol", "numArguments", "char_0", "char_9", "makeLegalFunctionName", "f", "RegisteredClass", "constructor", "instancePrototype", "rawDestructor", "baseClass", "getActualType", "upcast", "downcast", "upcastPointer", "constNoSmartPtrRawPointerToWireType", "embindRepr", "handleClass", "genericPointerToWireType", "clonedHandle", "Emval", "nonConstNoSmartPtrRawPointerToWireType", "readPointer", "init_RegisteredPointer", "RegisteredPointer", "registeredClass", "isReference", "isConst", "isSmartPointer", "pointeeType", "sharingPolicy", "rawGetPointee", "rawConstructor", "rawShare", "replacePublicSymbol", "dynCallLegacy", "sig", "wasmTableMirror", "getWasmTableEntry", "funcPtr", "func", "dynCall", "rtn", "getDynCaller", "embind__requireFunction", "signature", "rawFunction", "makeDynCaller", "fp", "extendError", "baseErrorType", "errorName", "errorClass", "stack", "UnboundTypeError", "getTypeName", "___getTypeName", "_free", "throwUnboundTypeError", "types", "unboundTypes", "seen", "visit", "__embind_register_class", "rawPointerType", "rawConstPointerType", "baseClassRawType", "getActualTypeSignature", "upcastSignature", "downcastSignature", "destructorSignature", "legalFunctionName", "base", "_a", "basePrototype", "referenceConverter", "pointerConverter", "constPointerConverter", "heap32VectorToArray", "count", "firstElement", "array", "runDestructors", "del", "usesDestructorStack", "argTypes", "newFunc", "argumentList", "dummy", "r", "createJsInvoker", "isClassMethodFunc", "returns", "isAsync", "needsDestructorStack", "argCount", "argsList", "argsListWired", "invokerFnBody", "dtorStack", "args1", "returnVal", "paramName", "craftInvokerFunction", "classType", "cppInvokerFunc", "cppTargetFunc", "closureArgs", "invokerFn", "__embind_register_class_constructor", "rawClassType", "rawArgTypesAddr", "invokerSignature", "invoker", "rawArgTypes", "getFunctionName", "argsIndex", "__embind_register_class_function", "rawInvoker", "context", "isPureVirtual", "unboundTypesHandler", "method", "memberFunction", "emval_freelist", "emval_handles", "__emval_decref", "count_emval_handles", "init_emval", "EmValType", "__embind_register_emval", "v", "t", "floatReadValueFromPointer", "width", "__embind_register_float", "__embind_register_function", "invokerArgsArray", "integerReadValueFromPointer", "signed", "__embind_register_integer", "fromWireType", "bitshift", "isUnsignedType", "checkAssertions", "toTypeName", "toWireType", "__embind_register_memory_view", "dataTypeIndex", "typeMapping", "TA", "decodeMemoryView", "stringToUTF8Array", "heap", "outIdx", "maxBytesToWrite", "startIdx", "u", "stringToUTF8", "outPtr", "lengthBytesUTF8", "len", "__embind_register_std_string", "stdStringIsUTF8", "payload", "decodeStartPtr", "currentBytePtr", "maxRead", "stringSegment", "a", "valueIsOfTypeString", "_malloc", "charCode", "UTF16Decoder", "UTF16ToString", "maxIdx", "codeUnit", "stringToUTF16", "startPtr", "numCharsToWrite", "lengthBytesUTF16", "UTF32ToString", "utf32", "stringToUTF32", "trailSurrogate", "lengthBytesUTF32", "__embind_register_std_wstring", "charSize", "decodeString", "encodeString", "readCharAt", "lengthBytesUTF", "maxReadBytes", "__embind_register_void", "nowIsMonotonic", "__emscripten_get_now_is_monotonic", "requireRegisteredType", "impl", "__emval_take_value", "arg", "_abort", "_emscripten_date_now", "_emscripten_get_now", "_emscripten_memcpy_js", "dest", "src", "num", "getHeapMax", "growMemory", "pages", "_emscripten_resize_heap", "requestedSize", "oldSize", "maxHeapSize", "alignUp", "x", "multiple", "cutDown", "overGrownHeapSize", "newSize", "replacement", "ENV", "getExecutableName", "getEnvStrings", "lang", "env", "strings", "stringToAscii", "buffer", "_environ_get", "__environ", "environ_buf", "bufSize", "string", "_environ_sizes_get", "penviron_count", "penviron_buf_size", "runtimeKeepaliveCounter", "keepRuntimeAlive", "_proc_exit", "code", "exitJS", "implicit", "_exit", "_fd_close", "_fd_fdstat_get", "pbuf", "rightsBase", "rightsInheriting", "_fd_read", "iov", "iovcnt", "pnum", "_fd_seek", "offset_low", "offset_high", "whence", "newOffset", "offset", "printCharBuffers", "printChar", "stream", "curr", "flush_NO_FILESYSTEM", "_fd_write", "j", "isLeapYear", "year", "arraySum", "index", "sum", "MONTH_DAYS_LEAP", "MONTH_DAYS_REGULAR", "addDays", "date", "days", "newDate", "leap", "currentMonth", "daysInCurrentMonth", "intArrayFromString", "stringy", "dontAddNull", "u8array", "numBytesWritten", "writeArrayToMemory", "_strftime", "s", "maxsize", "format", "tm", "tm_zone", "pattern", "EXPANSION_RULES_1", "rule", "WEEKDAYS", "MONTHS", "leadingSomething", "digits", "character", "leadingNulls", "compareByDay", "date1", "date2", "sgn", "compare", "getFirstWeekStartDate", "janFourth", "getWeekBasedYear", "thisDate", "janFourthThisYear", "janFourthNextYear", "firstWeekStartThisYear", "firstWeekStartNextYear", "EXPANSION_RULES_2", "twelveHour", "val", "jan1", "dec31", "off", "ahead", "bytes", "_strftime_l", "loc", "___wasm_call_ctors", "a0", "stackSave", "stackRestore", "stackAlloc", "dynCall_viiij", "a1", "a2", "a3", "a4", "a5", "dynCall_viiiij", "a6", "dynCall_ji", "dynCall_vij", "dynCall_jiii", "dynCall_jiji", "dynCall_viijii", "dynCall_iiiiij", "dynCall_iiiiijj", "a7", "a8", "dynCall_iiiiiijj", "a9", "makeWrapper_pp", "makeWrapper_p", "calledRun", "runCaller", "run", "doRun", "import_wasm", "geoda", "geodaAny", "wasmInstancePromise", "initWASM", "resetWASM", "wasmInstance", "instance", "setWASM", "getWASM", "getGeometryCollectionFromBinaryGeometries", "geometryType", "binaryFeaturesChunks", "wasm", "pointsArray", "chunk", "createPointCollectionFromBinaryFeatures", "linesArray", "createLineCollectionFromBinaryFeatures", "polygonsArray", "createPolygonCollectionFromBinaryFeatures", "xs", "ys", "parts", "sizes", "convertToUTM", "chunkIndex", "points", "coords", "i", "index", "lineIndex", "lines", "geomOffsets", "numParts", "startPointIndex", "holes", "fixPolygon", "polygons", "polygonIndices", "primitivePolygonIndices", "primitiveIndex", "startIdx", "endIdx", "getDistanceNeighborsFromBinaryGeometries", "distanceThreshold", "isMile", "binaryGeometryType", "binaryGeometries", "neighbors", "wasmInstance", "initWASM", "geomCollection", "getGeometryCollectionFromBinaryGeometries", "result", "i", "nbrs", "nbrIndices", "j", "nbrSize", "getDistanceThresholds", "thresValues", "getNearestNeighborsFromBinaryGeometries", "k", "binaryGeometryType", "binaryGeometries", "neighbors", "wasmInstance", "initWASM", "geomCollection", "getGeometryCollectionFromBinaryGeometries", "result", "i", "nbrs", "nbrIndices", "j", "nbrSize", "getContiguityNeighborsFromBinaryGeometries", "binaryGeometryType", "binaryGeometries", "isQueen", "useCentroids", "precisionThreshold", "orderOfContiguity", "includeLowerOrder", "neighbors", "wasmInstance", "initWASM", "geomCollection", "getGeometryCollectionFromBinaryGeometries", "result", "i", "nbrs", "nbrIndices", "j", "nbrSize", "getMetaFromWeights", "weights", "isDistanceWeights", "n", "minNeighbors", "w", "maxNeighbors", "meanNeighbors", "acc", "medianNeighbors", "a", "b", "sumofNeighbors", "pctNoneZero", "vecDoubleToNumber", "data", "result", "n", "i", "vecIntToNumber", "vecStringToArray", "localMoran", "data", "neighbors", "permutation", "significanceCutoff", "seed", "wasm", "initWASM", "n", "wasmData", "i", "wasmNeighbors", "wasmUndefs", "nbrs", "wasmNeighborIndices", "j", "numNbrs", "result", "vecDoubleToNumber", "vecIntToNumber", "vecStringToArray", "bivariateLocalMoran", "data1", "data2", "wasmData1", "wasmData2", "localG", "data", "neighbors", "permutation", "significanceCutoff", "seed", "isGStar", "wasm", "initWASM", "n", "wasmData", "i", "wasmUndefs", "wasmNeighbors", "nbrs", "wasmNeighborIndices", "j", "numNbrs", "result", "vecDoubleToNumber", "vecIntToNumber", "vecStringToArray", "localGeary", "data", "neighbors", "permutation", "significanceCutoff", "seed", "wasm", "initWASM", "n", "wasmData", "i", "wasmNeighbors", "wasmUndefs", "nbrs", "wasmNeighborIndices", "j", "numNbrs", "result", "vecDoubleToNumber", "vecIntToNumber", "vecStringToArray", "multivariateLocalGeary", "vals", "quantileLisa", "k", "quantile", "data", "neighbors", "permutation", "significanceCutoff", "seed", "wasm", "initWASM", "n", "wasmData", "i", "wasmUndefs", "wasmNeighbors", "nbrs", "wasmNeighborIndices", "j", "numNbrs", "result", "vecDoubleToNumber", "vecIntToNumber", "vecStringToArray", "spatialLagMedian", "values", "neighbors", "n", "result", "i", "nn", "j", "vals", "a", "b", "mid", "RatesOptions", "calculateRates", "eventValues", "baseValues", "method", "neighbors", "rawRates", "excessRisk", "empiricalBayes", "spatialRates", "spatialEmpiricalBayes", "rateStandardizeEB", "n", "rates", "i", "risks", "SP", "SE", "lambda", "eHat", "results", "piRaw", "theta1", "pBar", "q1", "w", "theta2", "nn", "j", "bHat", "gamma", "a", "aHat", "se", "quantileBreaks", "k", "data", "wasm", "initWASM", "n", "wasmUndefs", "wasmData", "i", "result", "vecDoubleToNumber", "naturalBreaks", "k", "data", "wasm", "initWASM", "n", "wasmUndefs", "wasmData", "i", "result", "vecDoubleToNumber", "equalIntervalBreaks", "k", "data", "wasm", "initWASM", "n", "wasmUndefs", "wasmData", "i", "result", "vecDoubleToNumber", "percentileBreaks", "data", "wasm", "initWASM", "n", "wasmUndefs", "wasmData", "i", "result", "vecDoubleToNumber", "boxBreaks", "data", "hingeFactor", "wasm", "initWASM", "n", "wasmUndefs", "wasmData", "i", "result", "vecDoubleToNumber", "hinge15Breaks", "hinge30Breaks", "standardDeviationBreaks", "data", "wasm", "initWASM", "n", "wasmUndefs", "wasmData", "i", "result", "vecDoubleToNumber", "linearRegression", "x", "y", "weightsId", "weights", "weightsValues", "xNames", "yName", "datasetName", "xUndefs", "yUndefs", "wasmInstance", "initWASM", "wasmY", "i", "wasmX", "vals", "j", "wasmWeights", "wasmWeightsValues", "wasmXNames", "wasmYUndefs", "wasmXUndefs", "regReport", "coefficients", "printLinearRegressionResult", "regressionReport", "output", "coefficient", "normalityTest", "bpTest", "kbTest", "moranI", "lmLag", "lmLagRob", "lmError", "lmErrorRob", "lmSarma", "selectSpatialModel", "printNumber", "num", "numStr", "printVariableCoefficients", "report", "printLinearRegressionResultUsingMarkdown", "model", "spatialLag", "x", "y", "weightsId", "weights", "weightsValues", "xNames", "yName", "datasetName", "xUndefs", "yUndefs", "wasmInstance", "initWASM", "wasmY", "i", "wasmX", "vals", "j", "wasmWeights", "wasmWeightsValues", "wasmXNames", "wasmYUndefs", "wasmXUndefs", "regReport", "coefficients", "printSpatialLagResultUsingMarkdown", "report", "output", "printNumber", "printVariableCoefficients", "bpTest", "likelihood", "spatialError", "x", "y", "weightsId", "weights", "weightsValues", "xNames", "yName", "datasetName", "xUndefs", "yUndefs", "wasmInstance", "initWASM", "wasmY", "i", "wasmX", "vals", "j", "wasmWeights", "wasmWeightsValues", "wasmXNames", "wasmYUndefs", "wasmXUndefs", "regReport", "coefficients"]
}
