<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="geoda-weight_8cpp" kind="file" language="C++">
    <compoundname>geoda-weight.cpp</compoundname>
    <includes local="no">fstream</includes>
    <includes local="no">iostream</includes>
    <includes local="no">list</includes>
    <includes local="no">map</includes>
    <includes refid="geoda-weight_8h" local="yes">./geoda-weight.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.cpp</label>
        <link refid="geoda-weight_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>./geoda-weight.h</label>
        <link refid="geoda-weight_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fstream</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>list</label>
      </node>
      <node id="5">
        <label>map</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__WIN32__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="geoda-weight_8h" kindref="compound">./geoda-weight.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="class_geo_da_weight_1a1fa01dc2a6d2429f8f770c2e33ee22fd" kindref="member">GeoDaWeight::GeoDaWeight</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight" kindref="compound">GeoDaWeight</ref>&amp;<sp/>gw)<sp/>{<sp/><ref refid="class_geo_da_weight_1aa3e1faaedf2a837beb5403369ab52263" kindref="member">GeoDaWeight::operator=</ref>(gw);<sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight" kindref="compound">GeoDaWeight</ref>&amp;<sp/><ref refid="class_geo_da_weight_1aa3e1faaedf2a837beb5403369ab52263" kindref="member">GeoDaWeight::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight" kindref="compound">GeoDaWeight</ref>&amp;<sp/>gw)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="class_geo_da_weight_1a19c17fc62099cb6b1a16565e723b8837" kindref="member">weight_type</ref><sp/>=<sp/>gw.<ref refid="class_geo_da_weight_1a19c17fc62099cb6b1a16565e723b8837" kindref="member">weight_type</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><ref refid="class_geo_da_weight_1af9a8fa5c60b25e06c333073963ccb341" kindref="member">wflnm</ref><sp/>=<sp/>gw.<ref refid="class_geo_da_weight_1af9a8fa5c60b25e06c333073963ccb341" kindref="member">wflnm</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><ref refid="class_geo_da_weight_1ad004f777fe889ed0b1c6f95c3f04db90" kindref="member">id_field</ref><sp/>=<sp/>gw.<ref refid="class_geo_da_weight_1ad004f777fe889ed0b1c6f95c3f04db90" kindref="member">id_field</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="class_geo_da_weight_1a89bc922e9d5a9eeae04642657ba702a9" kindref="member">title</ref><sp/>=<sp/>gw.<ref refid="class_geo_da_weight_1a89bc922e9d5a9eeae04642657ba702a9" kindref="member">title</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="class_geo_da_weight_1a9cc78fc8b36b49d6a1b30d16f6f1a26e" kindref="member">symmetry_checked</ref><sp/>=<sp/>gw.<ref refid="class_geo_da_weight_1a9cc78fc8b36b49d6a1b30d16f6f1a26e" kindref="member">symmetry_checked</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><ref refid="class_geo_da_weight_1a8813dca99a1618758b762e3f150fcb6e" kindref="member">is_symmetric</ref><sp/>=<sp/>gw.<ref refid="class_geo_da_weight_1a8813dca99a1618758b762e3f150fcb6e" kindref="member">is_symmetric</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="class_geo_da_weight_1adb96b8f8109f295755ef01cbce08c611" kindref="member">num_obs</ref><sp/>=<sp/>gw.<ref refid="class_geo_da_weight_1adb96b8f8109f295755ef01cbce08c611" kindref="member">num_obs</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="class_geo_da_weight_1a3171780e2956a0c7cb1d97a5973ba391" kindref="member">sparsity</ref><sp/>=<sp/>gw.<ref refid="class_geo_da_weight_1a3171780e2956a0c7cb1d97a5973ba391" kindref="member">sparsity</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="class_geo_da_weight_1a1e3e270f84f87f3b318a39b01b5f85b3" kindref="member">min_nbrs</ref><sp/>=<sp/>gw.<ref refid="class_geo_da_weight_1a1e3e270f84f87f3b318a39b01b5f85b3" kindref="member">min_nbrs</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="class_geo_da_weight_1a77519fd84a63f54e521728fa162e13c1" kindref="member">max_nbrs</ref><sp/>=<sp/>gw.<ref refid="class_geo_da_weight_1a77519fd84a63f54e521728fa162e13c1" kindref="member">max_nbrs</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="class_geo_da_weight_1a68ed374b7f312f1604bc948a02dea3b9" kindref="member">mean_nbrs</ref><sp/>=<sp/>gw.<ref refid="class_geo_da_weight_1a68ed374b7f312f1604bc948a02dea3b9" kindref="member">mean_nbrs</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="class_geo_da_weight_1aefae6005ee5e45f7a47230f2d8eaab38" kindref="member">median_nbrs</ref><sp/>=<sp/>gw.<ref refid="class_geo_da_weight_1aefae6005ee5e45f7a47230f2d8eaab38" kindref="member">median_nbrs</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="class_geo_da_weight_1a739d89865d2ecdc73a12a9f453321d61" kindref="member">is_internal_use</ref><sp/>=<sp/>gw.<ref refid="class_geo_da_weight_1a739d89865d2ecdc73a12a9f453321d61" kindref="member">is_internal_use</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="class_geo_da_weight_1ab72df663ce49d6749d681116ac4af519" kindref="member">uid</ref><sp/>=<sp/>gw.<ref refid="class_geo_da_weight_1ab72df663ce49d6749d681116ac4af519" kindref="member">uid</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">std::string<sp/><ref refid="class_geo_da_weight_1aa4001499a1d9b951bc8e9d117006e5bb" kindref="member">GeoDaWeight::GetTitle</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1a89bc922e9d5a9eeae04642657ba702a9" kindref="member">title</ref>;<sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1af2dbbb6c89105924d5b4a365f5318abc" kindref="member">GeoDaWeight::IsSymmetric</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1a8813dca99a1618758b762e3f150fcb6e" kindref="member">is_symmetric</ref>;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1a9e15aa5966a8f8b709a711ded1aede68" kindref="member">GeoDaWeight::GetSparsity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1a3171780e2956a0c7cb1d97a5973ba391" kindref="member">sparsity</ref>;<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1a0e9794e655a0cdd3b56994286ddbee57" kindref="member">GeoDaWeight::GetNumObs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1adb96b8f8109f295755ef01cbce08c611" kindref="member">num_obs</ref>;<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1ae24f9c81ad64d031322ac1b35cafc439" kindref="member">GeoDaWeight::GetMinNbrs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1a1e3e270f84f87f3b318a39b01b5f85b3" kindref="member">min_nbrs</ref>;<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1a36cd1915c19f170af68622e4f472b066" kindref="member">GeoDaWeight::GetMaxNbrs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1a77519fd84a63f54e521728fa162e13c1" kindref="member">max_nbrs</ref>;<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1a080fa30e2b431a7f5b86c73ca0f115fc" kindref="member">GeoDaWeight::GetMeanNbrs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1a68ed374b7f312f1604bc948a02dea3b9" kindref="member">mean_nbrs</ref>;<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1ae8369eca0bce3af69f96bc5f305948fc" kindref="member">GeoDaWeight::GetMedianNbrs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1aefae6005ee5e45f7a47230f2d8eaab38" kindref="member">median_nbrs</ref>;<sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_geo_da_weight_1a081587de9ffd3ec89905299a1600df8c" kindref="member">GeoDaWeight::CheckConnectivity</ref>()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>from<sp/>first<sp/>node<sp/>in<sp/>W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>int&gt;&amp;<sp/>nbrs<sp/>=<sp/><ref refid="class_geo_da_weight_1a2935e2a6c263d50e50f9072944ddba9b" kindref="member">GetNeighbors</ref>(0);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nbrs.empty())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>std::map&lt;int,<sp/>bool&gt;<sp/>access_dict;<sp/><sp/></highlight><highlight class="comment">//<sp/>prevent<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>access_dict[0]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>std::list&lt;int&gt;<sp/>magzine;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nbrs.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(access_dict.find(nbrs[i])<sp/>==<sp/>access_dict.end())<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>magzine.push_back(nbrs[i]);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>access_dict[nbrs[i]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>breadth<sp/>first<sp/>traversal<sp/>(BFS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!magzine.empty())<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbr<sp/>=<sp/>magzine.front();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>magzine.pop_front();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>int&gt;&amp;<sp/>tmp_nbrs<sp/>=<sp/><ref refid="class_geo_da_weight_1a2935e2a6c263d50e50f9072944ddba9b" kindref="member">GetNeighbors</ref>(nbr);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tmp_nbrs.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(access_dict.find(tmp_nbrs[i])<sp/>==<sp/>access_dict.end())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>magzine.push_back(tmp_nbrs[i]);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>access_dict[tmp_nbrs[i]]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(access_dict.size()<sp/>&lt;<sp/><ref refid="class_geo_da_weight_1adb96b8f8109f295755ef01cbce08c611" kindref="member">num_obs</ref>)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>every<sp/>one<sp/>that<sp/>is<sp/>not<sp/>connected<sp/>via<sp/>BFS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_geo_da_weight_1adb96b8f8109f295755ef01cbce08c611" kindref="member">num_obs</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(access_dict.find(i)<sp/>==<sp/>access_dict.end())<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rev_conn<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>manually<sp/>check<sp/>if<sp/>this<sp/>one<sp/>is<sp/>connected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>int&gt;&amp;<sp/>tmp_nbrs<sp/>=<sp/><ref refid="class_geo_da_weight_1a2935e2a6c263d50e50f9072944ddba9b" kindref="member">GetNeighbors</ref>(i);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>tmp_nbrs.size();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(access_dict.find(tmp_nbrs[j])<sp/>!=<sp/>access_dict.end())<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rev_conn<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rev_conn<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>one<sp/>is<sp/>checked<sp/>being<sp/>not<sp/>connected,<sp/>return<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.cpp"/>
  </compounddef>
</doxygen>
