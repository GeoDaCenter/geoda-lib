<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="equal-interval-breaks_8cpp" kind="file" language="C++">
    <compoundname>equal-interval-breaks.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">limits</includes>
    <includes local="no">vector</includes>
    <includes refid="mapping_8h" local="yes">mapping/mapping.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/xun/github/geoda-lib/src/cpp/mapping/equal-interval-breaks.cpp</label>
        <link refid="equal-interval-breaks_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>mapping/mapping.h</label>
        <link refid="mapping_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>limits</label>
      </node>
      <node id="6">
        <label>utility</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mapping_8h" kindref="compound">mapping/mapping.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implementation<sp/>of<sp/>equal<sp/>interval<sp/>breaks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">std::vector&lt;double&gt;<sp/><ref refid="namespacegeoda_1a3456e8bc0515f5be88c5136dc8d175db" kindref="member">geoda::equal_interval_breaks</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>undefs)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_val<sp/>=<sp/>std::numeric_limits&lt;double&gt;::max();</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_val<sp/>=<sp/>std::numeric_limits&lt;double&gt;::lowest();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>data.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(undefs[i]<sp/>==<sp/>1)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>min_val<sp/>=<sp/>std::min(min_val,<sp/>data[i]);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>max_val<sp/>=<sp/>std::max(max_val,<sp/>data[i]);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>interval<sp/>=<sp/>(max_val<sp/>-<sp/>min_val)<sp/>/<sp/>k;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>std::vector&lt;double&gt;<sp/>breaks(k<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>k<sp/>-<sp/>1;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>breaks[i]<sp/>=<sp/>min_val<sp/>+<sp/>(i<sp/>+<sp/>1)<sp/>*<sp/>interval;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>breaks;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/xun/github/geoda-lib/src/cpp/mapping/equal-interval-breaks.cpp"/>
  </compounddef>
</doxygen>
