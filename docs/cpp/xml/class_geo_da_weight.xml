<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_geo_da_weight" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>GeoDaWeight</compoundname>
    <derivedcompoundref refid="class_vector_weight" prot="public" virt="non-virtual">VectorWeight</derivedcompoundref>
    <includes refid="geoda-weight_8h" local="no">geoda-weight.h</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_geo_da_weight_1af4dd01d313aca99b6a04be97dd9c61a8" prot="public" static="no" strong="no">
        <type></type>
        <name>WeightType</name>
        <qualifiedname>GeoDaWeight::WeightType</qualifiedname>
        <enumvalue id="class_geo_da_weight_1af4dd01d313aca99b6a04be97dd9c61a8a884a5108e33974006ebc7e7abece685e" prot="public">
          <name>gal_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_geo_da_weight_1af4dd01d313aca99b6a04be97dd9c61a8a1e90df419d0354d5c6d719e0927284c6" prot="public">
          <name>gwt_type</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="10" column="3" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="10" bodyend="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_geo_da_weight_1a19c17fc62099cb6b1a16565e723b8837" prot="public" static="no" mutable="no">
        <type><ref refid="class_geo_da_weight_1af4dd01d313aca99b6a04be97dd9c61a8" kindref="member">WeightType</ref></type>
        <definition>WeightType GeoDaWeight::weight_type</definition>
        <argsstring></argsstring>
        <name>weight_type</name>
        <qualifiedname>GeoDaWeight::weight_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="11" column="14" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_geo_da_weight_1af9a8fa5c60b25e06c333073963ccb341" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GeoDaWeight::wflnm</definition>
        <argsstring></argsstring>
        <name>wflnm</name>
        <qualifiedname>GeoDaWeight::wflnm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="12" column="15" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_geo_da_weight_1ad004f777fe889ed0b1c6f95c3f04db90" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GeoDaWeight::id_field</definition>
        <argsstring></argsstring>
        <name>id_field</name>
        <qualifiedname>GeoDaWeight::id_field</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="13" column="15" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_geo_da_weight_1a89bc922e9d5a9eeae04642657ba702a9" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GeoDaWeight::title</definition>
        <argsstring></argsstring>
        <name>title</name>
        <qualifiedname>GeoDaWeight::title</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="14" column="15" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_geo_da_weight_1a9cc78fc8b36b49d6a1b30d16f6f1a26e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool GeoDaWeight::symmetry_checked</definition>
        <argsstring></argsstring>
        <name>symmetry_checked</name>
        <qualifiedname>GeoDaWeight::symmetry_checked</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="15" column="8" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_geo_da_weight_1a8813dca99a1618758b762e3f150fcb6e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool GeoDaWeight::is_symmetric</definition>
        <argsstring></argsstring>
        <name>is_symmetric</name>
        <qualifiedname>GeoDaWeight::is_symmetric</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="16" column="8" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_geo_da_weight_1adb96b8f8109f295755ef01cbce08c611" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int GeoDaWeight::num_obs</definition>
        <argsstring></argsstring>
        <name>num_obs</name>
        <qualifiedname>GeoDaWeight::num_obs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="17" column="7" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_geo_da_weight_1a3171780e2956a0c7cb1d97a5973ba391" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double GeoDaWeight::sparsity</definition>
        <argsstring></argsstring>
        <name>sparsity</name>
        <qualifiedname>GeoDaWeight::sparsity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="18" column="10" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_geo_da_weight_1a1e3e270f84f87f3b318a39b01b5f85b3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int GeoDaWeight::min_nbrs</definition>
        <argsstring></argsstring>
        <name>min_nbrs</name>
        <qualifiedname>GeoDaWeight::min_nbrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="19" column="7" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_geo_da_weight_1a77519fd84a63f54e521728fa162e13c1" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int GeoDaWeight::max_nbrs</definition>
        <argsstring></argsstring>
        <name>max_nbrs</name>
        <qualifiedname>GeoDaWeight::max_nbrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="20" column="7" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_geo_da_weight_1a68ed374b7f312f1604bc948a02dea3b9" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double GeoDaWeight::mean_nbrs</definition>
        <argsstring></argsstring>
        <name>mean_nbrs</name>
        <qualifiedname>GeoDaWeight::mean_nbrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="21" column="10" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_geo_da_weight_1aefae6005ee5e45f7a47230f2d8eaab38" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double GeoDaWeight::median_nbrs</definition>
        <argsstring></argsstring>
        <name>median_nbrs</name>
        <qualifiedname>GeoDaWeight::median_nbrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="22" column="10" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_geo_da_weight_1a739d89865d2ecdc73a12a9f453321d61" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool GeoDaWeight::is_internal_use</definition>
        <argsstring></argsstring>
        <name>is_internal_use</name>
        <qualifiedname>GeoDaWeight::is_internal_use</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="23" column="8" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_geo_da_weight_1ab72df663ce49d6749d681116ac4af519" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string GeoDaWeight::uid</definition>
        <argsstring></argsstring>
        <name>uid</name>
        <qualifiedname>GeoDaWeight::uid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="24" column="15" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="24" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_geo_da_weight_1a1fa01dc2a6d2429f8f770c2e33ee22fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GeoDaWeight::GeoDaWeight</definition>
        <argsstring>()</argsstring>
        <name>GeoDaWeight</name>
        <qualifiedname>GeoDaWeight::GeoDaWeight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="27" column="3" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1ad9264bf9410dcd7d7879af261543a779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GeoDaWeight::GeoDaWeight</definition>
        <argsstring>(const GeoDaWeight &amp;gw)</argsstring>
        <name>GeoDaWeight</name>
        <qualifiedname>GeoDaWeight::GeoDaWeight</qualifiedname>
        <param>
          <type>const <ref refid="class_geo_da_weight" kindref="compound">GeoDaWeight</ref> &amp;</type>
          <declname>gw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="28" column="3" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.cpp" bodystart="12" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a3e7e08497eb89a3bc3ce5424204495fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual GeoDaWeight::~GeoDaWeight</definition>
        <argsstring>()</argsstring>
        <name>~GeoDaWeight</name>
        <qualifiedname>GeoDaWeight::~GeoDaWeight</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="30" column="11" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a081587de9ffd3ec89905299a1600df8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool GeoDaWeight::CheckConnectivity</definition>
        <argsstring>()</argsstring>
        <name>CheckConnectivity</name>
        <qualifiedname>GeoDaWeight::CheckConnectivity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="32" column="16" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.cpp" bodystart="44" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a91221ff8e297f16dc61fa00c631f7974" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool GeoDaWeight::CheckNeighbor</definition>
        <argsstring>(int obs_idx, int nbr_idx)=0</argsstring>
        <name>CheckNeighbor</name>
        <qualifiedname>GeoDaWeight::CheckNeighbor</qualifiedname>
        <reimplementedby refid="class_vector_weight_1aed5a3d8ffab28ee7fabd99f50c843469">CheckNeighbor</reimplementedby>
        <param>
          <type>int</type>
          <declname>obs_idx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbr_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="33" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a2935e2a6c263d50e50f9072944ddba9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::vector&lt; unsigned int &gt;</type>
        <definition>virtual const std::vector&lt; unsigned int &gt; GeoDaWeight::GetNeighbors</definition>
        <argsstring>(int obs_idx)=0</argsstring>
        <name>GetNeighbors</name>
        <qualifiedname>GeoDaWeight::GetNeighbors</qualifiedname>
        <reimplementedby refid="class_vector_weight_1a11e72fa70f837b222c733681ece4459f">GetNeighbors</reimplementedby>
        <param>
          <type>int</type>
          <declname>obs_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="34" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1ac0f0408d82d3e7ce533c7e81a9ae7803" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::vector&lt; double &gt;</type>
        <definition>virtual const std::vector&lt; double &gt; GeoDaWeight::GetNeighborWeights</definition>
        <argsstring>(int obs_idx)=0</argsstring>
        <name>GetNeighborWeights</name>
        <qualifiedname>GeoDaWeight::GetNeighborWeights</qualifiedname>
        <reimplementedby refid="class_vector_weight_1a8a0ce2cb9ee5ca063b536daffdffbf8b">GetNeighborWeights</reimplementedby>
        <param>
          <type>int</type>
          <declname>obs_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="35" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a37bde9a91acf23dcdf9e8e8b2786c4cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void GeoDaWeight::Update</definition>
        <argsstring>(const std::vector&lt; bool &gt; &amp;undefs)=0</argsstring>
        <name>Update</name>
        <qualifiedname>GeoDaWeight::Update</qualifiedname>
        <reimplementedby refid="class_vector_weight_1aa926828334446048eb4f00a262f4df76">Update</reimplementedby>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>undefs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="36" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1af2856e115c5106bfb5e8ea2be05a5cc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool GeoDaWeight::HasIsolates</definition>
        <argsstring>()=0</argsstring>
        <name>HasIsolates</name>
        <qualifiedname>GeoDaWeight::HasIsolates</qualifiedname>
        <reimplementedby refid="class_vector_weight_1af184320e3030f5d1d0d45d900a4eff43">HasIsolates</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="37" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a5fdcd087fbf1f40057696678a9cf25ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void GeoDaWeight::GetNbrStats</definition>
        <argsstring>()=0</argsstring>
        <name>GetNbrStats</name>
        <qualifiedname>GeoDaWeight::GetNbrStats</qualifiedname>
        <reimplementedby refid="class_vector_weight_1a882ceaacee73eea655d521f72759be91">GetNbrStats</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="38" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a85b17e272352fbd1555f6f1c9e94b7a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int GeoDaWeight::GetNbrSize</definition>
        <argsstring>(int obs_idx)=0</argsstring>
        <name>GetNbrSize</name>
        <qualifiedname>GeoDaWeight::GetNbrSize</qualifiedname>
        <reimplementedby refid="class_vector_weight_1aedcc6d5eb68d031f2053c21d4ae4d325">GetNbrSize</reimplementedby>
        <param>
          <type>int</type>
          <declname>obs_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="40" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a031b36540fdebf4f5510a998a670509a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double GeoDaWeight::SpatialLag</definition>
        <argsstring>(int obs_idx, const std::vector&lt; double &gt; &amp;data)=0</argsstring>
        <name>SpatialLag</name>
        <qualifiedname>GeoDaWeight::SpatialLag</qualifiedname>
        <reimplementedby refid="class_vector_weight_1a959edbca5d1f2a4373a4a40c11a7a50d">SpatialLag</reimplementedby>
        <param>
          <type>int</type>
          <declname>obs_idx</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="41" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a4373cae69dd72b9b929d9991084d3fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool GeoDaWeight::Save</definition>
        <argsstring>(const char *ofname, const char *layer_name, const char *id_var_name, const std::vector&lt; int &gt; &amp;id_vec)=0</argsstring>
        <name>Save</name>
        <qualifiedname>GeoDaWeight::Save</qualifiedname>
        <reimplementedby refid="class_vector_weight_1ac6ab3f64896c3b99218ecf740f61eaa8">Save</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>ofname</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>layer_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id_var_name</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>id_vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="42" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1abb2cd9fe703b2b7cd02cb2b711da49ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool GeoDaWeight::Save</definition>
        <argsstring>(const char *ofname, const char *layer_name, const char *id_var_name, const std::vector&lt; std::string &gt; &amp;id_vec)=0</argsstring>
        <name>Save</name>
        <qualifiedname>GeoDaWeight::Save</qualifiedname>
        <reimplementedby refid="class_vector_weight_1a22e9fec4fb8f7b67e6815ebb98ae422a">Save</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>ofname</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>layer_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>id_var_name</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>id_vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="45" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a98e57b733f67321d5278a77fdb5669b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void GeoDaWeight::SetNeighbors</definition>
        <argsstring>(int id, const std::vector&lt; int &gt; &amp;nbr_ids)=0</argsstring>
        <name>SetNeighbors</name>
        <qualifiedname>GeoDaWeight::SetNeighbors</qualifiedname>
        <reimplementedby refid="class_vector_weight_1a738e62ba4776570ef1818687e1f2a284">SetNeighbors</reimplementedby>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>nbr_ids</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="48" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a97a67a7e25c6ba5a45e265c4a8a8c222" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void GeoDaWeight::SetNeighborsAndWeights</definition>
        <argsstring>(int id, const std::vector&lt; int &gt; &amp;nbr_ids, const std::vector&lt; double &gt; &amp;w)=0</argsstring>
        <name>SetNeighborsAndWeights</name>
        <qualifiedname>GeoDaWeight::SetNeighborsAndWeights</qualifiedname>
        <reimplementedby refid="class_vector_weight_1a59ecfc42670cfdc120ed40e12b2e39cd">SetNeighborsAndWeights</reimplementedby>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>nbr_ids</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="50" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1af2dbbb6c89105924d5b4a365f5318abc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool GeoDaWeight::IsSymmetric</definition>
        <argsstring>() const</argsstring>
        <name>IsSymmetric</name>
        <qualifiedname>GeoDaWeight::IsSymmetric</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="53" column="16" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.cpp" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a9e15aa5966a8f8b709a711ded1aede68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double GeoDaWeight::GetSparsity</definition>
        <argsstring>() const</argsstring>
        <name>GetSparsity</name>
        <qualifiedname>GeoDaWeight::GetSparsity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="54" column="18" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.cpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1ae24f9c81ad64d031322ac1b35cafc439" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int GeoDaWeight::GetMinNbrs</definition>
        <argsstring>() const</argsstring>
        <name>GetMinNbrs</name>
        <qualifiedname>GeoDaWeight::GetMinNbrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="55" column="15" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.cpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a36cd1915c19f170af68622e4f472b066" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int GeoDaWeight::GetMaxNbrs</definition>
        <argsstring>() const</argsstring>
        <name>GetMaxNbrs</name>
        <qualifiedname>GeoDaWeight::GetMaxNbrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="56" column="15" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.cpp" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a080fa30e2b431a7f5b86c73ca0f115fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double GeoDaWeight::GetMeanNbrs</definition>
        <argsstring>() const</argsstring>
        <name>GetMeanNbrs</name>
        <qualifiedname>GeoDaWeight::GetMeanNbrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="57" column="18" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.cpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1ae8369eca0bce3af69f96bc5f305948fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double GeoDaWeight::GetMedianNbrs</definition>
        <argsstring>() const</argsstring>
        <name>GetMedianNbrs</name>
        <qualifiedname>GeoDaWeight::GetMedianNbrs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="58" column="18" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.cpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a0e9794e655a0cdd3b56994286ddbee57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int GeoDaWeight::GetNumObs</definition>
        <argsstring>() const</argsstring>
        <name>GetNumObs</name>
        <qualifiedname>GeoDaWeight::GetNumObs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="59" column="15" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.cpp" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a3cd8387d7d686a81eac3ac808dc47584" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool GeoDaWeight::IsInternalUse</definition>
        <argsstring>() const</argsstring>
        <name>IsInternalUse</name>
        <qualifiedname>GeoDaWeight::IsInternalUse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="60" column="16" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1adab909ac43e39aaca6d383c7dfc948d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool GeoDaWeight::IsMasked</definition>
        <argsstring>(int obs_idx)</argsstring>
        <name>IsMasked</name>
        <qualifiedname>GeoDaWeight::IsMasked</qualifiedname>
        <param>
          <type>int</type>
          <declname>obs_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="61" column="16" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1aa3e1faaedf2a837beb5403369ab52263" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="class_geo_da_weight" kindref="compound">GeoDaWeight</ref> &amp;</type>
        <definition>const GeoDaWeight &amp; GeoDaWeight::operator=</definition>
        <argsstring>(const GeoDaWeight &amp;gw)</argsstring>
        <name>operator=</name>
        <qualifiedname>GeoDaWeight::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_geo_da_weight" kindref="compound">GeoDaWeight</ref> &amp;</type>
          <declname>gw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="64" column="29" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.cpp" bodystart="14" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1aa4001499a1d9b951bc8e9d117006e5bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string GeoDaWeight::GetTitle</definition>
        <argsstring>() const</argsstring>
        <name>GetTitle</name>
        <qualifiedname>GeoDaWeight::GetTitle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="66" column="23" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.cpp" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a2d5a5487782eba2faeb27d9d08bfd226" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string GeoDaWeight::GetIDName</definition>
        <argsstring>() const</argsstring>
        <name>GetIDName</name>
        <qualifiedname>GeoDaWeight::GetIDName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="68" column="23" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_geo_da_weight_1a6e5ede000bf75e4453438d2077fc3053" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string GeoDaWeight::GetUID</definition>
        <argsstring>() const</argsstring>
        <name>GetUID</name>
        <qualifiedname>GeoDaWeight::GetUID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="70" column="23" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="70" bodyend="70"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>GeoDaWeight</label>
        <link refid="class_geo_da_weight"/>
      </node>
      <node id="2">
        <label>VectorWeight</label>
        <link refid="class_vector_weight"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" line="7" column="1" bodyfile="/Users/xun/github/geoda-lib/src/cpp/weights/geoda-weight.h" bodystart="7" bodyend="71"/>
    <listofallmembers>
      <member refid="class_geo_da_weight_1a081587de9ffd3ec89905299a1600df8c" prot="public" virt="virtual"><scope>GeoDaWeight</scope><name>CheckConnectivity</name></member>
      <member refid="class_geo_da_weight_1a91221ff8e297f16dc61fa00c631f7974" prot="public" virt="pure-virtual"><scope>GeoDaWeight</scope><name>CheckNeighbor</name></member>
      <member refid="class_geo_da_weight_1af4dd01d313aca99b6a04be97dd9c61a8a884a5108e33974006ebc7e7abece685e" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>gal_type</name></member>
      <member refid="class_geo_da_weight_1a1fa01dc2a6d2429f8f770c2e33ee22fd" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>GeoDaWeight</name></member>
      <member refid="class_geo_da_weight_1ad9264bf9410dcd7d7879af261543a779" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>GeoDaWeight</name></member>
      <member refid="class_geo_da_weight_1a2d5a5487782eba2faeb27d9d08bfd226" prot="public" virt="virtual"><scope>GeoDaWeight</scope><name>GetIDName</name></member>
      <member refid="class_geo_da_weight_1a36cd1915c19f170af68622e4f472b066" prot="public" virt="virtual"><scope>GeoDaWeight</scope><name>GetMaxNbrs</name></member>
      <member refid="class_geo_da_weight_1a080fa30e2b431a7f5b86c73ca0f115fc" prot="public" virt="virtual"><scope>GeoDaWeight</scope><name>GetMeanNbrs</name></member>
      <member refid="class_geo_da_weight_1ae8369eca0bce3af69f96bc5f305948fc" prot="public" virt="virtual"><scope>GeoDaWeight</scope><name>GetMedianNbrs</name></member>
      <member refid="class_geo_da_weight_1ae24f9c81ad64d031322ac1b35cafc439" prot="public" virt="virtual"><scope>GeoDaWeight</scope><name>GetMinNbrs</name></member>
      <member refid="class_geo_da_weight_1a85b17e272352fbd1555f6f1c9e94b7a9" prot="public" virt="pure-virtual"><scope>GeoDaWeight</scope><name>GetNbrSize</name></member>
      <member refid="class_geo_da_weight_1a5fdcd087fbf1f40057696678a9cf25ab" prot="public" virt="pure-virtual"><scope>GeoDaWeight</scope><name>GetNbrStats</name></member>
      <member refid="class_geo_da_weight_1a2935e2a6c263d50e50f9072944ddba9b" prot="public" virt="pure-virtual"><scope>GeoDaWeight</scope><name>GetNeighbors</name></member>
      <member refid="class_geo_da_weight_1ac0f0408d82d3e7ce533c7e81a9ae7803" prot="public" virt="pure-virtual"><scope>GeoDaWeight</scope><name>GetNeighborWeights</name></member>
      <member refid="class_geo_da_weight_1a0e9794e655a0cdd3b56994286ddbee57" prot="public" virt="virtual"><scope>GeoDaWeight</scope><name>GetNumObs</name></member>
      <member refid="class_geo_da_weight_1a9e15aa5966a8f8b709a711ded1aede68" prot="public" virt="virtual"><scope>GeoDaWeight</scope><name>GetSparsity</name></member>
      <member refid="class_geo_da_weight_1aa4001499a1d9b951bc8e9d117006e5bb" prot="public" virt="virtual"><scope>GeoDaWeight</scope><name>GetTitle</name></member>
      <member refid="class_geo_da_weight_1a6e5ede000bf75e4453438d2077fc3053" prot="public" virt="virtual"><scope>GeoDaWeight</scope><name>GetUID</name></member>
      <member refid="class_geo_da_weight_1af4dd01d313aca99b6a04be97dd9c61a8a1e90df419d0354d5c6d719e0927284c6" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>gwt_type</name></member>
      <member refid="class_geo_da_weight_1af2856e115c5106bfb5e8ea2be05a5cc9" prot="public" virt="pure-virtual"><scope>GeoDaWeight</scope><name>HasIsolates</name></member>
      <member refid="class_geo_da_weight_1ad004f777fe889ed0b1c6f95c3f04db90" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>id_field</name></member>
      <member refid="class_geo_da_weight_1a739d89865d2ecdc73a12a9f453321d61" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>is_internal_use</name></member>
      <member refid="class_geo_da_weight_1a8813dca99a1618758b762e3f150fcb6e" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>is_symmetric</name></member>
      <member refid="class_geo_da_weight_1a3cd8387d7d686a81eac3ac808dc47584" prot="public" virt="virtual"><scope>GeoDaWeight</scope><name>IsInternalUse</name></member>
      <member refid="class_geo_da_weight_1adab909ac43e39aaca6d383c7dfc948d6" prot="public" virt="virtual"><scope>GeoDaWeight</scope><name>IsMasked</name></member>
      <member refid="class_geo_da_weight_1af2dbbb6c89105924d5b4a365f5318abc" prot="public" virt="virtual"><scope>GeoDaWeight</scope><name>IsSymmetric</name></member>
      <member refid="class_geo_da_weight_1a77519fd84a63f54e521728fa162e13c1" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>max_nbrs</name></member>
      <member refid="class_geo_da_weight_1a68ed374b7f312f1604bc948a02dea3b9" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>mean_nbrs</name></member>
      <member refid="class_geo_da_weight_1aefae6005ee5e45f7a47230f2d8eaab38" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>median_nbrs</name></member>
      <member refid="class_geo_da_weight_1a1e3e270f84f87f3b318a39b01b5f85b3" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>min_nbrs</name></member>
      <member refid="class_geo_da_weight_1adb96b8f8109f295755ef01cbce08c611" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>num_obs</name></member>
      <member refid="class_geo_da_weight_1aa3e1faaedf2a837beb5403369ab52263" prot="public" virt="virtual"><scope>GeoDaWeight</scope><name>operator=</name></member>
      <member refid="class_geo_da_weight_1a4373cae69dd72b9b929d9991084d3fbd" prot="public" virt="pure-virtual"><scope>GeoDaWeight</scope><name>Save</name></member>
      <member refid="class_geo_da_weight_1abb2cd9fe703b2b7cd02cb2b711da49ad" prot="public" virt="pure-virtual"><scope>GeoDaWeight</scope><name>Save</name></member>
      <member refid="class_geo_da_weight_1a98e57b733f67321d5278a77fdb5669b7" prot="public" virt="pure-virtual"><scope>GeoDaWeight</scope><name>SetNeighbors</name></member>
      <member refid="class_geo_da_weight_1a97a67a7e25c6ba5a45e265c4a8a8c222" prot="public" virt="pure-virtual"><scope>GeoDaWeight</scope><name>SetNeighborsAndWeights</name></member>
      <member refid="class_geo_da_weight_1a3171780e2956a0c7cb1d97a5973ba391" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>sparsity</name></member>
      <member refid="class_geo_da_weight_1a031b36540fdebf4f5510a998a670509a" prot="public" virt="pure-virtual"><scope>GeoDaWeight</scope><name>SpatialLag</name></member>
      <member refid="class_geo_da_weight_1a9cc78fc8b36b49d6a1b30d16f6f1a26e" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>symmetry_checked</name></member>
      <member refid="class_geo_da_weight_1a89bc922e9d5a9eeae04642657ba702a9" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>title</name></member>
      <member refid="class_geo_da_weight_1ab72df663ce49d6749d681116ac4af519" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>uid</name></member>
      <member refid="class_geo_da_weight_1a37bde9a91acf23dcdf9e8e8b2786c4cf" prot="public" virt="pure-virtual"><scope>GeoDaWeight</scope><name>Update</name></member>
      <member refid="class_geo_da_weight_1a19c17fc62099cb6b1a16565e723b8837" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>weight_type</name></member>
      <member refid="class_geo_da_weight_1af4dd01d313aca99b6a04be97dd9c61a8" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>WeightType</name></member>
      <member refid="class_geo_da_weight_1af9a8fa5c60b25e06c333073963ccb341" prot="public" virt="non-virtual"><scope>GeoDaWeight</scope><name>wflnm</name></member>
      <member refid="class_geo_da_weight_1a3e7e08497eb89a3bc3ce5424204495fd" prot="public" virt="virtual"><scope>GeoDaWeight</scope><name>~GeoDaWeight</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
