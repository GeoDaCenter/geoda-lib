{
  "version": 3,
  "sources": ["../wasm/index.cjs", "../src/init.ts", "../src/features/geometry.ts", "../src/operations/centroids.ts", "../src/weights/distance-based-neighbors.ts", "../src/utils.ts", "../src/operations/buffer.ts", "../src/operations/join.ts", "../src/operations/parallel-join-utils.ts", "../src/operations/parallel-join.ts", "../src/operations/union.ts", "../src/operations/count.ts", "../src/weights/nearest-neighbors.ts", "../src/statistics/local-moran.ts", "../src/features/binary-geometry.ts", "../src/mapping/quantile.ts"],
  "sourcesContent": ["\nvar geoda = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(moduleArg = {}) {\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,binary?undefined:\"utf8\",(err,data)=>{if(err)onerror(err);else onload(binary?data.buffer:data)})};if(!Module[\"thisProgram\"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\\\/g,\"/\")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow};Module[\"inspect\"]=()=>\"[Emscripten Module object]\"}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"geoda.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(binaryFile)){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+binaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(()=>getBinarySync(binaryFile))}else if(readAsync){return new Promise((resolve,reject)=>{readAsync(binaryFile,response=>resolve(new Uint8Array(response)),reject)})}}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(instance=>instance).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&!isFileURI(binaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(`wasm streaming compile failed: ${reason}`);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;exports=applySignatureConversions(exports);wasmExports=exports;wasmMemory=wasmExports[\"x\"];updateMemoryViews();wasmTable=wasmExports[\"z\"];addOnInit(wasmExports[\"y\"]);removeRunDependency(\"wasm-instantiate\");return exports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var exceptionCaught=[];var exceptionLast=0;var uncaughtExceptionCount=0;var ___cxa_rethrow=()=>{var info=exceptionCaught.pop();if(!info){abort(\"no exception to throw\")}var ptr=info.excPtr;if(!info.get_rethrown()){exceptionCaught.push(info);info.set_rethrown(true);info.set_caught(false);uncaughtExceptionCount++}exceptionLast=ptr;throw exceptionLast};function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>>2>>>0]=type};this.get_type=function(){return HEAPU32[this.ptr+4>>>2>>>0]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>>2>>>0]=destructor};this.get_destructor=function(){return HEAPU32[this.ptr+8>>>2>>>0]};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>>0>>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>>0>>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>>0>>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>>0>>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor)};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>>2>>>0]=adjustedPtr};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>>2>>>0]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>>2>>>0]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}function ___cxa_throw(ptr,type,destructor){ptr>>>=0;type>>>=0;destructor>>>=0;var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw exceptionLast}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){primitiveType>>>=0;name>>>=0;size>>>=0}var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes=undefined;var readLatin1String=ptr=>{var ret=\"\";var c=ptr;while(HEAPU8[c>>>0]){ret+=embind_charCodes[HEAPU8[c++>>>0]]}return ret};var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var BindingError=undefined;var throwBindingError=message=>{throw new BindingError(message)};var InternalError=undefined;var throwInternalError=message=>{throw new InternalError(message)};var whenDependentTypesAreResolved=(myTypes,dependentTypes,getTypeConverters)=>{myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}};function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type \"${name}\" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;function __embind_register_bool(rawType,name,trueValue,falseValue){rawType>>>=0;name>>>=0;name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":function(pointer){return this[\"fromWireType\"](HEAPU8[pointer>>>0])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}var shallowCopyInternalPointer=o=>({count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType});var throwInstanceAlreadyDeleted=obj=>{function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")};var finalizationRegistry=false;var detachFinalizer=handle=>{};var runDestructor=$$=>{if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}};var releaseClassHandle=$$=>{$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}};var downcastPointer=(ptr,ptrClass,desiredClass)=>{if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)};var registeredPointers={};var getInheritedInstanceCount=()=>Object.keys(registeredInstances).length;var getLiveInheritedInstances=()=>{var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv};var deletionQueue=[];var flushPendingDeletes=()=>{while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}};var delayFunction=undefined;var setDelayFunction=fn=>{delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}};var init_embind=()=>{Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction};var registeredInstances={};var getBasestPointer=(class_,ptr)=>{if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr};var getInheritedInstance=(class_,ptr)=>{ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]};var makeClassHandle=(prototype,record)=>{if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))};function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}var attachFinalizer=handle=>{if(\"undefined\"===typeof FinalizationRegistry){attachFinalizer=handle=>handle;return handle}finalizationRegistry=new FinalizationRegistry(info=>{releaseClassHandle(info.$$)});attachFinalizer=handle=>{var $$=handle.$$;var hasSmartPtr=!!$$.smartPtr;if(hasSmartPtr){var info={$$:$$};finalizationRegistry.register(handle,info,handle)}return handle};detachFinalizer=handle=>finalizationRegistry.unregister(handle);return attachFinalizer(handle)};function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}var init_ClassHandle=()=>{ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater};function ClassHandle(){}var char_0=48;var char_9=57;var makeLegalFunctionName=name=>{if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return`_${name}`}return name};function createNamedFunction(name,body){name=makeLegalFunctionName(name);return{[name]:function(){return body.apply(this,arguments)}}[name]}var ensureOverloadTable=(proto,methodName,humanName)=>{if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${arguments.length}) - expects one of (${proto[methodName].overloadTable})!`)}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}};var exposePublicSymbol=(name,value,numArguments)=>{if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(`Cannot register public name '${name}' twice`)}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`)}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}};function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}var upcastPointer=(ptr,ptrClass,desiredClass)=>{while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr};function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}return 0}if(!handle.$$){throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(`Cannot convert argument of type ${handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name} to parameter type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(`Cannot convert argument of type ${handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name} to parameter type ${this.name}`)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(()=>clonedHandle[\"delete\"]()));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}return 0}if(!handle.$$){throwBindingError(`Cannot pass \"${embindRepr(handle)}\" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}if(handle.$$.ptrType.isConst){throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function readPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>>2>>>0])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}var RegisteredPointer_deleteObject=handle=>{if(handle!==null){handle[\"delete\"]()}};var init_RegisteredPointer=()=>{RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=GenericWireTypeSize;RegisteredPointer.prototype[\"readValueFromPointer\"]=readPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType};function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}var replacePublicSymbol=(name,value,numArguments)=>{if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}};var dynCallLegacy=(sig,ptr,args)=>{var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)};var wasmTableMirror=[];var getWasmTableEntry=funcPtr=>{var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func};var dynCall=(sig,ptr,args)=>{if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}var rtn=getWasmTableEntry(ptr).apply(null,args);return rtn};var getDynCaller=(sig,ptr)=>{var argCache=[];return function(){argCache.length=0;Object.assign(argCache,arguments);return dynCall(sig,ptr,argCache)}};var embind__requireFunction=(signature,rawFunction)=>{signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`)}return fp};var extendError=(baseErrorType,errorName)=>{var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return`${this.name}: ${this.message}`}};return errorClass};var UnboundTypeError=undefined;var getTypeName=type=>{var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv};var throwUnboundTypeError=(message,types)=>{var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(`${message}: `+unboundTypes.map(getTypeName).join([\", \"]))};function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){rawType>>>=0;rawPointerType>>>=0;rawConstPointerType>>>=0;baseClassRawType>>>=0;getActualTypeSignature>>>=0;getActualType>>>=0;upcastSignature>>>=0;upcast>>>=0;downcastSignature>>>=0;downcast>>>=0;name>>>=0;destructorSignature>>>=0;rawDestructor>>>=0;name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(`Cannot construct ${name} due to unbound types`,[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${arguments.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`)}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);if(registeredClass.baseClass){if(registeredClass.baseClass.__derivedClasses===undefined){registeredClass.baseClass.__derivedClasses=[]}registeredClass.baseClass.__derivedClasses.push(registeredClass)}var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}var heap32VectorToArray=(count,firstElement)=>{var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>>2>>>0])}return array};var runDestructors=destructors=>{while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}};function newFunc(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(`new_ called with constructor type ${typeof constructor} which is not a function`)}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc,isAsync){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=`\\n        return function ${makeLegalFunctionName(humanName)}(${argsList}) {\\n        if (arguments.length !== ${argCount-2}) {\\n          throwBindingError('function ${humanName} called with ' + arguments.length + ' arguments, expected ${argCount-2}');\\n        }`;if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns||isAsync?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);return newFunc(Function,args1).apply(null,args2)}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){rawClassType>>>=0;rawArgTypesAddr>>>=0;invokerSignature>>>=0;invoker>>>=0;rawConstructor>>>=0;var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=`constructor ${classType.name}`;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount-1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`)}classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`,rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,argTypes=>{argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual,isAsync){rawClassType>>>=0;methodName>>>=0;rawArgTypesAddr>>>=0;invokerSignature>>>=0;rawInvoker>>>=0;context>>>=0;var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=`${classType.name}.${methodName}`;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`,rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context,isAsync);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}function handleAllocatorInit(){Object.assign(HandleAllocator.prototype,{get(id){return this.allocated[id]},has(id){return this.allocated[id]!==undefined},allocate(handle){var id=this.freelist.pop()||this.allocated.length;this.allocated[id]=handle;return id},free(id){this.allocated[id]=undefined;this.freelist.push(id)}})}function HandleAllocator(){this.allocated=[undefined];this.freelist=[]}var emval_handles=new HandleAllocator;function __emval_decref(handle){handle>>>=0;if(handle>=emval_handles.reserved&&0===--emval_handles.get(handle).refcount){emval_handles.free(handle)}}var count_emval_handles=()=>{var count=0;for(var i=emval_handles.reserved;i<emval_handles.allocated.length;++i){if(emval_handles.allocated[i]!==undefined){++count}}return count};var init_emval=()=>{emval_handles.allocated.push({value:undefined},{value:null},{value:true},{value:false});emval_handles.reserved=emval_handles.allocated.length;Module[\"count_emval_handles\"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handles.get(handle).value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{return emval_handles.allocate({refcount:1,value:value})}}}};function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>>2>>>0])}var __embind_register_emval=function(rawType,name){rawType>>>=0;name>>>=0;name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":(destructors,value)=>Emval.toHandle(value),\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})};var enumReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?function(pointer){return this[\"fromWireType\"](HEAP8[pointer>>>0>>>0])}:function(pointer){return this[\"fromWireType\"](HEAPU8[pointer>>>0>>>0])};case 2:return signed?function(pointer){return this[\"fromWireType\"](HEAP16[pointer>>>1>>>0])}:function(pointer){return this[\"fromWireType\"](HEAPU16[pointer>>>1>>>0])};case 4:return signed?function(pointer){return this[\"fromWireType\"](HEAP32[pointer>>>2>>>0])}:function(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>>2>>>0])};default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};function __embind_register_enum(rawType,name,size,isSigned){rawType>>>=0;name>>>=0;size>>>=0;name=readLatin1String(name);function ctor(){}ctor.values={};registerType(rawType,{name:name,constructor:ctor,\"fromWireType\":function(c){return this.constructor.values[c]},\"toWireType\":(destructors,c)=>c.value,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":enumReadValueFromPointer(name,size,isSigned),destructorFunction:null});exposePublicSymbol(name,ctor)}var requireRegisteredType=(rawType,humanName)=>{var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl};function __embind_register_enum_value(rawEnumType,name,enumValue){rawEnumType>>>=0;name>>>=0;enumValue>>>=0;var enumType=requireRegisteredType(rawEnumType,\"enum\");name=readLatin1String(name);var Enum=enumType.constructor;var Value=Object.create(enumType.constructor.prototype,{value:{value:enumValue},constructor:{value:createNamedFunction(`${enumType.name}_${name}`,function(){})}});Enum.values[enumValue]=Value;Enum[name]=Value}var embindRepr=v=>{if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}};var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>>2>>>0])};case 8:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>>3>>>0])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=function(rawType,name,size){rawType>>>=0;name>>>=0;size>>>=0;name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":value=>value,\"toWireType\":(destructors,value)=>value,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":floatReadValueFromPointer(name,size),destructorFunction:null})};function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn,isAsync){name>>>=0;rawArgTypesAddr>>>=0;signature>>>=0;rawInvoker>>>=0;fn>>>=0;var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(`Cannot call ${name} due to unbound types`,argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn,isAsync),argCount-1);return[]})}var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer>>>0>>>0]:pointer=>HEAPU8[pointer>>>0>>>0];case 2:return signed?pointer=>HEAP16[pointer>>>1>>>0]:pointer=>HEAPU16[pointer>>>1>>>0];case 4:return signed?pointer=>HEAP32[pointer>>>2>>>0]:pointer=>HEAPU32[pointer>>>2>>>0];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};function __embind_register_integer(primitiveType,name,size,minRange,maxRange){primitiveType>>>=0;name>>>=0;size>>>=0;name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){rawType>>>=0;name>>>=0;var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>>2>>>0];var data=HEAPU32[handle+4>>>2>>>0];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{outIdx>>>=0;if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++>>>0]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++>>>0]=192|u>>6;heap[outIdx++>>>0]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++>>>0]=224|u>>12;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++>>>0]=240|u>>18;heap[outIdx++>>>0]=128|u>>12&63;heap[outIdx++>>>0]=128|u>>6&63;heap[outIdx++>>>0]=128|u&63}}heap[outIdx>>>0]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{idx>>>=0;var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>{ptr>>>=0;return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"};var __embind_register_std_string=function(rawType,name){rawType>>>=0;name>>>=0;name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":value=>{var length=HEAPU32[value>>>2>>>0];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr>>>0]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i>>>0])}str=a.join(\"\")}_free(value);return str},\"toWireType\":(destructors,value)=>{if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>>2>>>0]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i>>>0]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i>>>0]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":readPointer,destructorFunction:ptr=>_free(ptr)})};var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx>>>0])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr>>>0,endPtr>>>0));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>>1>>>0];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>>1>>>0]=codeUnit;outPtr+=2}HEAP16[outPtr>>>1>>>0]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>>2>>>0];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{outPtr>>>=0;if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>>2>>>0]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>>2>>>0]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=function(rawType,charSize,name){rawType>>>=0;charSize>>>=0;name>>>=0;name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":value=>{var length=HEAPU32[value>>>2>>>0];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":(destructors,value)=>{if(!(typeof value==\"string\")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":GenericWireTypeSize,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:ptr=>_free(ptr)})};var __embind_register_void=function(rawType,name){rawType>>>=0;name>>>=0;name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":()=>undefined,\"toWireType\":(destructors,o)=>undefined})};function __emval_incref(handle){handle>>>=0;if(handle>4){emval_handles.get(handle).refcount+=1}}function __emval_take_value(type,arg){type>>>=0;arg>>>=0;type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](arg);return Emval.toHandle(v)}var _abort=()=>{abort(\"\")};function _emscripten_memcpy_big(dest,src,num){dest>>>=0;src>>>=0;num>>>=0;return HEAPU8.copyWithin(dest>>>0,src>>>0,src+num>>>0)}var getHeapMax=()=>3221225472;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};function _emscripten_resize_heap(requestedSize){requestedSize>>>=0;var oldSize=HEAPU8.length;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false}embind_init_charCodes();BindingError=Module[\"BindingError\"]=class BindingError extends Error{constructor(message){super(message);this.name=\"BindingError\"}};InternalError=Module[\"InternalError\"]=class InternalError extends Error{constructor(message){super(message);this.name=\"InternalError\"}};init_ClassHandle();init_embind();init_RegisteredPointer();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");handleAllocatorInit();init_emval();var wasmImports={w:___cxa_rethrow,b:___cxa_throw,o:__embind_register_bigint,t:__embind_register_bool,d:__embind_register_class,e:__embind_register_class_constructor,a:__embind_register_class_function,s:__embind_register_emval,q:__embind_register_enum,i:__embind_register_enum_value,m:__embind_register_float,f:__embind_register_function,g:__embind_register_integer,c:__embind_register_memory_view,l:__embind_register_std_string,j:__embind_register_std_wstring,u:__embind_register_void,v:__emval_decref,n:__emval_incref,h:__emval_take_value,k:_abort,r:_emscripten_memcpy_big,p:_emscripten_resize_heap};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"y\"])();var ___getTypeName=a0=>(___getTypeName=wasmExports[\"A\"])(a0);var __embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=()=>(__embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=wasmExports[\"B\"])();var ___errno_location=()=>(___errno_location=wasmExports[\"__errno_location\"])();var _malloc=a0=>(_malloc=wasmExports[\"C\"])(a0);var _free=a0=>(_free=wasmExports[\"D\"])(a0);var ___cxa_is_pointer_type=a0=>(___cxa_is_pointer_type=wasmExports[\"E\"])(a0);function applySignatureConversions(wasmExports){wasmExports=Object.assign({},wasmExports);var makeWrapper_pp=f=>a0=>f(a0)>>>0;var makeWrapper_p=f=>()=>f()>>>0;wasmExports[\"A\"]=makeWrapper_pp(wasmExports[\"A\"]);wasmExports[\"__errno_location\"]=makeWrapper_p(wasmExports[\"__errno_location\"]);wasmExports[\"C\"]=makeWrapper_pp(wasmExports[\"C\"]);wasmExports[\"stackSave\"]=makeWrapper_p(wasmExports[\"stackSave\"]);wasmExports[\"stackAlloc\"]=makeWrapper_pp(wasmExports[\"stackAlloc\"]);return wasmExports}var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return moduleArg.ready\n}\n\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = geoda;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => geoda);\n", "\n\nimport type {CustomEmbindModule} from '../wasm';\n// @ts-expect-error - TS doesn't seem to like .cjs working alongside .d.ts\nimport geodaAny from '../wasm/index.cjs';\n\nconst geoda: () => Promise<CustomEmbindModule> = geodaAny;\n\n// Singlton wasmInstance promise\nlet wasmInstancePromise: Promise<CustomEmbindModule> | null = null;\n\n// Initialize geoda WASM instance\n// You can use the promise directly, so it's compatible with functions that\n// accept argument `wasm: CustomEmbindModule`. Or, use it to initialize a\n// global wasm instance for synchronous function call,\n// e.g.: initGeoDa().then(wasm => setGeoDa(wasm))\nexport async function initWASM(): Promise<CustomEmbindModule> {\n  if (wasmInstancePromise === null) {\n    wasmInstancePromise = geoda();\n  }\n  return wasmInstancePromise;\n}\n\n// Reset WASM instance after it throws runtime error e.g. OOM\nexport function resetWASM(): void {\n  wasmInstancePromise = null;\n  wasmInstance = null;\n  // in case of sync call, try to re-initialize GeoDa immediately\n  geoda().then(instance => {\n    wasmInstance = instance;\n  });\n}\n\n// Global nonPromise instance of GeoDa WASM module\nlet wasmInstance: CustomEmbindModule | null = null;\n\n// User can use initWASM() to get a promise of GeoDa instance\n// They can use the promise directly, or they can call `setWASM()`\n// to keep the nonPromise geoda instance in this library globally.\nexport function setWASM(instance: CustomEmbindModule): void {\n  wasmInstance = instance;\n}\n\n// return the global instance of GeoDa WASM module\n// This should be called with cautious since it works depending on above\n// functions to initialize the wasm instance succesfully.\n// The result could be \"null\" which indicates geoda wasm instance has\n// not been initialized successfully.\nexport function getWASM(): CustomEmbindModule | null {\n  return wasmInstance;\n}\n", "import {Feature, Geometry, Position} from 'geojson';\n\nimport {\n  CustomEmbindModule,\n  PolygonCollection,\n  PointCollection,\n  LineCollection,\n  Polygon as GeoDaPolygon\n} from '../../wasm';\n\nexport type GeometryInput = {\n  features: Feature<Geometry>[] | null;\n  latitudes?: Float64Array | null;\n  longitudes?: Float64Array | null;\n  index?: number[] | null;\n};\n\nexport type GeometryCollectionType = PointCollection | LineCollection | PolygonCollection | null;\n\n// Convert from GeoJSON features (MultiPolygon and Polygon) to geoda.PolygonCollection\nexport function getPolygonCollection(\n  features: Feature[],\n  wasm: CustomEmbindModule,\n  fixPolygon?: boolean,\n  convertToUTM?: boolean\n): PolygonCollection {\n  let ptIndex = 0;\n  // for WASM data structure, please see: src/spatial_features.h in geoda repo\n  const xs = new wasm.VectorDouble();\n  const ys = new wasm.VectorDouble();\n  const parts = new wasm.VectorUInt();\n  const holes = new wasm.VectorUInt();\n  const sizes = new wasm.VectorUInt();\n\n  function handlePolygonRing(polygon: Position[][], numParts: number): number {\n    // each ring (even an empty ring) starts at ptIndex\n    parts.push_back(ptIndex);\n    // the first ring (exterior) is not a hole\n    holes.push_back(0);\n\n    for (let j = 0, m = polygon.length; j < m; ++j) {\n      const ring = polygon[j];\n      if (j > 0) {\n        parts.push_back(ptIndex);\n        holes.push_back(1);\n      }\n      if (ring.length > 0) numParts += 1;\n      for (let k = 0, npts = ring.length; k < npts; ++k) {\n        const pt = ring[k];\n        xs.push_back(pt[0]);\n        ys.push_back(pt[1]);\n        ptIndex += 1;\n      }\n    }\n\n    return numParts;\n  }\n\n  for (let i = 0, n = features.length; i < n; ++i) {\n    const feat = features[i];\n    let numParts = 0;\n    if (feat.geometry.type === 'MultiPolygon') {\n      for (let j = 0, m = feat.geometry.coordinates.length; j < m; ++j) {\n        const poly = feat.geometry.coordinates[j];\n        numParts = handlePolygonRing(poly, numParts);\n      }\n    } else if (feat.geometry.type === 'Polygon') {\n      numParts = handlePolygonRing(feat.geometry.coordinates, numParts);\n    }\n    sizes.push_back(numParts);\n  }\n  const pc = new wasm.PolygonCollection(\n    xs,\n    ys,\n    parts,\n    holes,\n    sizes,\n    fixPolygon ?? false,\n    convertToUTM ?? false\n  );\n  return pc;\n}\n\n// Convert from GeoJSON features (MultiLineString and LineString) to geoda.LineCollection\nexport function getLineCollection(\n  features: Feature[],\n  wasm: CustomEmbindModule,\n  convertToUTM?: boolean\n): LineCollection {\n  let ptIndex = 0;\n  // for WASM data structure, please see: src/spatial_features.h in geoda repo\n  const xs = new wasm.VectorDouble();\n  const ys = new wasm.VectorDouble();\n  const parts = new wasm.VectorUInt();\n  const sizes = new wasm.VectorUInt();\n\n  function handleLineSegment(lineSeg: Position[]): boolean {\n    parts.push_back(ptIndex);\n    let validLine = false;\n    for (let j = 0, m = lineSeg.length; j < m; ++j) {\n      const pt = lineSeg[j];\n      xs.push_back(pt[0]);\n      ys.push_back(pt[1]);\n      ptIndex += 1;\n      validLine = true;\n    }\n    return validLine;\n  }\n\n  for (let i = 0, n = features.length; i < n; ++i) {\n    const feat = features[i];\n    let numParts = 0;\n    if (feat.geometry.type === 'MultiLineString') {\n      for (let j = 0, m = feat.geometry.coordinates.length; j < m; ++j) {\n        // eslint-disable-next-line max-depth\n        if (handleLineSegment(feat.geometry.coordinates[j])) {\n          numParts += 1;\n        }\n      }\n    } else if (feat.geometry.type === 'LineString') {\n      if (handleLineSegment(feat.geometry.coordinates)) {\n        numParts += 1;\n      }\n    }\n    sizes.push_back(numParts);\n  }\n  const lc = new wasm.LineCollection(xs, ys, parts, sizes, convertToUTM ?? false);\n  return lc;\n}\n\n// Convert from GeoJSON features (MultiPoint and Point) to geoda.PointCollection\nexport function getPointCollection(\n  features: Feature[],\n  wasm: CustomEmbindModule,\n  convertToUTM?: boolean\n): PointCollection {\n  let ptIndex = 0;\n  // for WASM data structure, please see: src/spatial_features.h in geoda repo\n  const xs = new wasm.VectorDouble();\n  const ys = new wasm.VectorDouble();\n  const parts = new wasm.VectorUInt();\n  const sizes = new wasm.VectorUInt();\n\n  function handlePoint(point: Position): boolean {\n    let isValid = false;\n    if (point.length >= 2) {\n      xs.push_back(point[0]);\n      ys.push_back(point[1]);\n      isValid = true;\n    }\n    ptIndex += 1;\n    return isValid;\n  }\n\n  for (let i = 0, n = features.length; i < n; ++i) {\n    const feat = features[i];\n    let numParts = 0;\n    if (feat.geometry.type === 'MultiPoint') {\n      parts.push_back(ptIndex);\n      for (let j = 0, m = feat.geometry.coordinates.length; j < m; ++j) {\n        // eslint-disable-next-line max-depth\n        if (handlePoint(feat.geometry.coordinates[j])) {\n          numParts += 1;\n        }\n      }\n    } else if (feat.geometry.type === 'Point') {\n      parts.push_back(ptIndex);\n      if (handlePoint(feat.geometry.coordinates)) {\n        numParts += 1;\n      }\n    }\n    sizes.push_back(numParts);\n  }\n  const pc = new wasm.PointCollection(xs, ys, parts, sizes, convertToUTM ?? false);\n  return pc;\n}\n\n/**\n * Convert from lat/lng pairs to geoda.PointCollection\n * start/end are only for parallel spatial join that each webworker use\n * a subset of lat/lng data in spatial join\n */\nexport function getPointCollectionFromLatLng(\n  lat: number[] | Float64Array,\n  lng: number[] | Float64Array,\n  wasm: CustomEmbindModule,\n  start?: number,\n  end?: number\n): PointCollection {\n  let ptIndex = 0;\n  // for WASM data structure, please see: src/spatial_features.h in geoda repo\n  const xs = new wasm.VectorDouble();\n  const ys = new wasm.VectorDouble();\n  const parts = new wasm.VectorUInt();\n  const sizes = new wasm.VectorUInt();\n\n  for (let i = start ?? 0, n = end ?? lat.length; i < n; ++i) {\n    sizes.push_back(1);\n    parts.push_back(ptIndex);\n    xs.push_back(lng[i]);\n    ys.push_back(lat[i]);\n    ptIndex += 1;\n  }\n\n  const convertToUTM = false;\n  const pc = new wasm.PointCollection(xs, ys, parts, sizes, convertToUTM);\n  return pc;\n}\n\n/**\n * Get GeometryCollection from SpatialJoinInput\n * start/end are only for parallel spatial join that each webworker use\n * a subset of lat/lng data in spatial join\n */\nexport function getGeometryCollection(\n  input: GeometryInput,\n  wasm: CustomEmbindModule,\n  start?: number,\n  end?: number\n): GeometryCollectionType {\n  if (input.features && input.features.length > 0) {\n    // create GeometryCollection from GeoJSON\n    const geomType = input.features[0].geometry.type;\n\n    if (geomType === 'Polygon' || geomType === 'MultiPolygon') {\n      return getPolygonCollection(input.features, wasm);\n    } else if (geomType === 'LineString' || geomType === 'MultiLineString') {\n      return getLineCollection(input.features, wasm);\n    } else if (geomType === 'Point' || geomType === 'MultiPoint') {\n      return getPointCollection(input.features, wasm);\n    }\n  } else if (input.latitudes && input.longitudes) {\n    // create PointCollection from lat/lng\n    return getPointCollectionFromLatLng(input.latitudes, input.longitudes, wasm, start, end);\n  }\n  return null;\n}\n\n// eslint-disable-next-line max-statements\nexport function getGeojsonPolygon(poly: GeoDaPolygon): Feature {\n  // for data structure of GeoDaPolygon, please see src/spatial_features.h in geoda repo\n  const xs = poly.getX();\n  const ys = poly.getY();\n  const parts = poly.getParts();\n  const holes = poly.getHoles();\n\n  const numPoints = xs.size();\n  const numParts = parts.size();\n\n  let numExtRings = 0;\n  for (let i = 0; i < numParts; ++i) {\n    if (holes.get(i) === 0) numExtRings += 1;\n  }\n\n  const isMultiPolygon = numExtRings > 1;\n\n  if (isMultiPolygon) {\n    // [[extRing, hole, hole], [extRing, hole]]\n    const multiPoly = Array(numExtRings);\n    let polyIndex = -1;\n    for (let i = 0; i < numParts; ++i) {\n      if (holes.get(i) === 0) {\n        // extRing\n        polyIndex += 1;\n        multiPoly[polyIndex] = [];\n      }\n      const ring: number[][] = [];\n      const start = parts.get(i);\n      const end = i === numParts - 1 ? numPoints : parts.get(i + 1);\n      for (let j = start; j < end; ++j) {\n        ring.push([xs.get(j), ys.get(j)]);\n      }\n      multiPoly[polyIndex].push(ring);\n    }\n    return {\n      type: 'Feature',\n      geometry: {\n        type: 'MultiPolygon',\n        coordinates: multiPoly\n      },\n      properties: {}\n    };\n  } else {\n    // [extRing, hole, hole]\n    const coordinates = Array(numParts);\n    for (let i = 0; i < numParts; ++i) {\n      const ring: number[][] = [];\n      const start = parts.get(i);\n      const end = i === numParts - 1 ? numPoints : parts.get(i + 1);\n      for (let j = start; j < end; ++j) {\n        ring.push([xs.get(j), ys.get(j)]);\n      }\n      coordinates[i] = ring;\n    }\n    return {\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates\n      },\n      properties: {}\n    };\n  }\n}\n", "\nimport {Feature, MultiPolygon, Polygon, Point} from 'geojson';\n\nimport {getPolygonCollection, getLineCollection, getPointCollection} from '../features/geometry';\nimport {initWASM, getWASM} from '../init';\n\n// Get centroids from a collection of GeoJson Polygons/MultiPolygons\nexport async function getCentroids(\n  polygons: Feature<Polygon | MultiPolygon>[]\n): Promise<Array<Feature<Point> | null>> {\n  const wasm = await initWASM();\n\n  const geodaPolys = getPolygonCollection(polygons, wasm);\n  const coords = wasm.getCentroids(geodaPolys);\n  const numPoints = coords.size();\n  const centroids: Array<Feature<Point> | null> = [];\n  for (let i = 0; i < numPoints; ++i) {\n    if (coords.get(i).size() === 0) {\n      centroids.push(null);\n    } else {\n      centroids.push({\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [coords.get(i).get(0), coords.get(i).get(1)]\n        },\n        properties: {}\n      });\n    }\n  }\n  geodaPolys.delete();\n  return centroids;\n}\n\n// Get centroid for one feature. This function is used by column metric: centroid()\nexport function getCentroid(feature: Feature | null): Array<number> | null {\n  const wasm = getWASM();\n  if (!wasm || !feature) return null;\n\n  const geomType = feature?.geometry?.type;\n\n  let geom;\n  if (geomType === 'Polygon' || geomType === 'MultiPolygon') {\n    geom = getPolygonCollection([feature], wasm);\n  } else if (geomType === 'LineString' || geomType === 'MultiLineString') {\n    geom = getLineCollection([feature], wasm);\n  } else if (geomType === 'Point' || geomType === 'MultiPoint') {\n    geom = getPointCollection([feature], wasm);\n  } else {\n    return null;\n  }\n  const coords = wasm.getCentroids(geom);\n  geom.delete();\n\n  return coords.size() > 0 && coords.get(0).size() === 2\n    ? [coords.get(0).get(0), coords.get(0).get(1)]\n    : null;\n}\n\n// Get centroids from an array of Geojson Feature. This function is used by geojson-layer to\n// get centroids (memorized) for filtering and labeling\n// eslint-disable-next-line complexity\nexport function getGeojsonCentroids(features: Array<Feature | null>): Array<Array<number> | null> {\n  let result: Array<Array<number> | null> = [];\n  const wasm = getWASM();\n  if (!wasm) return result;\n\n  const nFeatures = features.length;\n  const validIndex: number[] = [];\n  const validFeatures: Feature[] = [];\n\n  result = Array<Array<number> | null>(nFeatures).fill(null);\n\n  let geomType: string | null = null;\n  for (let i = 0; i < nFeatures; ++i) {\n    const feat = features[i];\n    const featureGeomType = feat?.geometry?.type;\n    if (featureGeomType) {\n      if (!geomType) geomType = featureGeomType;\n      // geomType could be 'Polygon' and featureGeomType could be either 'Polygon' or 'MultiPolygon'\n      if (geomType.indexOf(featureGeomType) >= 0 || featureGeomType.indexOf(geomType) >= 0) {\n        validIndex.push(i);\n        validFeatures.push(feat);\n      }\n    }\n  }\n\n  const geom =\n    geomType === 'Polygon' || geomType === 'MultiPolygon'\n      ? getPolygonCollection(validFeatures, wasm)\n      : geomType === 'LineString' || geomType === 'MultiLineString'\n      ? getLineCollection(validFeatures, wasm)\n      : geomType === 'Point' || geomType === 'MultiPoint'\n      ? getPointCollection(validFeatures, wasm)\n      : null;\n\n  if (!geom) return result;\n\n  const centroids = wasm.getCentroids(geom);\n  geom.delete();\n\n  // point as input search [lng, lat]\n  for (let i = 0, n = centroids.size(); i < n; ++i) {\n    if (centroids.get(i).size() === 0) {\n      result[validIndex[i]] = null;\n    } else {\n      result[validIndex[i]] = [centroids.get(i)?.get(0), centroids.get(i)?.get(1)];\n    }\n  }\n\n  return result;\n}\n\n// get centroids from geoarrow column\n// export function getGeoArrowCentroids(geomeColumn: ArrowColumn, chunkIndexes: number[]): Array<Array<number>> {\n//   const wasm = getWASM();\n//   if (!wasm) return [];\n\n//   const numChunks = chunkIndexes.length;\n//   const centroids: Array<Array<number>> = [];\n//   for (let i = 0; i < numChunks; ++i) {\n//     const chunkIndex = chunkIndexes[i];\n//     const chunk = geomeColumn.get(chunkIndex);\n//     const geom = getPolygonCollection(chunk, wasm);\n//     const coords = wasm.getCentroids(geom);\n//     geom.delete();\n//     const numPoints = coords.size();\n//     for (let j = 0; j < numPoints; ++j) {\n//       centroids.push([coords.get(j).get(0), coords.get(j).get(1)]);\n//     }\n//   }\n//   return centroids;\n// }\n", "\n\nimport {Feature} from 'geojson';\n\nimport {getGeometryCollection} from '../features/geometry';\nimport {initWASM} from '../init';\n\n// for lat and lng, we use the great circle distance or arc distance\n// in the unit of mile or kilometer (KM)\nexport enum DistanceUnit {\n  Mile = 'Mile',\n  KM = 'KM'\n}\n\n/**\n * geometries: the geometries used to compute distance. NOTE: for Polygon type, the\n *  centroids are used to compute the distance\n * latLngArrays: the latitude and longitude array represents the input point geometries\n */\nexport type DistanceWeightsGeometryInput = {\n  geometries?: Feature[];\n  latLngArrays?: {\n    longitudes: Float64Array;\n    latitudes: Float64Array;\n  };\n};\n\n/**\n * distanceThreshold: the distance value that defines neighbors within this threshold\n * isMile: if the measurement unit of distance is mile (true), or kilometer (false)\n */\nexport type DistanceWeightsInput = DistanceWeightsGeometryInput & {\n  distanceThreshold: number;\n  distanceUnit: DistanceUnit;\n};\n\nexport type DistanceThresholdsInput = DistanceWeightsGeometryInput & {\n  distanceUnit: DistanceUnit;\n};\n\n/**\n * minDistanceThreshold: the minimum 1nn distance\n * suggestedDistanceThreshold: the maximum 1nn distance\n * maxDistanceThreshold: the approximate maximum pair distance\n * The 1st and 3rd values are used to define the range of distance thresholds\n * The 2nd value is used as suggested distance threshold, which guarantees at least one neighbor\n */\nexport type DistanceThresholdsOutput = {\n  minDistanceThreshold: number;\n  suggestedDistanceThreshold: number;\n  maxDistanceThreshold: number;\n};\n\nexport async function getDistanceThresholds({\n  distanceUnit,\n  geometries,\n  latLngArrays\n}: DistanceThresholdsInput): Promise<DistanceThresholdsOutput> {\n  const n = geometries?.length ?? latLngArrays?.latitudes.length ?? 0;\n\n  let minDistanceThreshold = 0;\n  let suggestedDistanceThreshold = 0;\n  let maxDistanceThreshold = 0;\n\n  if (n === 0) {\n    return {minDistanceThreshold, suggestedDistanceThreshold, maxDistanceThreshold};\n  }\n\n  const wasmInstance = await initWASM();\n  const geomCollection = getGeometryCollection(\n    {\n      features: geometries ?? null,\n      latitudes: latLngArrays?.latitudes ?? null,\n      longitudes: latLngArrays?.longitudes ?? null\n    },\n    wasmInstance\n  );\n\n  if (geomCollection) {\n    const result = wasmInstance.getDistanceThresholds(\n      geomCollection,\n      distanceUnit === DistanceUnit.Mile\n    );\n    minDistanceThreshold = result.get(0);\n    suggestedDistanceThreshold = result.get(1);\n    maxDistanceThreshold = result.get(2);\n  }\n\n  return {minDistanceThreshold, suggestedDistanceThreshold, maxDistanceThreshold};\n}\n\nexport async function getDistanceBasedNeighbors({\n  distanceThreshold,\n  distanceUnit,\n  geometries,\n  latLngArrays\n}: DistanceWeightsInput): Promise<number[][]> {\n  const n = geometries?.length ?? latLngArrays?.latitudes.length ?? 0;\n  const neighbors: number[][] = Array(n);\n\n  if (n === 0) {\n    return neighbors;\n  }\n\n  const wasmInstance = await initWASM();\n  const geomCollection = getGeometryCollection(\n    {\n      features: geometries ?? null,\n      latitudes: latLngArrays?.latitudes ?? null,\n      longitudes: latLngArrays?.longitudes ?? null\n    },\n    wasmInstance\n  );\n\n  if (geomCollection) {\n    const result = wasmInstance.getDistanceWeights(\n      geomCollection,\n      distanceThreshold,\n      distanceUnit === DistanceUnit.Mile\n    );\n    for (let i = 0; i < n; ++i) {\n      const nbrs = result.get(i);\n      const nbrIndices: number[] = Array(nbrs.size());\n      for (let j = 0, nbrSize = nbrs.size(); j < nbrSize; ++j) {\n        nbrIndices[j] = nbrs.get(j);\n      }\n      neighbors[i] = nbrIndices;\n    }\n  }\n\n  return neighbors;\n}\n", "\n\nimport {DistanceUnit} from './weights/distance-based-neighbors';\n\nexport const earthRadius = 6371008.8;\nconst mileToMeters = 1609.344;\n\nexport function lengthToDegrees(distance: number, unit: DistanceUnit): number {\n  // length to radians\n  const factor = unit === DistanceUnit.KM ? earthRadius / 1000 : earthRadius / mileToMeters;\n  const radians = distance / factor;\n  // radians to degrees\n  const degrees = radians % (2 * Math.PI);\n  return degrees;\n}\n\nexport function lengthToMeters(distance: number, unit: DistanceUnit): number {\n  return unit === DistanceUnit.Mile ? distance * mileToMeters : distance * 1000;\n}\n", "\n\nimport {Feature} from 'geojson';\n\nimport {CustomEmbindModule} from '../../wasm';\nimport {\n  getPolygonCollection,\n  getLineCollection,\n  getPointCollection,\n  getGeojsonPolygon\n} from '../features/geometry';\nimport {getWASM} from '../init';\nimport {lengthToMeters} from '../utils';\nimport {DistanceUnit} from '../weights/distance-based-neighbors';\n\n// eslint-disable-next-line complexity, max-statements\nexport function getBuffersSync(\n  features: Array<Feature | null>,\n  bufferDistance: number,\n  distanceUnit: DistanceUnit,\n  pointsPerCircle: number,\n  wasmInstance?: CustomEmbindModule\n): Array<Feature | null> {\n  const nFeatures = features.length;\n  const result: Array<Feature | null> = Array(nFeatures).fill(null);\n\n  // try to get geoda WASM instance from the library if no wasmInstance passed\n  const wasm = wasmInstance ?? getWASM();\n  if (!wasm) {\n    return result;\n  }\n\n  const validIndex: number[] = [];\n  const validFeatures: Feature[] = [];\n\n  let geomType: string | null = null;\n  for (let i = 0; i < nFeatures; ++i) {\n    const feat = features[i];\n    const featureGeomType = feat?.geometry?.type;\n    if (featureGeomType) {\n      if (!geomType) geomType = featureGeomType;\n      // geomType could be 'Polygon' and featureGeomType could be either 'Polygon' or 'MultiPolygon'\n      if (geomType.indexOf(featureGeomType) >= 0 || featureGeomType.indexOf(geomType) >= 0) {\n        validIndex.push(i);\n        validFeatures.push(feat);\n      }\n    }\n  }\n\n  const convertToUTM = true;\n  const fixPolygon = true;\n  const geom =\n    geomType === 'Polygon' || geomType === 'MultiPolygon'\n      ? getPolygonCollection(validFeatures, wasm, fixPolygon, convertToUTM)\n      : geomType === 'LineString' || geomType === 'MultiLineString'\n      ? getLineCollection(validFeatures, wasm, convertToUTM)\n      : geomType === 'Point' || geomType === 'MultiPoint'\n      ? getPointCollection(validFeatures, wasm, convertToUTM)\n      : null;\n\n  if (!geom) return result;\n\n  const dist = lengthToMeters(bufferDistance, distanceUnit);\n\n  for (let i = 0, n = validFeatures.length; i < n; ++i) {\n    const idx = validIndex[i];\n    const bufferPoly = geom.buffer(i, dist, pointsPerCircle);\n    const bufferGeojson = getGeojsonPolygon(bufferPoly);\n    result[idx] = bufferGeojson;\n  }\n  geom.delete();\n  return result;\n}\n\n// get Buffer for a single feature, used by metric function\nexport function getBufferSync(\n  feature: Feature,\n  bufferDistance: number,\n  distanceUnit: DistanceUnit,\n  pointsPerCircle: number,\n  wasmInstance?: CustomEmbindModule\n): Feature | null {\n  const bufferResults = getBuffersSync(\n    [feature],\n    bufferDistance,\n    distanceUnit,\n    pointsPerCircle,\n    wasmInstance\n  );\n  return bufferResults[0];\n}\n", "\n\nimport {CustomEmbindModule} from '../../wasm';\nimport {GeometryInput, getGeometryCollection} from '../features/geometry';\nimport {initWASM} from '../init';\n\nexport enum SpatialJoinType {\n  INTERSECTS = 'INTERSECTS',\n  WITHIN = 'WITHIN',\n  TOUCHES = 'TOUCHES',\n  OVERLAPS = 'OVERLAPS',\n  CROSSES = 'CROSSES',\n  EQUALS = 'EQUALS'\n}\n\n/**\n * The spatial join result is a 2d array, which represents the join relationship\n * between left and right table. For example: [[1,3], [0], [2, 4]] means\n * 0th left item joins with right items [1, 3]\n * 1st left item joins with right item [0]\n * 2nd left item joins with right items [2, 4]\n */\nexport type SpatialJoinResult = number[][];\n\nexport async function spatialJoin(\n  source: GeometryInput,\n  join: GeometryInput,\n  spatialJoinOperation: SpatialJoinType\n): Promise<SpatialJoinResult | null> {\n  const wasmInstance = await initWASM();\n\n  return runSpatialJoin(source, join, spatialJoinOperation, wasmInstance);\n}\n\n// eslint-disable-next-line max-params\nexport function runSpatialJoin(\n  source: GeometryInput,\n  join: GeometryInput,\n  spatialJoinOperation: SpatialJoinType,\n  wasmInstance: CustomEmbindModule,\n  start?: number,\n  end?: number\n): SpatialJoinResult | null {\n  const sourceGeometryCollection = getGeometryCollection(source, wasmInstance, start, end);\n  const joinGeometryCollection = getGeometryCollection(join, wasmInstance, start, end);\n  const spatialJoinOp = wasmInstance.SpatialJoinType[spatialJoinOperation];\n\n  if (sourceGeometryCollection && joinGeometryCollection && spatialJoinOp) {\n    const result = wasmInstance.spatialJoin(\n      sourceGeometryCollection,\n      joinGeometryCollection,\n      spatialJoinOp\n    );\n\n    // parse result\n    const joinRelation: SpatialJoinResult = [];\n    for (let i = 0, n = result.size(); i < n; ++i) {\n      const rightIndices = result.get(i);\n      const relation: number[] = [];\n      for (let j = 0, m = rightIndices.size(); j < m; ++j) {\n        relation.push(rightIndices.get(j));\n      }\n      joinRelation.push(relation);\n    }\n\n    return joinRelation;\n  }\n  return null;\n}\n", "\n\nimport {SpatialJoinResult, SpatialJoinType} from './join';\nimport {SpatialJoinWorkerInput} from './join-worker';\nimport {GeometryInput} from '../features/geometry';\n\ntype PreparedSpatialJoinData = {\n  taskDataArray: Array<SpatialJoinWorkerInput>;\n  indexTable: number[];\n  sourceSize: number;\n  joinSize: number;\n  divideRight: boolean;\n};\n\nexport function prepareParallelSpatialJoin(\n  source: GeometryInput,\n  join: GeometryInput,\n  spatialJoinOperation: SpatialJoinType,\n  workerCount: number\n): PreparedSpatialJoinData | null {\n  const taskDataArray: Array<SpatialJoinWorkerInput> = [];\n\n  // check the size of source and join\n  const sourceSize = source.features?.length ?? source.latitudes?.length;\n  const joinSize = join.features?.length ?? join.latitudes?.length;\n\n  if (!sourceSize || !joinSize) {\n    return null;\n  }\n\n  // for dividing the bigger dataset into several chunks if needed\n  // (e.g. no need for Float64Array)\n  const divideRight = sourceSize < joinSize;\n  const bigSize = divideRight ? joinSize : sourceSize;\n  const workChunk = Math.floor(bigSize / workerCount);\n  const remainder = bigSize % workerCount;\n\n  // index lookup table for dataset divided into chunks\n  const indexTable = new Array(workerCount);\n\n  const initSpatialJoinTasks = (taskIndex: number): SpatialJoinWorkerInput => {\n    // start is inclusive and end is exclusive\n    const start = taskIndex * workChunk;\n    let end = (taskIndex + 1) * workChunk;\n    if (taskIndex === workerCount - 1) {\n      // Allocate remainder rows to the last worker\n      end += remainder;\n    }\n    indexTable[taskIndex] = start;\n\n    return {\n      id: taskIndex,\n      source: prepareJoinDataset(source, divideRight, start, end),\n      join: prepareJoinDataset(join, !divideRight, start, end),\n      spatialJoinOperation,\n      start,\n      end\n    };\n  };\n\n  for (let i = 0; i < workerCount; ++i) {\n    const taskData = initSpatialJoinTasks(i);\n    taskDataArray.push(taskData);\n  }\n\n  return {taskDataArray, indexTable, sourceSize, joinSize, divideRight};\n}\n\nfunction prepareJoinDataset(\n  dataset: GeometryInput,\n  noSlicing: boolean,\n  start: number,\n  end: number\n): GeometryInput {\n  // latitudes/longitudes are Float64Array, so no need to slice and\n  // just zero-copy it to web workers, with [start, end] information.\n  // Currently, we will slice geojson features that are sent to each\n  // web worker -- slice and send is faster than sending whole to web\n  // workers. This wil be replaced with wkb (zero-copy) in the future.\n  return {\n    ...(dataset.latitudes ? {latitudes: dataset.latitudes} : {}),\n    ...(dataset.longitudes ? {longitudes: dataset.longitudes} : {}),\n    features:\n      dataset.features?.length && dataset.features.length > 0\n        ? noSlicing\n          ? dataset.features\n          : dataset.features?.slice(start, end)\n        : null\n  };\n}\n\n/**\n * process the join results from each web worker\n * the results should be filled into `joinRelation` (passed by reference)\n */\nexport function processJoinResultsFromWorker(\n  result: SpatialJoinResult,\n  divideRight: boolean,\n  indexTable: number[],\n  taskId: number,\n  joinRelation: number[][]\n): void {\n  for (let i = 0, n = result.length; i < n; ++i) {\n    const rightIndices = result[i];\n    for (let j = 0, m = rightIndices.length; j < m; ++j) {\n      if (divideRight) {\n        joinRelation[i].push(indexTable[taskId] + rightIndices[j]);\n      } else {\n        joinRelation[indexTable[taskId] + i].push(rightIndices[j]);\n      }\n    }\n  }\n}\n", "\n\nimport {SpatialJoinType, SpatialJoinResult} from './join';\nimport {SpatialJoinWorkerOutput} from './join-worker';\nimport {prepareParallelSpatialJoin, processJoinResultsFromWorker} from './parallel-join-utils';\nimport {GeometryInput} from '../features/geometry';\n\nconst DEFAULT_WORKER_COUNT = 6; // default number of parallel web workers\n\nexport type ParallelSpatialJoinOptions = {\n  workerUrl: string | URL;\n  workerCount?: number;\n};\n\ntype JoinResolve = (joinRelation: SpatialJoinResult) => void;\n\nexport async function parallelSpatialJoin(\n  source: GeometryInput,\n  join: GeometryInput,\n  spatialJoinOperation: SpatialJoinType,\n  options: ParallelSpatialJoinOptions\n): Promise<SpatialJoinResult | null> {\n  const workerCount = options?.workerCount ?? DEFAULT_WORKER_COUNT;\n\n  const preparedData = prepareParallelSpatialJoin(source, join, spatialJoinOperation, workerCount);\n  if (!preparedData) {\n    return null;\n  }\n\n  const {sourceSize, divideRight, indexTable, taskDataArray} = preparedData;\n\n  // final results\n  const joinRelation: SpatialJoinResult = [];\n  for (let i = 0; i < sourceSize; ++i) {\n    joinRelation.push([]);\n  }\n\n  // current running web workers\n  let runningWorkers = 0;\n\n  // resolve for join result\n  let joinResolve: JoinResolve;\n\n  const onTaskDone = (event: MessageEvent<SpatialJoinWorkerOutput>): void => {\n    // update number of running workers once it's done\n    runningWorkers--;\n    // get the results from the finished worker\n    const {result, id: taskId} = event.data;\n    processJoinResultsFromWorker(result, divideRight, indexTable, taskId, joinRelation);\n    // when all workers done\n    if (runningWorkers === 0) {\n      joinResolve(joinRelation);\n    }\n  };\n\n  const processSpatialJoinTasks = (resolve: JoinResolve): void => {\n    for (let i = 0; i < workerCount; ++i) {\n      const taskData = taskDataArray[i];\n      const instance = new Worker(new URL(options.workerUrl));\n      instance.onmessage = onTaskDone;\n      instance.postMessage(taskData);\n      runningWorkers++;\n    }\n    joinResolve = resolve;\n  };\n\n  return new Promise(processSpatialJoinTasks);\n}\n", "\n\nimport {Feature, Polygon, MultiPolygon} from 'geojson';\n\nimport {CustomEmbindModule} from '../../wasm';\nimport {getPolygonCollection, getGeojsonPolygon} from '../features/geometry';\nimport {initWASM, getWASM} from '../init';\n\nexport async function spatialMerge(polygons: Feature<Polygon | MultiPolygon>[]): Promise<Feature> {\n  const wasmInstance = await initWASM();\n\n  return spatialMergeSync(polygons, wasmInstance);\n}\n\nexport function spatialMergeSync(\n  polygons: Feature<Polygon | MultiPolygon>[],\n  wasmInstance?: CustomEmbindModule\n): Feature {\n  // try to get geoda WASM instance from the library if no wasmInstance passed\n  const wasm = wasmInstance ?? getWASM();\n  if (!wasm) {\n    // return empty Polygon feature to avoid crash\n    return {type: 'Feature', geometry: {type: 'Polygon', coordinates: []}, properties: {}};\n  }\n\n  // Boost.geometry/GEOS uses clockwise winding for exterior rings, which is\n  // different than Simple Feature implementation (geojson). We need to fix it.\n  const fixPolygon = true;\n\n  const polygonCollection = getPolygonCollection(polygons, wasm, fixPolygon);\n\n  // call geoda.spatialUnion()\n  const poly = wasm.spatialUnion(polygonCollection);\n\n  const unionResult = getGeojsonPolygon(poly);\n  return unionResult;\n}\n", "\n\nimport {Polygon, MultiPolygon, Point, Feature} from 'geojson';\n\nimport {\n  getPolygonCollection,\n  getPointCollection,\n  getPointCollectionFromLatLng\n} from '../features/geometry';\nimport {initWASM} from '../init';\n\nexport type SpatialCountPointInput = {\n  features: Feature<Point>[] | null;\n  latitudes: number[] | null;\n  longitudes: number[] | null;\n};\n\nexport async function spatialCount(\n  polygons: Feature<Polygon | MultiPolygon>[],\n  points: SpatialCountPointInput\n): Promise<number[]> {\n  const n = polygons.length;\n  const counts: number[] = Array(n);\n\n  if (n === 0) {\n    return counts;\n  }\n\n  const wasmInstance = await initWASM();\n  const polygonCollection = getPolygonCollection(polygons, wasmInstance);\n\n  let pointCollection;\n  if (points.features) {\n    pointCollection = getPointCollection(points.features, wasmInstance);\n  } else if (points.latitudes && points.longitudes) {\n    pointCollection = getPointCollectionFromLatLng(\n      points.latitudes,\n      points.longitudes,\n      wasmInstance\n    );\n  } else {\n    // something wrong with the input points\n    return counts;\n  }\n\n  const result = wasmInstance.spatialCount(polygonCollection, pointCollection);\n\n  for (let i = 0; i < n; ++i) {\n    counts[i] = result.get(i);\n  }\n\n  return counts;\n}\n", "\n\nimport {Feature} from 'geojson';\n\nimport {getGeometryCollection} from '../features/geometry';\nimport {initWASM} from '../init';\n\ntype NearestNeighborsInput = {\n  k: number;\n  geometries?: Feature[];\n  latLngArrays?: {\n    longitudes: Float64Array;\n    latitudes: Float64Array;\n  };\n};\n\nexport async function getNearestNeighbors({\n  k,\n  geometries,\n  latLngArrays\n}: NearestNeighborsInput): Promise<number[][]> {\n  const n = geometries ? geometries.length : latLngArrays ? latLngArrays.latitudes.length : 0;\n  const neighbors: number[][] = Array(n);\n\n  if (n === 0) {\n    return neighbors;\n  }\n\n  const wasmInstance = await initWASM();\n  const geomCollection = getGeometryCollection(\n    {\n      features: geometries ?? null,\n      latitudes: latLngArrays?.latitudes ?? null,\n      longitudes: latLngArrays?.longitudes ?? null\n    },\n    wasmInstance\n  );\n\n  if (geomCollection) {\n    const result = wasmInstance.getNearestNeighbors(geomCollection, k);\n    for (let i = 0; i < n; ++i) {\n      const nbrs = result.get(i);\n      const nbrIndices: number[] = Array(nbrs.size());\n      for (let j = 0, nbrSize = nbrs.size(); j < nbrSize; ++j) {\n        nbrIndices[j] = nbrs.get(j);\n      }\n      neighbors[i] = nbrIndices;\n    }\n  }\n\n  return neighbors;\n}\n", "import {VectorDouble} from '../../wasm';\nimport {initWASM} from '../init';\n\nexport type LocalMoranResultType = {\n  isValid: boolean;\n  clusters: number[];\n  lagValues: number[];\n  pValues: number[];\n  lisaValues: number[];\n};\n\n// Get local moran statistics\nexport async function localMoran(\n  data: number[] | Float32Array,\n  neighbors: number[][],\n  permutation: number\n): Promise<LocalMoranResultType> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n  }\n\n  const wasmNeighbors = new wasm.VecVecUInt();\n  for (let i = 0; i < n; ++i) {\n    const nbrs = neighbors[i];\n    const wasmNeighborIndices = new wasm.VectorUInt();\n    for (let j = 0, numNbrs = nbrs.length; j < numNbrs; ++j) {\n      wasmNeighborIndices.push_back(nbrs[j]);\n    }\n    wasmNeighbors.push_back(wasmNeighborIndices);\n  }\n\n  const result = wasm.localMoran(wasmData, wasmNeighbors, permutation);\n\n  return {\n    isValid: result.isValid(),\n    clusters: vecDoubleToNumber(result.getClusters()),\n    lagValues: vecDoubleToNumber(result.getLagValues()),\n    lisaValues: vecDoubleToNumber(result.getLisaValues()),\n    pValues: vecDoubleToNumber(result.getPValues())\n  };\n}\n\nexport function vecDoubleToNumber(data: VectorDouble): number[] {\n  const result: number[] = [];\n\n  const n = data.size();\n  for (let i = 0; i < n; ++i) {\n    result.push(data.get(i));\n  }\n\n  return result;\n}\n", "import {BinaryFeatureCollection} from '@loaders.gl/schema';\n\nimport {\n  CustomEmbindModule,\n  PolygonCollection,\n  PointCollection,\n  LineCollection,\n  GeometryCollection,\n} from '../../wasm';\nimport {initWASM} from '../init';\n\nexport type GeoArrowEncoding =\n  | 'geoarrow.multipolygon'\n  | 'geoarrow.polygon'\n  | 'geoarrow.multilinestring'\n  | 'geoarrow.linestring'\n  | 'geoarrow.multipoint'\n  | 'geoarrow.point'\n  | 'geoarrow.wkb'\n  | 'geoarrow.wkt';\n\n/**\n * create geoda.GeometryCollection from dataToFeatures[] in GeojsonLayer\n *\n */\nexport async function getGeoDaGeometriesFromArrow(\n  geometryEncoding: GeoArrowEncoding,\n  binaryFeaturesChunks: BinaryFeatureCollection[]\n): Promise<GeometryCollection | null> {\n  const wasm = await initWASM();\n  if (!wasm) return null;\n\n  if (geometryEncoding === 'geoarrow.multipolygon' || geometryEncoding === 'geoarrow.polygon') {\n    const polygonsArray = binaryFeaturesChunks.map(chunk => chunk.polygons);\n    return createGeoDaPolygonsFromBinaryFeatures(polygonsArray, wasm);\n  } else if (\n    geometryEncoding === 'geoarrow.multilinestring' ||\n    geometryEncoding === 'geoarrow.linestring'\n  ) {\n    const linesArray = binaryFeaturesChunks.map(chunk => chunk.lines);\n    return createGeoDaLinesFromBinaryFeatures(linesArray, wasm);\n  } else if (geometryEncoding === 'geoarrow.multipoint' || geometryEncoding === 'geoarrow.point') {\n    const pointsArray = binaryFeaturesChunks.map(chunk => chunk.points);\n    return createGeoDaPointsFromBinaryFeatures(pointsArray, wasm);\n  }\n  return null;\n}\n\n/**\n * create geoda pointCollection from dataToFeatures[] in GeojsonLayer\n * @param pointsArray BinaryFeatureCollection['points'] An array of binary point features from chunks of geoarrow\n * @returns pointCollection | null\n */\nexport function createGeoDaPointsFromBinaryFeatures(\n  pointsArray: Array<BinaryFeatureCollection['points']>,\n  wasm: CustomEmbindModule\n): PointCollection {\n  // create PointCollection from binaryFeatures\n  const xs = new wasm.VectorDouble();\n  const ys = new wasm.VectorDouble();\n  const parts = new wasm.VectorUInt();\n  const sizes = new wasm.VectorUInt();\n\n  for (let chunkIndex = 0; chunkIndex < pointsArray.length; chunkIndex++) {\n    const points = pointsArray[chunkIndex];\n    if (points) {\n      const coords = points.positions.value;\n      for (let i = 0; i < coords.length; i += 2) {\n        xs.push_back(coords[i]);\n        ys.push_back(coords[i + 1]);\n      }\n      // get index as the start of each part when points.featureIds.value[i] changed\n      let index = 0;\n      for (let i = 0; i < points.featureIds.value.length; i++) {\n        // eslint-disable-next-line max-depth\n        if (i === 0) {\n          parts.push_back(index);\n        } else if (points.featureIds.value[i] !== points.featureIds.value[i - 1]) {\n          parts.push_back(index);\n        }\n        index++;\n      }\n      // get sizes from parts\n      for (let i = 1; i < parts.size(); i++) {\n        sizes.push_back(parts.get(i) - parts.get(i - 1));\n      }\n    }\n  }\n  const pointCollection = new wasm.PointCollection(xs, ys, parts, sizes, false);\n  return pointCollection;\n}\n\n/**\n * create geoda lineCollection from dataToFeatures[] in GeojsonLayer\n * @param linesArray BinaryFeatureCollection['lines'][] An array of binary line features from chunks of geoarrow\n * @returns LineCollection | null\n */\nexport function createGeoDaLinesFromBinaryFeatures(\n  linesArray: Array<BinaryFeatureCollection['lines']>,\n  wasm: CustomEmbindModule\n): LineCollection {\n  // create LineCollection from array of binaryFeatures\n  const xs = new wasm.VectorDouble();\n  const ys = new wasm.VectorDouble();\n  const parts = new wasm.VectorUInt();\n  const sizes = new wasm.VectorUInt();\n  const convertToUTM = false;\n\n  for (let lineIndex = 0; lineIndex < linesArray.length; lineIndex++) {\n    const lines = linesArray[lineIndex];\n    if (lines) {\n      const coords = lines.positions.value;\n      const geomOffsets = lines.pathIndices.value;\n\n      // get xs, ys, parts, sizes\n      for (let i = 0; i < coords.length; i += 2) {\n        xs.push_back(coords[i]);\n        ys.push_back(coords[i + 1]);\n      }\n      // parts is geomOffsets\n      for (let i = 0; i < geomOffsets.length; i++) {\n        parts.push_back(geomOffsets[i]);\n      }\n      // get sizes from parts\n      for (let i = 1; i < geomOffsets.length; i++) {\n        sizes.push_back(geomOffsets[i] - geomOffsets[i - 1]);\n      }\n    }\n  }\n\n  const lineCollection = new wasm.LineCollection(xs, ys, parts, sizes, convertToUTM);\n  return lineCollection;\n}\n\n/**\n * create geoda polygonCollection from dataToFeatures[] in GeojsonLayer\n * @param polygonsArray BinaryFeatureCollection['polygons'][] An array of binary polygon features from chunks of geoarrow\n * @returns PolygonCollection | null\n */\n// eslint-disable-next-line max-statements\nexport function createGeoDaPolygonsFromBinaryFeatures(\n  polygonsArray: Array<BinaryFeatureCollection['polygons']>,\n  wasm: CustomEmbindModule\n): PolygonCollection {\n  // create PolygonCollection from array of binaryFeatures\n  const xs = new wasm.VectorDouble();\n  const ys = new wasm.VectorDouble();\n  const parts = new wasm.VectorUInt();\n  const holes = new wasm.VectorUInt();\n  const sizes = new wasm.VectorUInt();\n  const fixPolygon = true;\n  const convertToUTM = false;\n\n  for (let chunkIndex = 0; chunkIndex < polygonsArray.length; chunkIndex++) {\n    const polygons = polygonsArray[chunkIndex];\n    if (polygons) {\n      const coords = polygons.positions.value;\n      const polygonIndices = polygons.polygonIndices.value;\n      const primitivePolygonIndices = polygons.primitivePolygonIndices.value;\n\n      // get xs, ys, parts, sizes\n      for (let i = 0; i < coords.length; i += 2) {\n        xs.push_back(coords[i]);\n        ys.push_back(coords[i + 1]);\n      }\n      let primitiveIndex = 0;\n      for (let i = 0; i < polygonIndices.length - 1; i++) {\n        const startIdx = polygonIndices[i];\n        const endIdx = polygonIndices[i + 1];\n        // eslint-disable-next-line max-depth\n        while (primitivePolygonIndices[primitiveIndex] < endIdx) {\n          // parts: start index of each part\n          // holes: true if the part is a hole\n          // eslint-disable-next-line max-depth\n          if (primitivePolygonIndices[primitiveIndex] > startIdx) {\n            // holeIndices.push(primitivePolygonIndices[primitiveIndex] - startIdx);\n            holes.push_back(1);\n          } else {\n            holes.push_back(0);\n          }\n          parts.push_back(primitivePolygonIndices[primitiveIndex]);\n          primitiveIndex++;\n        }\n        // size: how many parts in each feature: primitiveIndex = number of parts\n        sizes.push_back(primitiveIndex);\n      }\n    }\n  }\n\n  const polygonCollection = new wasm.PolygonCollection(\n    xs,\n    ys,\n    parts,\n    holes,\n    sizes,\n    fixPolygon,\n    convertToUTM\n  );\n  return polygonCollection;\n}\n", "import {initWASM} from '../init';\nimport {vecDoubleToNumber} from '../statistics/local-moran';\n\nexport async function quantileBreaks(k: number, data: number[] | Float32Array): Promise<number[]> {\n  const wasm = await initWASM();\n\n  const n = data.length;\n\n  const wasmUndefs = new wasm.VectorInt();\n  wasmUndefs.resize(n, 0);\n\n  const wasmData = new wasm.VectorDouble();\n  wasmData.resize(n, 0);\n  for (let i = 0; i < n; ++i) {\n    wasmData.set(i, data[i]);\n    if (data[i] === undefined || data[i] === null) {\n      wasmUndefs.set(i, 1);\n    }\n  }\n\n  const result = wasm.quantileBreaks(k, wasmData, wasmUndefs);\n\n  return vecDoubleToNumber(result);\n}\n"],
  "mappings": "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",
  "names": ["require_wasm", "__commonJSMin", "exports", "module", "geoda", "_scriptDir", "moduleArg", "Module", "readyPromiseResolve", "readyPromiseReject", "resolve", "reject", "moduleOverrides", "arguments_", "thisProgram", "quit_", "status", "toThrow", "ENVIRONMENT_IS_WEB", "ENVIRONMENT_IS_WORKER", "ENVIRONMENT_IS_NODE", "scriptDirectory", "locateFile", "path", "read_", "readAsync", "readBinary", "setWindowTitle", "fs", "nodePath", "filename", "binary", "isFileURI", "ret", "onload", "onerror", "err", "data", "url", "xhr", "title", "out", "wasmBinary", "noExitRuntime", "abort", "wasmMemory", "ABORT", "EXITSTATUS", "HEAP8", "HEAPU8", "HEAP16", "HEAPU16", "HEAP32", "HEAPU32", "HEAPF32", "HEAPF64", "updateMemoryViews", "b", "wasmTable", "__ATPRERUN__", "__ATINIT__", "__ATPOSTRUN__", "runtimeInitialized", "preRun", "addOnPreRun", "callRuntimeCallbacks", "initRuntime", "postRun", "addOnPostRun", "cb", "addOnInit", "runDependencies", "runDependencyWatcher", "dependenciesFulfilled", "addRunDependency", "id", "removeRunDependency", "callback", "what", "e", "dataURIPrefix", "isDataURI", "wasmBinaryFile", "getBinarySync", "file", "getBinaryPromise", "binaryFile", "response", "instantiateArrayBuffer", "imports", "receiver", "instance", "reason", "instantiateAsync", "result", "createWasm", "info", "wasmImports", "receiveInstance", "applySignatureConversions", "wasmExports", "receiveInstantiationResult", "callbacks", "exceptionCaught", "exceptionLast", "uncaughtExceptionCount", "___cxa_rethrow", "ptr", "ExceptionInfo", "excPtr", "type", "destructor", "caught", "rethrown", "adjustedPtr", "isPointer", "___cxa_is_pointer_type", "adjusted", "___cxa_throw", "__embind_register_bigint", "primitiveType", "name", "size", "minRange", "maxRange", "embind_init_charCodes", "codes", "i", "embind_charCodes", "readLatin1String", "c", "awaitingDependencies", "registeredTypes", "typeDependencies", "BindingError", "throwBindingError", "message", "InternalError", "throwInternalError", "whenDependentTypesAreResolved", "myTypes", "dependentTypes", "getTypeConverters", "onComplete", "typeConverters", "myTypeConverters", "registerType", "unregisteredTypes", "registered", "dt", "sharedRegisterType", "rawType", "registeredInstance", "options", "GenericWireTypeSize", "__embind_register_bool", "trueValue", "falseValue", "wt", "destructors", "o", "pointer", "ClassHandle_isAliasOf", "other", "ClassHandle", "leftClass", "left", "rightClass", "right", "shallowCopyInternalPointer", "throwInstanceAlreadyDeleted", "obj", "getInstanceTypeName", "handle", "finalizationRegistry", "detachFinalizer", "runDestructor", "$$", "releaseClassHandle", "toDelete", "downcastPointer", "ptrClass", "desiredClass", "rv", "registeredPointers", "getInheritedInstanceCount", "registeredInstances", "getLiveInheritedInstances", "k", "deletionQueue", "flushPendingDeletes", "delayFunction", "setDelayFunction", "fn", "init_embind", "getBasestPointer", "class_", "getInheritedInstance", "makeClassHandle", "prototype", "record", "hasSmartPtrType", "hasSmartPtr", "attachFinalizer", "RegisteredPointer_fromWireType", "rawPointer", "makeDefaultHandle", "actualType", "registeredPointerRecord", "toType", "dp", "ClassHandle_clone", "clone", "ClassHandle_delete", "ClassHandle_isDeleted", "ClassHandle_deleteLater", "init_ClassHandle", "char_0", "char_9", "makeLegalFunctionName", "f", "createNamedFunction", "body", "ensureOverloadTable", "proto", "methodName", "humanName", "prevFunc", "exposePublicSymbol", "value", "numArguments", "RegisteredClass", "constructor", "instancePrototype", "rawDestructor", "baseClass", "getActualType", "upcast", "downcast", "upcastPointer", "constNoSmartPtrRawPointerToWireType", "embindRepr", "handleClass", "genericPointerToWireType", "clonedHandle", "Emval", "nonConstNoSmartPtrRawPointerToWireType", "readPointer", "RegisteredPointer_getPointee", "RegisteredPointer_destructor", "RegisteredPointer_deleteObject", "init_RegisteredPointer", "RegisteredPointer", "registeredClass", "isReference", "isConst", "isSmartPointer", "pointeeType", "sharingPolicy", "rawGetPointee", "rawConstructor", "rawShare", "replacePublicSymbol", "dynCallLegacy", "sig", "args", "wasmTableMirror", "getWasmTableEntry", "funcPtr", "func", "dynCall", "rtn", "getDynCaller", "argCache", "embind__requireFunction", "signature", "rawFunction", "makeDynCaller", "fp", "extendError", "baseErrorType", "errorName", "errorClass", "stack", "UnboundTypeError", "getTypeName", "___getTypeName", "_free", "throwUnboundTypeError", "types", "unboundTypes", "seen", "visit", "__embind_register_class", "rawPointerType", "rawConstPointerType", "baseClassRawType", "getActualTypeSignature", "upcastSignature", "downcastSignature", "destructorSignature", "legalFunctionName", "base", "basePrototype", "referenceConverter", "pointerConverter", "constPointerConverter", "heap32VectorToArray", "count", "firstElement", "array", "runDestructors", "del", "newFunc", "argumentList", "dummy", "r", "craftInvokerFunction", "argTypes", "classType", "cppInvokerFunc", "cppTargetFunc", "isAsync", "argCount", "isClassMethodFunc", "needsDestructorStack", "returns", "argsList", "argsListWired", "invokerFnBody", "dtorStack", "args1", "args2", "paramName", "__embind_register_class_constructor", "rawClassType", "rawArgTypesAddr", "invokerSignature", "invoker", "rawArgTypes", "__embind_register_class_function", "rawInvoker", "context", "isPureVirtual", "unboundTypesHandler", "method", "memberFunction", "handleAllocatorInit", "HandleAllocator", "emval_handles", "__emval_decref", "count_emval_handles", "init_emval", "simpleReadValueFromPointer", "__embind_register_emval", "enumReadValueFromPointer", "width", "signed", "__embind_register_enum", "isSigned", "ctor", "requireRegisteredType", "impl", "__embind_register_enum_value", "rawEnumType", "enumValue", "enumType", "Enum", "Value", "v", "floatReadValueFromPointer", "__embind_register_float", "__embind_register_function", "invokerArgsArray", "integerReadValueFromPointer", "__embind_register_integer", "fromWireType", "bitshift", "isUnsignedType", "checkAssertions", "toTypeName", "toWireType", "__embind_register_memory_view", "dataTypeIndex", "typeMapping", "TA", "decodeMemoryView", "stringToUTF8Array", "str", "heap", "outIdx", "maxBytesToWrite", "startIdx", "endIdx", "u1", "stringToUTF8", "outPtr", "lengthBytesUTF8", "len", "UTF8Decoder", "UTF8ArrayToString", "heapOrArray", "idx", "maxBytesToRead", "endPtr", "u0", "u2", "ch", "UTF8ToString", "__embind_register_std_string", "stdStringIsUTF8", "length", "payload", "decodeStartPtr", "currentBytePtr", "maxRead", "stringSegment", "a", "valueIsOfTypeString", "_malloc", "charCode", "UTF16Decoder", "UTF16ToString", "maxIdx", "codeUnit", "stringToUTF16", "startPtr", "numCharsToWrite", "lengthBytesUTF16", "UTF32ToString", "utf32", "stringToUTF32", "trailSurrogate", "lengthBytesUTF32", "__embind_register_std_wstring", "charSize", "decodeString", "encodeString", "getHeap", "lengthBytesUTF", "shift", "HEAP", "maxReadBytes", "__embind_register_void", "__emval_incref", "__emval_take_value", "arg", "_abort", "_emscripten_memcpy_big", "dest", "src", "num", "getHeapMax", "growMemory", "pages", "_emscripten_resize_heap", "requestedSize", "oldSize", "maxHeapSize", "alignUp", "x", "multiple", "cutDown", "overGrownHeapSize", "newSize", "replacement", "___wasm_call_ctors", "a0", "__embind_initialize_bindings", "___errno_location", "makeWrapper_pp", "makeWrapper_p", "calledRun", "runCaller", "run", "doRun", "import_wasm", "geoda", "geodaAny", "wasmInstancePromise", "initWASM", "resetWASM", "wasmInstance", "instance", "setWASM", "getWASM", "getPolygonCollection", "features", "wasm", "fixPolygon", "convertToUTM", "ptIndex", "xs", "ys", "parts", "holes", "sizes", "handlePolygonRing", "polygon", "numParts", "j", "m", "ring", "npts", "pt", "i", "n", "feat", "poly", "getLineCollection", "handleLineSegment", "lineSeg", "validLine", "getPointCollection", "handlePoint", "point", "isValid", "getPointCollectionFromLatLng", "lat", "lng", "start", "end", "getGeometryCollection", "input", "geomType", "getGeojsonPolygon", "numPoints", "numExtRings", "multiPoly", "polyIndex", "coordinates", "getCentroids", "polygons", "wasm", "initWASM", "geodaPolys", "getPolygonCollection", "coords", "numPoints", "centroids", "i", "getCentroid", "feature", "getWASM", "geomType", "geom", "getLineCollection", "getPointCollection", "getGeojsonCentroids", "features", "result", "nFeatures", "validIndex", "validFeatures", "feat", "featureGeomType", "n", "DistanceUnit", "getDistanceThresholds", "distanceUnit", "geometries", "latLngArrays", "n", "minDistanceThreshold", "suggestedDistanceThreshold", "maxDistanceThreshold", "wasmInstance", "initWASM", "geomCollection", "getGeometryCollection", "result", "getDistanceBasedNeighbors", "distanceThreshold", "neighbors", "i", "nbrs", "nbrIndices", "j", "nbrSize", "mileToMeters", "lengthToMeters", "distance", "unit", "mileToMeters", "getBuffersSync", "features", "bufferDistance", "distanceUnit", "pointsPerCircle", "wasmInstance", "nFeatures", "result", "wasm", "getWASM", "validIndex", "validFeatures", "geomType", "i", "feat", "featureGeomType", "convertToUTM", "geom", "getPolygonCollection", "getLineCollection", "getPointCollection", "dist", "lengthToMeters", "n", "idx", "bufferPoly", "bufferGeojson", "getGeojsonPolygon", "getBufferSync", "feature", "SpatialJoinType", "spatialJoin", "source", "join", "spatialJoinOperation", "wasmInstance", "initWASM", "runSpatialJoin", "start", "end", "sourceGeometryCollection", "getGeometryCollection", "joinGeometryCollection", "spatialJoinOp", "result", "joinRelation", "i", "n", "rightIndices", "relation", "j", "m", "prepareParallelSpatialJoin", "source", "join", "spatialJoinOperation", "workerCount", "taskDataArray", "sourceSize", "joinSize", "divideRight", "bigSize", "workChunk", "remainder", "indexTable", "initSpatialJoinTasks", "taskIndex", "start", "end", "prepareJoinDataset", "i", "taskData", "dataset", "noSlicing", "processJoinResultsFromWorker", "result", "taskId", "joinRelation", "n", "rightIndices", "j", "m", "DEFAULT_WORKER_COUNT", "parallelSpatialJoin", "source", "join", "spatialJoinOperation", "options", "workerCount", "preparedData", "prepareParallelSpatialJoin", "sourceSize", "divideRight", "indexTable", "taskDataArray", "joinRelation", "i", "runningWorkers", "joinResolve", "onTaskDone", "event", "result", "taskId", "processJoinResultsFromWorker", "processSpatialJoinTasks", "resolve", "taskData", "instance", "spatialMerge", "polygons", "wasmInstance", "initWASM", "spatialMergeSync", "wasm", "getWASM", "polygonCollection", "getPolygonCollection", "poly", "getGeojsonPolygon", "spatialCount", "polygons", "points", "n", "counts", "wasmInstance", "initWASM", "polygonCollection", "getPolygonCollection", "pointCollection", "getPointCollection", "getPointCollectionFromLatLng", "result", "i", "getNearestNeighbors", "k", "geometries", "latLngArrays", "n", "neighbors", "wasmInstance", "initWASM", "geomCollection", "getGeometryCollection", "result", "i", "nbrs", "nbrIndices", "j", "nbrSize", "localMoran", "data", "neighbors", "permutation", "wasm", "initWASM", "n", "wasmData", "i", "wasmNeighbors", "nbrs", "wasmNeighborIndices", "j", "numNbrs", "result", "vecDoubleToNumber", "createGeoDaPointsFromBinaryFeatures", "pointsArray", "wasm", "xs", "ys", "parts", "sizes", "chunkIndex", "points", "coords", "i", "index", "quantileBreaks", "k", "data", "wasm", "initWASM", "n", "wasmUndefs", "wasmData", "i", "result", "vecDoubleToNumber"]
}
